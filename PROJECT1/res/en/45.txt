network work group crocker request comment march protocol note overview network protocol provid facil connect establish flow control reconnect reconnect consid separ connect establish part complex reconnect part don enough experi with protocol present concept integr fashion connect establish connect establish work essenti same nwg rfc major chang general form switch provid independ establish establish simplifi by includ switch procedur rough scenario connect establish follow process pa host grab socket sa request connect with socket sb process pa accomplish system call concurr with process pb host grab socket sb request connect with socket sa respons process pa request network control program host refer ncpa send request connect rfc command host ncpb host send similar command host order impli ncpb send command ncpa befor after receiv command ncpa ncpa ncpb both awar connect establish receiv rfc command receiv rfnm sent notifi process pa pb respect connect establish crocker page rfc protocol note march rule adher sa send socket sb receiv socket vice versa condit state sa sb send receiv pair send process send flow control order prevent send process flood receiv process necessari receiv process stop flow flow control integr network rfnm handl receiv host wish inhibit flow particular link host send special messag imp caus next rfnm link modifi send host interpret messag rfnm request stop send confirm control command return receiv host readi receiv again send command rsm tell send host resum send reconnect great reason desir switch both end connect socket depend restrict switch process easi hard implement achiev maximum general present scheme dynam reconnect mean reconnect can take place after flow start turn major case scheme expens than need howev follow virtu claim various form switch connect provid reconnect introduc overhead process messag sent connect whole cost born process protocol bb argu unlimit buffer provid possibl proper strategi but foreign way think base protocol design assumpt small buffer provid receiv end connect crocker page rfc protocol note march ii data structur connect tabl process tabl input link tabl output link tabl link assign tabl connect tabl hold inform pertain local socket particular socket engag connect state connect entri key by local socket but tabl pointer tabl see process tabl input link tabl output link tabl entri contain follow inform local socket key foreign socket link connect state flow state buffer control pointer user process reconnect control state queue wait caller local socket bit number entri exist particular socket creat with null valu foreign socket bit number field unassign connect establish link bit number link data sent sender receiv socket receiv socket iff low order bit connect state refer connect open follow possibl occur local process request connect foreign process es request connect connect establish reconnect progress close wait reconnect wait crocker page rfc protocol note march flow state buffer control refer check rfnm send accept ceas suspend resum command keep track incom outgo data pointer user process necessari process request connect reconnect progress necessari keep track sequenc event socket engag reconnect end middl middl necessari store bit middl attach same process record receipt end rdi command final rfc receiv socket busi process engag rfc stack queue name local socket process tabl tabl associ process with socket use process system call input link tabl tabl associ receiv link with local socket use decid incom messag destin output link tabl tabl associ send link with local socket use interpret rfnm rsm command link assign tabl link assign by receiv tabl show link free crocker page rfc protocol note march iii control command command summari command oper form nop nop purpos command includ complet conveni request connect form bit socket number local sender bit socket number local receiv bit link number socket send receiv pair includ receiv socket purpos command use initi connect host exchang rfc command with same argument revers connect establish link assign by receiv crocker page rfc protocol note march close form same purpos command use block connect use abort establish connect refus request happen connect between name socket establish process establish event discard resum form purpos command sent by receiv host caus send host resum transmiss name link send host suspend send receiv special rfnm messag special rfnm generat by receiv imp request by host suspend form purpos command sent by send host acknowledg stop send name link transmiss resum command receiv final end form bit socket number socket local sender bit socket number socket local receiv form send receiv pair connect establish between bit socket number same type crocker page rfc protocol note march purpos process decid short circuit by connect receiv socket send socket ncp send command direct initi receiv command ncp check engag reconnect command pass with new howev befor pass compar with new equal loop detect both socket close engag reconnect mark end chain reconnect sent back connect name progress sent back discard end found form bit link bit socket purpos command indic socket end chain reconnect generat pass back termin socket via intermedi socket send socket refer connect with send socket send host receiv socket receiv host receiv socket refer connect with send socket receiv host receiv socket send hose send end receiv refer transmiss control command crocker page rfc protocol note march readi form bit link number purpos command sent send socket receiv socket indic messag forward reconnect occur assign new link form purpos command complet reconnect sent receiv socket send socket after receiv socket receiv new link assign transmiss commenc rfc put machin readabl form entri onlin rfc archiv by marc blanchett crocker page