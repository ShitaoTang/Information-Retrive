vint cerf ucla eric harslem rand rfc john heafner rand nic categori bob metcalf mit updat obsolet jim white ucsb data reconfigur servic compil interpret implement note new featur languag mean find arbitrari number ebcdic charact store identifi descriptor termin by invalid ebcdic by exceed maximum permiss charact count assign caus attribut identifi given length type content concaten right hand side store result binari result valu length equal sum join built identifi function type identifi length content content convert binari decim binari present transform new type ed ad ebcdic ascii encod decim respect ad complement function new type sb ad sign binari type logic binari string syntact notat return form chang see new syntax page data reconfigur servic rfc ii new syntax form rule form rule label inputstream outputstream label integ null inputstream term null term term term term outputstream term null term identifi identifi descriptor descriptor compar identifi descriptor replicationexpr datatyp valueexpr lengthexpr control compar concatexpr connect concatexpr control identifi concatexpr control replicationexpr arithmetricexpr null datatyp ed ad sb identifi valueexpr concatexpr null lengthexpr arithmeticexpr null connect le lt gt ge eq ne concatexpr valu concatexpr valu valu liter arithmeticexpr arithmeticexpr primari arithmeticexpr oper primari primari identifi identifi identifi integ oper liter literaltyp string literaltyp ed ad sb string control option null option sfur arithmeticexpr sfur arithmeticexpr sfur arithmeticexpr sfur sr fr ur page data reconfigur servic rfc iii form interpret interpret overview interpret simpl mind machin virtu help compil writer by provid power instruct set hard compil oper figur show machin configur inputstream outputstream cpu storag instruct sequenc label tabl liter identifi pool variabl length string area fig form interpret page data reconfigur servic rfc cpu box full miscellan part import arithmet logic unit instruct decod unit cpu maintain collect state regist keep track figur show rough layout instruct instruct counter regist oper code decod run time stack operand instruct interpret routin arithmet logic unit initi input ptr output pointer current input ptr true fals flag page data reconfigur servic rfc fig central processor cpu stack machin driven by polish postfix instruct sequenc operand run time stack use arithmet express evalu paramet pass between interpret built function current input pointer output pointer keep track data stream input pointer need backup requir event rule failur pointer bit pointer stream various implement run time stack independ interpret drs machin instruct set suggest stack contain instruct operand instruct stream format compil instruct sequenc form shown fig bit length byte compil bit instruct fig compil instruct sequenc format page data reconfigur servic rfc format compil label tabl shown fig bit length byte numer valu byte offset statement number inst seq bit fig compil label tabl page data reconfigur servic rfc liter identifi compil shown fig length length byte byte type bit length byte offset identifi liter byte align liter legend type undefin binari octal hexadecim ebcdic ascii ed ebcdic encod decim ad ascii encod decim sb sign binari complement fig compil liter identifi page data reconfigur servic rfc type ad ed sb point bit word align data shown below word align bit right justifi type point byte align symbol stream shown below byte align page data reconfigur servic rfc instruct format liter identifi store same data area than liter identifi encount than bit need refer liter id pool refer distinguish oper instruct stream bit instruct use shown below ld liter identifi refer bit posit integ ic bit complement integ constant op oper ad address bit posit integ arb indefinit replic factor null miss attribut term oper code decod pick type deposit top stack tos ld index liter identifi tabl ad index instruct sequenc decod examin op element op binari oper unari oper special oper page data reconfigur servic rfc binari oper tos contain next level binari oper comput pop both stack put result back top stack tos tos binari oper encod integ integ integ integ remaind concaten binari oper except concaten expect top element stack describ type sb result alway bit type element concaten oper fail unless both type ident exampl suggest stack realli contain instruct operand describ data conveni illustr data than descriptor shown stack page data reconfigur servic rfc type valu tos tos befor oper after oper tos de abcd tos abc befor oper after oper binari oper effect true fals flag unari oper integ minus load identifi evalu content after dec binari convers length field type field label tabl refer page data reconfigur servic rfc unari minus oper data describ by top stack replac with complement form fail tos type sb load identifi expect tos describ index liter identifi pool ld instruct tos describ data replac by bit type valu oper fail content can not convert encod decim binari type treat unsign integ sb treat complement label tabl refer oper expect bit type valu describ by tos search label label tabl found tos describ data replac by relat address instruct sequenc label form ad instruct found form fail unari oper effect true fals flag special oper store tos return branch true fals uncondit compar eq le ge ne lt gt move input ptr store current initi store initi current input call compar compar output call page data reconfigur servic rfc store tos tos describ index id tabl next lower element stack describ valu store after execut both element pop stack return tos describ valu return routin initi form machin actual mechan implement depend but form machin relin quish control after instruct complet execut branch tos describ index instruct sequenc use new instruct counter ic branch condit satisfi branch instruct check state true fals flag regist increment ic by replac with tos describ element case tos pop compar compar oper take element describ by top stack entri compar eq lt top stack below xx perform true fals flag set xx eq ne ident type length content equal hold boolean compar attempt type differ form fail but same type caus binari justifi compar ad ed caus left justifi string compar with shorter string pad with blank move input pointer oper operand replac current input pointer with initi input pointer back initi input pointer with current entri rule input call complex oper far encount requir operand run time stack page data reconfigur servic rfc tos binari null length find ld liter null valu liter binari code input data type binari arbitrari null replic count input call oper can invok with compar flag set case valu express paramet ignor input type length express use case input routin tri find input stream charact requir type bit digit need fill length express requir success true fals flag set true stack pop remov input paramet string obtain describ by tos input stream can not match paramet pop stack true fals flag set fals compar flag set input stream search valu express howev take care know look case length express paramet greater than length valu express but type input de sire same valu express type type right justifi valu express length express field sign bit extend left type bs type ad ed pad right with blank same but length small type string truncat left ad ed truncat right type valu express type paramet differ case defer discuss pre sentli consid error caus form failur input string match true fals flag set true paramet pop stack result string describ by tos otherwis fals flag set paramet pop success match found input subroutin alway advanc current input pointer by appropri amount deal bit level pointer maintain bit pointer page data reconfigur servic rfc output call routin util same paramet input call but oper output stream true fals flag distribut by oper input paramet top stack length express valu valu express valu desir output type replic express valu mis match between output type valu express type convers take place valu express tran form desir output type fit field length specifi by length express truncat pad rule charact charact ad ed ad ed convers left justifi truncat pad with blank right charact numer numer charact convers right justifi truncat pad left with zero bewar complement number bollix by numer charact convers right justifi left pad with blank left truncat unari oper numer bit string treat unsign except sb treat complement ed ff ed but ed sb output routin perform desir action advanc output stream pointer pop paramet run time stack page data reconfigur servic rfc instruct set id ref ld liter identifi refer tos int const ic small comp integ constant tos address ad address tos null paramet null miss term attribut add add tos tos subtract sub tos tos multipli mul tos tos divid div tos tos concaten con tos tos unari minus unin tos tos load id valu liv tos ld ld tos load id length lil tos ld ld tos load id type lit tos ld ld tos look label lvl tos ad tos sto sto tos return ret tos return caller with branch true bt tos ad ad instr counter branch fals bf tos ad ad instr counter branch bu tos ad ad instr counter compar equal ceq tos eq true fals flag compar equal cne tos ne ff compar cle tos le ff call output tos output call input compar tos tos inn compar current initi scip cip iip store current input ptr initi ip initi current sicp iip cip store initi input ptr cip page data reconfigur servic rfc vi exampl compil form sourc generat polish instruct sequenc addr instr comment numb sicp rule prelud ic ld refer numb sto store numb scip rule postlud cc fr sicp rule prelud null replic express ic type ebcdic null valu express ic length inn input call with compar ad bt skip return inn succeed ic return code ret return caller fail ld refer cc sto store input data cc line null replic express fr ic type ebcdic null valu express ic length inn input with compar ad bt skip return ic return code ret return caller fail ld refer line sto store input line cc scip success input null replic factor ld refer cc lit type cc ld refer valu cc ld cc again lil length cc output cc ed numb null replic ic type ed ld refer valu numb ic length output field output numb ebcdic dec null replic ic type ebcdic page data reconfigur servic rfc ld refer ic length output output period line null replic ic type ebcdic ld refer line ic length output put content line numb numb ld refer numb ic amount add add add numb ld refer numb sto store back numb ad place go uncondit branch back liter identifi tabl numb cc line label tabl label offset rfc put machin readabl form entri onlin rfc archiv by simon demmel page