network work group newkirk request comment kraley harvard postel crocker ucla june prototyp implement ncp involv attempt specifi formal protocol attempt formul prototyp ncp algol like languag after week concentr effort project abandon realiz code becom unread still howev felt need demonstr concept ncp implement felt help suggest solut problem aris tri mold formal specif exist system document attempt specifi prose format ncp could look like obvious limit project natur can not know quirk various system write ncp forc make assumpt environ system call like tri general possibl but doubt site complet differ way conceptu ncp great difficulti involv convey concept mechan deal with concept peopl wholli differ way look thing howev benefit great by tri code program fictiti machin unforeseen problem surfac dure code hope by issu document can help allevi similar problem aris individu case cours absolut requir implement contain document rigid rule ncp conform state nwg rfc descript intend exampl model discuss follow describ environ assum postul set system call discuss architectur ncp tabl use hold relev inform narrat network oper follow state diagram present conveni method conceptu caus effect sequenc event detail process type network event system call incom network messag discuss newkirk al page rfc prototyp implement ncp june ii environ assum host time share oper system cpu share by process envis process tag with user number than process with same user number cooper with respect use network envis process contain set port uniqu process port use input output process file devic process envis process put sleep block dismiss attempt listen connect inform action complet cours process dismiss wake extern event engag network activ process attach local socket port socket identifi by user number host aen socket local process user number match same host process need specifi aen refer local socket port status modifi by system call concurr event outsid process close connect command foreign host process look port status time via status system call assum correspond between port socket iii system call typic system call user process execut use notat syscal arg arg syscal system call argk paramet system call newkirk al page rfc prototyp implement ncp june connect aen fs cr specifi port process aen specifi local socket user number host implicit fs specifi socket with user number hose with aen cr condit code return connect attempt attach local socket specifi by aen port initi connect with specif foreign socket fs possibl valu cr cr connect legal socket fs contact connect establish refus status updat cr busi local socket use illeg command sequenc cr badskt socket specif illeg cr noroom local host resourc exhaust cr homosex incorrect send receiv pair cr imp dead imp die cr link dead link foreign host dead foreign imp dead foreign host dead foreign ncp respond listen aen cr specifi port process aen specifi local socket cr condit code return local socket specifi by aen attach port pend call process otherwis action taken call come user notifi after examin call accept refus possibl valu cr cr connect begun listen cr busi newkirk al page rfc prototyp implement ncp june cr noroom cr imp dead cr link dead accept cr specifi port process cr condit code return accept impli user process inspect foreign socket determin call accept call note interest altern defin accept implicit default condit incom rfc automat satisfi listen possibl valu cr cr badskt cr noroom cr imp dead cr link dead cr badcomm illeg command sequenc accept issu befor listen cr premcl foreign user abort connect after rfc local receiv but befor accept execut transmit buff bitsrqst bitsacc cr specifi port process buff specifi text buffer transmiss bitsrqst specifi length transmit bit bitsacc return number bit transmit cr condit code return transmiss take place possibl valu cr cr cr imp dead cr link dead newkirk al page rfc prototyp implement ncp june cr open connect open illeg command sequenc cr bad bound bitsrqst bound receiv socket buff shorter than bitsrqst indic int cr specifi local socket process cr condit code return process foreign side port interrupt possibl valu cr cr cr badskt cr badcomm cr imp dead cr link dead status rtab cr specifi port process rtab return rendezv tabl entri cr condit code return relev field rendezv tabl entri associ with port return rtab mechan user process employ monitor state connect possibl valu cr cr cr badskt newkirk al page rfc prototyp implement ncp june close cr specifi port process cr condit code return activ connect attach port stop connect broken port becom free use possibl valu cr cr cr badskt cr badcomm cr imp dead cr link dead iv ncp gross structur view ncp compon program associ tabl queue buffer compon program see fig input handler interrupt driven routin initi imp host transmiss resid buffer wake input interpret transmiss complet output handler interrupt driven output routin initi host imp transmiss resid buffer wake output schedul transmiss complet input interpret program decid input regular messag intend user network control messag imp host messag error class messag program invok subroutin take appropri action newkirk al page rfc prototyp implement ncp june output schedul class messag sent imp host imp messag control messag regular messag believ prioriti impos among class prioriti suggest order output schedul select highest prioriti messag pass output handler host imp messag process come serv control messag process individu by host host taken turn control messag queue foreign host provid particular host schedul output control command host fit concaten singl messag regular messag process group by host link uniqu combin taken turn system call interpret program interpret request user system call correspond routin take appropri action interest compon input interpret system call interpret similar input interpret servic foreign request system call interpret servic local request diagram figur concept network control program squishi amoeba like object repres compon program cylind repres queue arrow repres data path simplifi diagram tabl shown amoeba like object origin hand draw firm rectangular box ed abbrevi label figur follow mean hiq host imp queue occq output control command queue dq data queue ihbuf input handler buffer ohbuf output handler buffer newkirk al page rfc prototyp implement ncp june user structur network control program fig system call interpret input interpret output schedul output input handler handler newkirk al page rfc prototyp implement ncp june tabl ncp envis bulk ncp data base associ tabl by associ lookup routin present with key return success with pointer correspond entri fail entri correspond key major tabl follow rendezv tabl tabl hold attribut connect tabl access by local socket but tabl pointer exist entri compon entri local socket foreign socket link connect state flow state data queue call queue port pointer buffer size need send side error state entri creat connect listen system call execut request connect receiv various field remain unus until after connect establish input link tabl input interpret use concaten foreign host link key input tabl tabl use process user destin messag incom link by provid pointer rendezv tabl output link tabl input interpret use output link tabl access flow state rfnm return transmit messag output link tabl key by host link provid pointer rendezv tabl newkirk al page rfc prototyp implement ncp june port tabl system call interpret use concaten process identif port identif key obtain pointer rendezv tabl output control command tabl system call interpret input interpret use tabl make entri appropri output control command queue command queu separ tabl entri correspond foreign host befor output content queue concaten larg control messag compon entri host output control command queue output request queue queue contain entri connect data requir transmiss net entri per connect delet last packet data transmit enter user make system request data transmiss entri insert transmiss complet messag long prevent by flow control mechan compon entri local socket host live tabl simpl tabl list host aliv tabl check befor establish connect befor send data ensur destin host exist present protocol defin procedur follow host host down condit see nwg rfc link assign tabl link number assign by receiv tabl record link free can assign newkirk al page rfc prototyp implement ncp june vi inform descript network oper present narrat describ oper conduct dure major phase network usag open flow control close open order establish connect data transmiss pair rfc exchang rts go receiv side send side str issu by send side receiv side addit receiv side rts specifi link number rfc rfc generic term encompass rts str issu time sequenc provis made queu pend call rfc dealt with by user program user finish with connect choos examin next pend call process decid accept refus request connect problem develop user choos examin pend call serv occupi queue space ncp altern solut problem mention util framework prototyp system call describ envis tempor sequenc obtain success open connect user issu listen indic will consid connect send rfc rfc come user notifi user decid wish connect socket issu accept close basi decis close refus connect discuss under close accept indic will connect rfc issu connect becom fulli open process user request listen ncp discov pend call exist local socket user immedi notifi accept close user issu connect specifi particular foreign socket like connect rfc issu foreign process accept request answer by return rfc acknowledg rfc receiv connect open newkirk al page rfc prototyp implement ncp june present with connect ncp discov pend call exist specifi foreign socket local socket question acknowledg rfc issu connect open case user notifi connect open but data flow can not begin until buffer space alloc command transmit connect scenario interrupt cls come discuss under close pend call queue essenti form queu pend rfc implement simpl way see examin typic listen connect sequenc side issu listen connect listen issu befor rfc come remot connect arriv fine howev due asynchron natur net can never guarante sequenc event occur call queu rfc come befor listen issu refus arriv accept extrem ambigu situat unless infinit queue space desir mechan purg queue rfc user never bother examin obvious but inform method note time rfc enter queue period refus rfc exceed arbitrari time limit thought probabl includ within context scheme ncp send cls outstand connect pend call user log blow scheme util descript seem blush intuit but feel realist than propos basic connect issu ncp assum socket wish talk specifi foreign socket socket purg pend call queue match rfc by send back cls similar connect rfc send state connect issu match rfc refus listen accept listen close sequenc execut remaind newkirk al page rfc prototyp implement ncp june pend call remov queue expect user wish accept request futur method seem arbitrari unnecessarili restrict concoct scenario prohibit by method assum deal with compet programm wari race condit asynchron natur net cours whatev scheme scheme particular site choos high implement depend suggest provis queu rfc provid period time order magnitud retain connect clear scheme mention flow control meaning data can flow connect fulli open rfc exchang close begun assum ncp buffer receiv incom data meaning quantiti can advertis per connect basi indic size messag can handl assum send side regul transmiss advertis size connect open cell call size set receiv side decid space can alloc send messag specifi space send side increment size by alloc space send messag length than equal size messag transmit length messag subtract size receiv side alloc buffer space messag taken by user free system buffer space number bit releas sent send side via messag size never allow becom negat transmiss can take place size equal notic length specifi messag increment absolut size receiv buffer necessit by full duplex natur flow control protocol length field messag can bit long note unsign integ provid facil essenti infinit bit sink desir newkirk al page rfc prototyp implement ncp june close rfc requir open connect cls requir close connect close occur under various circumst serv purpos simplifi analysi race condit distinguish case abort refus termin by receiv termin by sender user abort connect issu connect close befor connect acknowledg typic user abort follow extend wait acknowledg system abort blow user refus connect issu listen after notifi prospect caller issu close request connect socket expect call particular socket refus after connect establish side termin requir sequenc event suggest attempt close by receiv side view request alway honor soon possibl by send side data pass user continu network discard request close by send side honor soon data transmiss complet abort distinguish case simplest case send rfc follow by cls side respond with cls attempt connect end foreign process accept connect concurr with local process abort case foreign process believ local process termin open connect foreign process refus connect concurr with local process abort case foreign process believ local process acknowledg refus newkirk al page rfc prototyp implement ncp june refus after rfc receiv local host respond with rfc cls fail respond local host sent rfc local host send cls local host said refus request connect requir cls command exchang close connect necessari local host maintain rendezv tabl entri until acknowledg cls return termin by sender user send side issu close system call ncp accept immedi but send cls command until data local buffer pass foreign host necessari test both buffer empti rfnm receiv befor send cls command usual cls acknowledg befor entri delet termin by receiv user receiv side issu close system call ncp accept send cls command immedi data still arriv howev data discard send side receiv cls immedi termin data flow vii connect status excel mechan describ sequenc event requir establish termin connect involv state diagram assum socket can associ with state machin state machin time ten possibl state state certain network event caus connect status enter state event ignor still error transit involv local ncp perform action figur depict state machin circl box ed repres state describ below arrow show legal transit between state label arrow identifi event caus note close system call cls control command phrase after slash denot action perform travel arrow arrow label rfc found between state repres newkirk al page rfc prototyp implement ncp june condit connect enter close state pend call queue connect check origin backward ed pend call exist queue connect move pend state rfc receiv socket close state move path pend state event action caus describ section viii ix below descript ten state follow close local socket attach port user request connect with tabl entri exist pend call socket attach port but request connect receiv listen system call satisfi immedi by entri pend call queue match request pend call delet listen socket attach port wait user request connect with socket rfc rcvd listen rfc receiv local user inform pend call respond with close accept abort notifi user listen satisfi but respond dure time foreign user abort connect by send cls send cls acknowledg abort mark fact with state user accept refus call can inform connect prematur termin newkirk al page rfc prototyp implement ncp june rfc sent state enter local user attach socket port by issu connect rfc sent repli receiv user issu connect pend call queue search match rfc found queue delet state enter new rfc arriv compar with user request match rfc immedi refus rfc match complet initi process connect enter open state open rfc exchang connect secur establish transmiss begin follow receipt command receiv side proceed subject flow control cls wait after local user execut close issu cls wait acknowledg cls befor connect can complet close appropri cls receiv state enter data wait send side local user execut close system call cls can not issu data buffer empti rfnm last data messag outstand connect enter state wait condit fulfil complet acknowledg output cls issu connect enter cls wait state wait acknowledg cls cls arriv data wait state clear buffer cls came receiv socket indic longer interest data enter rfnm wait state wait network clear newkirk al page rfc prototyp implement ncp june rfnm wait send side cls command arriv can not issu acknowledg cls receiv rfnm last data messag enter state await rfnm ceas data transmiss rfnm come cls issu connect close newkirk al page rfc prototyp implement ncp june close conn close send rfc listen rfc cls send cls match conn send rfc pend listen rfc listen match conn send rfc accept cls rfc sent rfc send rfc rfc recd send cls snd close rcv cls send cls open snd cls data wait rcv close send cls cls close close send cls cls wait send cls rfnm wait abort cls rfnm send cls cls close send cls accept close figur connect state diagram newkirk al page rfc prototyp implement ncp june viii algorithm input interpret follow concis descript ncp respons incom network command cs alway indic connect state note close system call execut by local user process cls network command nop discard rfc rts str entri exist creat with status pend call queue messag cs listen queue entri enter rfc rcvd state inform user request cs rfc sent but new rfc match request refus rfc case check rfc match exist queue rfc rfc match cs rfc sent enter open state cs close wait rfc ignor otherwis request illeg state indic receiv state case process rfc caus overflow condit resourc exhaust refus connect send cls cls pend call queue search cls doesn match current request but match request delet request issu cls match cls ignor cls match current request cs pend delet current request request queue empti delet entri otherwis leav entri alon newkirk al page rfc prototyp implement ncp june rfc rcvd issu cls enter abort state abort ignor rfc sent issu cls pend call queue empti delet entri enter pend state open receiv side respons ident respons rfc sent send side clear data queue rfnm still pend enter rfnm wait state otherwis respons ident respons rfc sent cls wait issu cls pend call queue empti delet entri otherwis cs pend data wait clear data queue enter rfnm wait state match cls can not occur close listen state err error queu attent by system programm consid system error host origin exchang associ with state eco op code chang erp retransmit associ with state erp receipt erp system pass text command back process issu eco inr in command enabl open state receiv interrupt system caus event sent associ process interrupt ignor cls wait data wait rfnm wait state state error newkirk al page rfc prototyp implement ncp june alloc valid open state sent send socket ncp increment size field associ rendezv tabl entri by size specifi alloc command cls wait data wait state command ignor state error data rfnm open state mark flow control status field appropri rendezv tabl entri rfnm recvd send data requir data wait state mainten flow control status data queue empti issu cls enter cls wait state otherwis transmit next messag rfnm wait state mainten flow control status issu cls pend call queue empti delet rendezv tabl entri otherwis cs pend data rfnm error state ix algorithm system call interpret system call discuss give state chang effect connect entri creat issu rfc enter rfc sent state cs pend search queue reject match request match found issu rfc enter rfc sent state match found issu rfc enter open state transmiss can commenc soon buffer space alloc state command illeg listen entri doesn exist creat enter listen state newkirk al page rfc prototyp implement ncp june cs pend inform user enter rfc rcvd state state command illeg accept cs rfc rcvd issu rfc enter open state data transmiss can occur soon buffer space alloc cs abort inform user prematur termin connect pend call queue empti delet entri otherwis enter pend state command can not legal execut state close cs listen delet entri rfc rcvd issu cls enter cls wait state abort inform user prematur termin connect pend call queue empti delet entri otherwis enter pend state rfc sent issu cls enter cls wait state open send side data queue empti data rfnm still outstand enter data wait state otherwis issu cls enter cls wait state cls wait issu close state user error data wait issu close state illeg sequenc rfnm wait ignor close valid close can not issu entri exist socket pend state rfc put machin readabl form entri onlin rfc archiv by anthoni anderberg newkirk al page