network work group edwin meyer jr request comment massachusett institut technolog april arpa network protocol note attach document contain comment suggest network work group project mac base protocol outlin nwg rfc document propos intend contribut dialog lead protocol specif accept by entir network work group solicit comment introduct document network work group mit project mac suggest modif extens protocol specifi by carr crocker cerf preprint sjcc paper extend by crocker nwg rfc document broad outlin propos but attempt complet specif intend indic type extent protocol think initi implement agre with basic concept simplex communic between socket uniqu identifi propos implement slight modifi subset network command specifi nwg rfc err command specifi by harslem heafner nwg rfc given basic object get arpa contractor network talk earliest possibl date think import implement initi protocol reason simpl extend provid major initi use network simpl protocol elicit broadest possibl support easili implement instal with minimum ad softwar protocol evolv fundament protocol accept implement by instal prove veri resist chang veri import make initi protocol open end flexibl simpl basic protocol succeed respect than complic page rfc arpa network protocol note april preclud exist addit layer protocol between instal long basic protocol remain support feel facil provid initi protocol multi path communic between exist process know connect standard way process connect logger log process host foreign host request creation user process login ritual standard standard way newli creat process initi pseudo typewrit communic with foreign process request creation major differ between protocol propos by carr crocker cerf propos follow dynam reconnect strategi specifi crocker nwg rfc reserv futur implement feel inclus unduli complic initi implement protocol outlin strategi foreign process creation requir dynam reconnect propos preclud implement dynam reconnect date propos instanc tag ad socket identifi separ socket belong differ process same user coexist host follow ncp command ad err command specifi nwg rfc includ blk rsm command present possibl altern ceas link imp command spd rsm command set nwg rfc command oper socket connect than link number imped implement socket connect multiplex singl link number prove desir int command interrupt process specifi feel high import interrupt process engag unwant comput output implement interrupt special format within normal page rfc arpa network protocol note april messag rais sever difficulti connect block interrupt need ncp scan incom messag interrupt signal eco echo command test communic between ncps includ socket conceptu state relat condit under network request queu differ unlimit queu featur present certain implement difficulti protocol regard creation foreign process communic with remov separ user control communic ucc protocol level fulli specifi ii hierarchi protocol seem conveni use view network consist hierarchi protocol implement level addit aid independ softwar hardwar develop provis layer protocol allow addit substitut certain level experiment special purpos system view initi network communic system hierarchi system increas general decreas privileg level imp network network imp physic communic line basic resourc higher level system convert general communic facil imp network act wholesal messag transmiss facil high privileg modul within host network control program host contain modul call network control program ncp sole control communic between host imp network act retail wholesal communic facil provid by imp network network ncps can view higher level communic system surround imp network factor raw messag transmiss capabl between host communic facil between ordinari unprivileg process page rfc arpa network protocol note april proc proc proc proc proc ucc ucc ncp network imp network imp imp imp fig modular view network user control communic modul preced communic system suffici permit communic between unprivileg process exist howev primari initi use network thought involv creation foreign user process interact with foreign host logger user control communic modul ucc implement protocol suffici process communic with foreign host logger make initi control communic with creat process process same privileg subject administr control local foreign host user process ucc modul communic ncp manner similar ordinari process except abil close connect dead page rfc arpa network protocol note april process ucc modul special network privileg ucc protocol level protocol could implement exampl set batch process system connect ncp system implement load share protocol but ucc iii network control program host implement modul call network control program ncp control network communic involv host network ncps form distribut communic system implement communic path between individu process ncp protocol issu involv definit communic path ii system coordin distribut ncp system maintain communic path discuss below socket communic between process made simplex connect between socket send socket attach process receiv socket attach process socket follow characterist socket identifi socket identifi use network uniqu identifi socket consist bit follow compon user number bit socket attach process identifi belong process by user number consist bit home host code bit user code assign by home host user number same socket attach process host instanc tag bit than process belong user simultan exist within singl host instanc tag identifi particular process socket belong user process host use network receiv instanc tag by convent host number bit code host attach process exist socket code bit code provid send receiv socket process low order bit determin send receiv socket page rfc arpa network protocol note april state socket socket associ state ncp implement transitori state socket but follow conceptu import inact current exist process told ncp wish listen socket process can success communic with inact socket open process agre listen event concern socket but connect connect socket current connect socket socket event queue queue event disclos own process maintain open connect socket consist chronolog order list certain event generat by action foreign process tri connect disconnect socket entri event queue consist event type identifi foreign socket concern follow event type defin request foreign socket request connect queu local socket connect accept foreign socket accept request connect reject foreign socket reject request connect close foreign socket disconnect exist connect request event remov queue accept reject event remov queue disclos own process event intend transpar process own socket generat entri event queue event queue conceptu unlimit seem necessari place practic limit length event queue socket full incom event add queue discard send ncp notifi via err command describ below page rfc arpa network protocol note april ncp control communic ncp network coordin activ control command pass between individu compon command general concern creation manipul socket connect control by ncp receiv command control command direct particular ncp by sent host messag link number design control link reserv purpos imp network distinguish between messag regular data messag implement communic socket connect follow ncp control command defin request connect rfc ncp direct command foreign ncp attempt initi connect between local socket foreign socket foreign socket open foreign ncp place request event socket event queue disclosur process own foreign process accept foreign ncp return posit acknowledg form rfc reject connect by issu cls command see below rfc automat reject without consult own process foreign socket open inact connect multipl rfcs same socket event queue order receipt queu rfcs automat reject by ncp own process decid accept connect ncp control receiv socket potenti connect pair design link number messag flow close connect cls ncp issu network command disconnect exist connect negat acknowledg rfc potenti race problem ncp close local send socket cls command reach foreign ncp prior last messag socket connect race prevent by adher standard cls command local send socket transmit until rfnm last messag foreign socket come back ii foreign ncp process incom messag order receiv page rfc arpa network protocol note april block output connect blk process read data receiv socket slower than messag come ncp buffer tend clog ncp issu command foreign ncp block transmiss socket pair until receiv process catch resum output block connect rsm ncp issu command unblock previous block connect interrupt process attach connect int receipt messag caus foreign ncp immedi interrupt foreign process attach connect local socket data transit within ncp network interrupt connect transmit destin socket mean interrupt process immedi break current execut execut standard procedur procedur defin protocol level report erron command foreign ncp err command use report spurious network command messag overload condit prevent process command specifi error type specifi erron network command command includ imp header integ specifi length bit specifi erron messag contain link number erron messag transmit slight modifi specif nwg rfc page rfc arpa network protocol note april network test command eco bit code ncp test qualiti communic between foreign ncp by direct eco command with arbitrari bit code same length socket identifi ncp receiv eco command immedi send acknowledg eco with same bit code origin ncp ncp acknowledg eco with feel command consider aid initi shakedown entir network oper command nop ncp discard command receipt user interfac ncp ncp host interfac local process can exercis network subject control ncp exact specif interfac network protocol issu instal interfac key particular requir protocol requir user interfac ncp provid intend network function illeg privileg exampl illeg privileg includ abil masquerad process eavesdrop communic intend induc ncp send spurious network command messag outlin interfac base carr crocker cerf propos suffici fulli util network particular set call intend illustr purpos indic type function necessari follow call ncp avail listen user open socket creat empti event queue listen call block wait request event return immedi page rfc arpa network protocol note april init user attempt connect local ncp send rfc foreign ncp request connect creat return acknowledgemnet rfc request accept cls request reject caller option init call block expect accept reject event can return immedi without wait case user call status see below time determin action by foreign ncp block init call return accept reject event remov event queue status call report earliest previous unreport event queue status call delet event queue type event delet by disclosur accept user accept connect with foreign socket request event earliest event queue acknowledg rfc sent accept foreign socket request event delet event queue request event exist queue ncp automat deni connect by send cls command delet event reject user reject connect with foreign socket request event earliest event queue ncp send cls command delet request event queue close user direct ncp disconnect activ connect socket deactiv socket ncp send cls command foreign socket connect exist status foreign socket becom close close event disclos foreign process interrupt user direct ncp send int command foreign socket connect page rfc arpa network protocol note april transmit user wish read receiv write send data area point by call write return immedi after ncp queu data send messag connect call write block connect block local ncp load process request immedi data transmit connect format imp messag maximum length bit transmit foreign host link number specifi rfc sent by ncp control receiv connect close event event queue disclos action transmit call write disclos close event immedi read call disclos data read histori connect user view illustr exampl assum process host wish establish connect with process host befor communic can take place condit fulfil process specifi ncp socket socket space want connect process listen socket establish connect process listen socket bb process init bb aa ncp generat rfc specifi link number choos avail set link link receiv messag connect accept by process process inform init request reject connect ncp send back cls accept ncp send back rfc process accept confirm rfc establish connect messag can flow page rfc arpa network protocol note april host host initi acceptor process process listen socket code init socket code bb rfc aa bb link accept socket code rfc bb aa transmit send buffer len socket imp messag link send buffer transmit rec buffer length socket close socket code last rfnm cls bb aa close socket aa fig establish communic socket connect send messag connect process issu transmit call send data connect ncp format imp messag send ncp with link number specifi by rfc ncp receiv raw messag ncp with link number ncp use link number decid intend recipi store messag buffer recipi process process issu read transmit call socket code arbitrari time read call block data pend socket read call pick specifi number bit transmit socket code across imp messag boundari boundari imp messag invis read call page rfc arpa network protocol note april process send data connect faster rate than process pick ncp can issu blk command ncp buffer start fill process catch ncp can tell resum transmiss via rsm command process close connect process decid close connect issu close call ncp avoid race problem wait rfnm previous messag connect send cls command ncp rfnm cls command messag return ncp flush socket bb tabl effect close end deactiv bb sequenti process within ncp last messag socket aa guarante direct process befor cls ncp come receipt cls ncp mark socket aa close pend place close event event queue aa process can still issu read call socket aa buffer data pend issu read call after buffer empti close event disclos inform closur socket aa flush tabl ncp process close connect return step assum process want close connect end race problem assum issu close call longer want read messag socket assum process issu close call socket aa ncp immedi send cls command ncp mark socket aa close pend data buffer read aa discard allow remain messag transit process percol imp network ncp discard without error comment ncp retain aa tabl suitabl period time after receiv rfnm cls command dure period ncp discard messag receiv close connect after allow reason amount time dead messag come ncp flush aa tabl effect close connect deactiv aa messag socket aa result ncp send err erron command origin ncp page rfc arpa network protocol note april ncp receiv cls command socket bb mark close pend cls event event queue bb next time process wish write socket cls event disclos inform closur socket bb remov ncp tabl iv user control communic protocol process exist agre listen network creat process proper identif process call logger interact ncp via network relat user control communic ucc modul implement necessari protocol except instanc close connect dead process process oper ucc modul special network privileg under ucc protocol requestor process direct creation foreign process maintain full duplex pseudo typewrit connect foreign logger creat process duplex connect foreign logger use identifi requestor process logger after login return requestor process basic inform concern health creat process duplex connect creat process use control communic maintain full duplex connect avoid reconnect problem both logger transfer communic creat process need regain control modest expens requir requestor process switch typewrit communic between set connect way communic establish essenti follow requestor process reserv socket contigu socket code signal ucc specifi socket signal ucc know process call by protocol requestor socket pair ucc communic with requestor process requestor socket pair creat process use communic specifi below detail establish oper remot process ucc host alway keep send socket with user number instanc tag open activ unconnect signal socket period check init socket process wish creat process host signal ucc by issu init socket page rfc arpa network protocol note april request process free socket with contigu socket code receiv send high number send receiv set socket use typewrit communic with foreign ucc low number set typewrit communic with creat process requestor process call listen open receiv send pair talk foreign ucc send signal init call ucc signal socket thing ucc with signal init call note down socket number origin ucc immedi reject request keep signal socket open signal after receiv expect reject initi init call ucc signal socket requestor process issu listen creat process init socket establish control communic with requestor process requestor process block by call status ucc init free send receiv socket pair requestor requestor process presum listen requestor process call status with block option after listen socket init foreign ucc reach requestor process status return with init indic requestor process verifi ucc process call accept call requestor process call status return init socket reach similar verifi accept arbitrari choic socket requestor process call status way communic establish requestor process accept both init ucc connect maintain dure login ritual life creat process requestor process fail respond proper within limit amount time init ucc ucc abandon connect attempt requestor process perform login ritual with ucc initi protocol standard login ritual logger satisfi wish cut requestor ucc modul close both after logger sent suitabl messag page rfc arpa network protocol note april satisfi logger creat process user ucc maintain direct communic with requestor but connect use report basic inform concern creat process task creat process establish dual pseudo typewrit control connect with requestor process creat process init send receiv socket pair requestor both request accept creat process send initi messag connect goe command level await typewrit command messag connect creat process unabl establish duplex communic with requestor process destroy ucc close connect with requestor make arrang process creat creat process log ucc use privileg entri ncp close connect between dead process process deactiv open socket dead process ucc transmit messag back requestor process close dual connect between requestor process interrupt call standard quit mean sent requestor process creat process requestor receiv socket pend output creat process abort enter command level await command typewrit connect requestor process interrupt process resum by issu start command creat process note rule pend output restrict than implement by int ncp command document prepar use multic runoff command sourc file consist intermix text runoff request creat use qed text editor file compil by runoff command produc finish copi latest version document exist onlin multic segment udd multic meyer network protocol runoff end page rfc arpa network protocol note april requestor foreign process logger listen socket connect foreign logger init signal socket foreign logger rememb reject connect signal socket listen socket init logger socket pair requestor connect creat process accept connect with socket foreign logger perform login ritual creat process init socket pair requestor accept connect with socket creat process fig establish process foreign host rfc put machin readabl form entri onlin rfc archiv by mile mccredi page