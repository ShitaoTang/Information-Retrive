network work group rfc jeff rulifson june del del jfr dsn lsp sp dual transmiss abstract decod encod languag del machin independ languag tailor specif comput network task accept input code interact consol give feedback pack result inform messag packet network transmissin accept messag packet comput unpack build tree display inform send inform user interact station work document evolut del languag comment made jeff rulifson sri forward initi arpa network work group met sri octob general agre runmn interact program across network problem face group agreement underlay notion del like approach set down terminolog expect del program list propos semant capabl meet andrew baray carr crocker rulifson stoughton second round meet held piecem way crocker meet with rulifson sri novemb result incorpor formal routin stoughton meet with rulifson sri decemb decid meet again group probabl utah late januari public releas paper bbn net meet cambridg februari net standard translat nst nst librari set program necessari mesh effici with code compil user site del program receiv nst del approach net interact system communic intend oper broad spectrum lowest level nst del usag direct transmiss server host inform same format user program receiv user host mode nst default inact del program receiv univers hardwar represent input but input normal fashion user host del program becom messag builder sender intermedi use nst del echo tabl tti user host mode del program run full duplex tti user echo charact translat charact set server host pack translat charact messag appropri break charact send messag messag come server host del program translat user host charact set print tti ambiti task del oper larg display orient system remot consol net larg interact system usual offer lot feedback user unusu natur feedback make imposs model with echo tabl user program activ tss time button state chang put unnecessarili larg load tss system run net could easili load system avoid doubl overload tss del program run user host handl feedback like complic echo tabl appropri button push messag sent server host display updat receiv return difficult neglect problem effect simul nonstandard consol standard consol attempt offer mean solv problem routin structur del program complic interact system part del program construct by server host programm interfac between program input stream easili insert by programm user host site univers hardwar represent minim number translat need map facil user code facil univers hardwar represent simpli way talk general term hardwar devic interact display station initi network exampl display thought squar mid point coordin rang both axe point specifi accuraci regardless particular number densiti rastor point display represent discuss semant explan accompani formal descript del introduct network standard translat nst suppos user remot site say utah enter ahi system want run nls step enter nls normal way time utah system request symbol program nls rep program written del call nls remot encod program rep program accept input univers hardwar represent translat form usabl by nls pack charact buffer local feedback program receiv utah compil load run conjunct with standard librari input utah consol goe nls nep process pars block translat nep receiv charact appropri state final initi transfer bit transfer form accept standard form nlsw need differenti between utah net user advantag nst after node implement librari part nst need write program subsystem name symbol file send user map net hardwar represent special bit format minimum program can expect consol use fullest extent nst run encod translat code user site can take advantag hardwar consol fullest extent can add remov hardwar featur without requir new differ translat tabl host local user kept date chang system offer host site new featur ad host programm chang symbol encod program new program compil use user site new featur automat includ advantag encod translat program transfer symbol obvious site can translat way see fit machin code site can produc fit site faster run time greater code densiti result extra symbol program code user site easili interfac between user monitor system del program host machin eas problem consol extens accommod unusu key button without loss flexibl need man machin interact expect match hardwar symbol program take account avoid unnecessari comput immedi possibl code translat construct del someday possibl program composit crocker tell ahi nls user consol communic exampl block diagram right side pictur repres function user main comput left side repres host comput label pictur correspond statement with same trail associ with pictur link forward direct label concern with network inform second link total inform flow again forward direct last equival but backward direct set with pointer respect tif nif nif encod encod map semi raw input bit input stream form suit serv host subsystem process input nif hrt tif net mode nif urt tif imp ctrl tif urt nif ctrl tif prgm ctrl nif display tif dctrl sum sum sum sum sum empti conjunct construct rig way conjunct sum need valu evalu use jump code refer conjunct made place logic decis call statement hope compil smart enough skip unnecessari evalu run time conjunct left part fals disjunct with left part true need correspond right part evalu arithmet express syntax statement condit uncondit uncondit loopst case cibtrikst uist treest block null exp condit conjunct uncondit condit empti block begin exp exp end express statement condit statement part option express mandatori side effect way left part syntax rule order semi tree manipul test syntax treest setpntr insertpntr deletepntr setpntr set pointer pntrname pntrexp pntrexp direct pntrexp pntrname insertpntr insert pntrexp left right brother last daughter pntrexp direct down forward backward head tail plantre replac pntrname with pntrexp deletepntr delet pntrname tree tree tree nodenam nodenam nodenam termin tree termin treenam buffernam point ernam treenam id treedecl pointer id tree id extra parenthes tree build result linear subcategor lisp flow control controlst gost subst loopstr casest go statement gost go labelv id assignlabel assign id labelv subroutin subst callst returnst cortnout callst call procnam exp emptyu returnst return exp empti cortnout stuff exp pipenam cortnin fetch pipenam fetch builtin function valu comput by envok name routin loop statement syntax loopst whilest untilst forst whilest conjunct statement untilst until conjunct statement forst integerv exp by exp empti exp statement valu until statement defin fals true respect statement evalu initi exp by part part initi time run index statement avail chang within loop read compil can take advantag say put regist better increment bound both round integ dure initi case statement syntax casest ithcasest condcasest ithcasest ithcas exp begin statement statement end condcasest case exp begin condc condc otherwis statement end condc conjunct statement valu case statement valu last case execut extra statement null null statement iost messagest dspyst messag syntax messagest buildm demand buildmest startm appendm sendm startm start messag appendm append messag byut exp sendm send messag demandm demand messag mesinfo get messag byte messag length messag empti mesdecl messag byte byn bit long display buffer syntax dspyst startbuff bufappend estab startbuff start buffer bufappend append bufstuff bufstuff bufstuff paramet dspyparm dspyparm charact exp string strilng vector exp exp empti exp exp posit onoff empti beam exp exp curv dspyparm intens exp charact width exp blink onoff ital onff onoff estab establish buffernam logic screen screen taken squar coordin normal both axe associ with screen posit regist call preg regist tripl specifi point screen rotat radian counter clockwis axi intens call intens real number rang black light display can go number between specifi relat log intens differ charact frame size blink bit buffer build termin node semi tree semi tree name display buffer display buffer seri logic entiti call bufstuff buffer initil empti paramet initi append effect end display last node semi tree effect display node buffer built logic entiti ad establish buffernam buffer close append prohibit buffernam establish use tree build statement logic input devic wand joy stick keyboard button light pen mice audio output devic end sampl program program run display keyboard tti run nls input part display part demand messag length ithcas getbyt begin ithcas getbyt file area uipdat begin liter area messag area area bug sequenc spec filter spec format spec command feedback line filer area date time echo regist begin del control distribut list steve carr depart comput scienc univers utah salt lake citi utah phone steve crocker boelter hall univers california los angel california phone jeff rulifson stanford research institut ravenswood menlo park california phone ron stoughton comput research laboratori univers california santa barbara california phone mehmet baray corey hall univers california berkeley california phone