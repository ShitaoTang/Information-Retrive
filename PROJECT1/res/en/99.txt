network work group georg meali request comment harvard univers decemb propos user user protocol introduct good reason bad make appear communic network special case input output far user program concern instanc harvard approach toward implement host host protocol network control program treat link logic devic pdp terminolog set connect similar local devic assign communic link make use standard system input output uuo make possibl use exist program conjunct with network without modif pdp dealt with take far howev notion logic devic exist pdp ibm speak level oper system user program interfac absenc network standard requir fix represent integ real oppos pair user process arriv local agreement both assum burden data convers necessari standard protocol allow agreement given express accommod minimum control inform allow agreement function practic final note imp imp host host protocol provid check action request by user process accomplish by process type issu alway regard subject treatment user user protocol level propos intend face type issu certain extent can best explain extent by state criteria use judg user user protocol propos meali page rfc propos user user protocol decemb notion logic record present notion messag suppress fortran pro grammer written use write statement with accompani format record os machin languag programm put write record possibl implement protocol host sys tem librari routin exist user program can access file network without program modifica tion initi abil restrict host system same type protocol implement necessarili impl ment host system svc uuo level specif knowledg characterist host involv unnecessari note impli user program awar natur host case second criterion fail make progress give case failur occur burden accommodat ing system differ shift toward implement protocol host system by default user program clear propos initi today suspect extent solv ultim problem ambiti strict matter tast stage prefer tri believ can use by worth goe reason distanc toward solv short rang problem easi offer hope viabil long rang view follow intend describ propos with hope proper motiv argument piec sketch specif implement harvard make pdp describ intend appli specif case storag file pdp network user user protocol propos follow protocol intend appli data bit mes sage between end mark bit begin pad bit present imp imp host host protocol unaf fect by propos general principl segment technic term data preced by control inform specifi natur extent basic scheme evolv use sos buffer system see paper jacm april especi by mock meali page rfc propos user user protocol decemb point view link carrier inform infor mation carri segment fix maximum length call mes sage accid user point view wish transmit contigu stream data general segment differ imp imp host host protocol view manner call segment record clear entir analog between notion physic block logic record side file storag system make use control status inform user user protocol level inform transmit link sequenc flag follow by possibl null data block general format oper count data oper field alway present bit long count field present give number data byte follow data block byte size set by last preced size flag case byte between bit long virginia system oper field count field present call flag data byte present data block flag fol low by data block null due count call block flag flag call whyte flag note size flag set byte size follow block byte size set natur send receiv host depend local agreement between send receiv process specif requir size flag appear messag prior block flag except ascii flag size flag introduc default basi by routin implement protocol intend partial mean detect certain class error count field bit length except eom flag bit long flag follow whyte flag nul oper consid next flag rs record separ end record gs group separ end group fs file separ end file esc escap local convent flag reserv assign meali page rfc propos user user protocol decemb eom end messag total bit count size byte size bit ignor ignor follow data bit block flag sys byte data receiv host system control byte control data follow status byte status data follow label byte identif data follow key byte key data follow ascii bit byte ascii data follow block byte data follow mention requir size absenc size flag messag contain block flag except ascii definit error eom partial error check devic partial devic bypass pad conundrum user pro gram never see eom input user write eom forc transmiss eom delimit end use inform messag restat total number bit messag start with bit follow mark end with last bit eom count field check possibl loss informa tion check against error imp host electr interfac host mushywar eom appear end messag unless esc apear esc intend unus escap hatch nonus by instal applic wish avoid use than bit user user protocol link instanc desir use link bit stream ignor mes sage boundari anarchist can achiev local agreement power nul ignor intend space filler case help ful make bit subsequ data block occur conveni address boundari especi help host interrupt routin past combin nul ignor mark bit receiv messag case bit count transmit get routin correct eom bit count check separ oper introduc notion logic record group file specif requir ment record contain entir within messag singl record contain messag addit requir file transmit dure connec tion instanc user wish use link transmit collect rountin with link meali page rfc propos user user protocol decemb by local agreement singl routin consist number record form group whole collect form file link remain connect after fs flag receiv interpret various block flag similar open local agreement flag intend convey pure data ascii block differ between far protocol concern byte size implicit ascii bit explicit block count field next preced size flag beyond howev semant content block follow ascii govern by current standard ascii ebcdic inform transmit ascii block control status intend communic control informa tion between user process interpret accom pani data block open local agreement generic control mean tri follow status mean but feel way doctor control flag prompt return status flag sooner never label intend use identifi follow unit data file group level again specif interpret matter local agreement key intend mimic notion address key record data item physic storag block level familiar with pdp system os follow parallel offer guidanc user user protocol os pdp control open open close close label dscb file retriev inform key key useti useto argument control read input write output alloc enter open lookup status getst meali page rfc propos user user protocol decemb notat indic lack veri direct parallel worth note os get put direct parallel implement user user protocol embodi notion record implement protocol lead introduc tion notion pdp input output involv disc tape storag well imp communic knew multic terminolog could extend set paral lel with precis terminolog drawn system with explicit input output imper wish emphas setup intend handl control data munic general multic system classic distinct between extern intern storag blur user point view manner wish blur user user protocol offer sys with slight trepid gen eral notion communic direct with foreign host than via foreign user process intermedi ari sys like uuo svc but foreign host consump tion than host host point view prob lem implement establish process context record unconnect with local user process howev strong associ with current logon conundrum pdp instanc user identifi with local teletyp line link subterfug nece sari foreign user log os pervers way process log foreign process local system except possibl multic simpl matter special user job present respons possibl host provid system instruc tion uuo svc whatev give requisit inform establish process independ sens process made request otherwis protect mechan reason system make interdepend wish exist system uuo svc right thing attach but forget true logon process network tantamount issuanc foreign uuo svc by node network see reason way case sys kind flag use convey requisit data reason sys convey request os instruct user program oper system interfac level practic question implement case pdp can pretti well see turn sys logon request execut monitor command uuo same case os meali page rfc propos user user protocol decemb sophist unfortun multic make naytheless hope clear want proto col reflect differ question context specif host system want general independ system deal with far protocol concern fail introduc general notion protocol unc ertain translat particular implement practic pdp implement follow can implement set user routin imbed monitor uuo implementa tion former version use descript purpos uuo putf ch put flag putd ch put data put ch put record getfd ch get flag data get ch get record ch logic channel number customari open init uuo use open channel standard format user buffer assign howev ring buffer header use nonstandard way data mode assign use with network buffer file status bit input devic dsk dta mta imp can use mode harvard ncp host host protocol implement user buffer correspond direct messag output user buffer format messag input messag becom user buffer load word buffer use order make maximum use facil disk servic rou tine meali page rfc propos user user protocol decemb putf uuo uuo place flag output buffer effect address locat word xwd oper count case block flag count ignor comput number byte buffer befor next use putf putf putd insert eom flag automat buffer becom full data byte current buffer by putd insert eom flag after comput count previous block flag buffer place new block flag same type begin next buffer after insert size flag state current byte size putd uuo uuo place data output buffer effect address locat data byte byte size than next bit word data buffer case byte assum low order part word address second case data word contain final bit byte contain high order part word next data byte start new word pdp storag byte size entri putd use per byte transmit contain bit second contain bit left justifi strategi allow maximum use pdp byte handl instruc tion put uuo uuo place whole logic record output buffer effect address word iowd count locat putf uuo use output proper size flag use put output block flag simul number call putd use iowd discov locat size user data area output rs flag indi cate end record meali page rfc propos user user protocol decemb case byte size than bit put use ildb instruct pick byte output by putd standard pdp byte handl format use count part iowd total byte count word count uuo both error return normal return getfd uuo call sequenc uuo getfd ch error return whyte flag return block flag return data return effect address locat flag data return flag return same format putf data same format putd certain flag nul ignor eom handl entir within uuo report user sys eventu han dled way but initi handl by user get uuo call sequenc uuo get ch error return end file return end group return normal return get transmit next logic record user use getfd togeth with iowd same format put iowd count run befor end record remaind record skip case updat iowd return effect address uuo order inform user data transmit skip pdp file transmiss assum link connect pdp user process listen order get process send file sequenc flag transmit can meali page rfc propos user user protocol decemb repres follow uuo execut by left margin flag indent commentari opposit indic natur data block transmit put control data with open paramet request open label file identif data lookup eom forc messag transmit getfd status status return by open size byte size use label file retriev inform putf control data request input file eom forc request transmit getfd status status bit return by input get logic record file buffer load loop back second putf record final status inform return by second getf indic end file wind with sequenc putf control data request close eom forc transmiss getfd status status bit return by close case get file main loop look like putf control data request output put logic record file buffer load putf eom forc transmiss getfd status status bit return by output meali page rfc propos user user protocol decemb use both record flag transmiss uuo worth note well use eom flag forc transmiss messag switch between input output link put get uuo clear requir transmiss con trol label data suppress sake clariti applic handshak natur transmiss control status flag mandatori protocol permit transmiss complet file without handshak proposit singl error nece sitat again presum receiv process end complet tangl brief discuss pdp space requir implement protocol instruct divid equal between input output side enough experiment code confirm feasi biliti basic strategi taken togeth with experi with implement use sos buffer system touch question logon protocol except indirect belief can accommod frame work propos but test theori indic tempt handl matter with sys flag given sys data interpret direct by sys tem system use run uuo run logon cusp turn handshak use ascii data link way think dispens with notion dedic socket reconnect morass point need thought question handl interrupt link facil direct relat get put uuo handl side inclin think treat qua interrupt user process independ matter data transmiss link current work pdp monitor lend easili implement true interrupt endnot messag string bit between host host header memori attract but nonspel sdc secretari could distinguish between black white dure manuscript form meali page rfc propos user user protocol decemb putf use ouput block flag differ block requir rfc put machin readabl form entri onlin rfc archiv by colin barrett meali page