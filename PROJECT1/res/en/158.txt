richard bl kalin network work group mit lincoln laboratori request comment nic use ipc facil work paper materi review public releas intend use within arpa network quot cite public relat arpa network introduct hypothesi goal interprocess communic complex than common realiz until complex fulli understood satisfactori implement object ipc design than provid facil move bit between otherwis independ user program varieti constraint satisfi constraint dictat by eventu usag facil design sustain usag pattern can satisfactori effici said well design unimagin larg design effort undertaken without complet understand usag serv well design satisfactorili design paper undertak exposit type usag ipc facil subject hope discuss clarifi goal pursu provid benchmark gaug various implement strategi difficulti task underestim experi avail draw veri primit over constrain ipc implement extrapol limit usag environ general notion basi real experi specul subject enorm oversight misguid perspect compil paper necessari imagin servic process want ipc facil area recogn includ exchang bit encod inform via channel establish delet reassign channel abil debug error suspect error potenti improv run effici capac avoid storag alloc deadlock aid recoveri transmiss error page rfc use ipc facil list known incomplet area understood intellig discuss case omiss blame simpl oversight obvious problem consid document kind authorit final reason paper kept comput base textfil remain subject edit rereleas new insight becom understood hope can remain accur date statement goal group ipc implement can aspir can guidebook problem face reason attempt made design suitabl solut problem rais use solut machin depend call general solut clumsi ineffici valu second take point view user need awar manner demand carri long can accomplish final tri stay aloof eccentr present day machin organ attempt implement independ admit tread fuzzi line character usag pattern presum both system process softwar organ comput milieu capabl support appear signific affect general document care exercis select host machin rest paper attempt character type usag anticip by ipc facil organ titl section section discuss aspect expect usag abil use various sourc wakeup inform process exhibit prefer toward certain quantiti input data prefer reflect amount comput time can expend given amount input exampl charact translat routin prefer bit quantiti input with bit process possibl but complet charact avail entir translat cycl can commenc prefer independ function routin otherwis equival routin could written accept bit time exampl command interpret requir complet line input link loader complet file page rfc use ipc facil execut system face problem decid time enough input avail given routin run effici decis can taken light issu wakeup dormant process carri with consider overhead room core storag made avail program swap memori tabl updat activ regist exchang entir procedur revers process finish issu wakeup insuffici input program ineffici wast amount comput can justifi overhead expend problem determin priori best time issu wakeup general solut depend critic relationship between wait cost run cost attempt make reason predict contend with tradeoff between accuraci overhead system code run overhead incur final predict mean general solut help avail schedul specif case common found instanc use receiv process specifi number bit expect process inform supervisor schedul requir fifti bit input sourc befor continu process can go shade awaken requir input avail case input length predetermin techniqu satisfactori problem aris case unknown input size short predict give rise ineffici prematur schedul long predict produc input deadlock under circumst common process tell schedul simpl criterion can appli determin suffici input appear carriag return teletyp input stream exampl criterion test by system routin by low overhead user suppli routin turn criterion awaken criterion met main routin awaken process continu system user criteria work conjunct with user specifi maximum charact count correspond avail buffer size system look line termin wakeup user process appear sourc time system preempt user criterion exampl process tri put singl charact full buffer forc shade typic awaken again until buffer empti though user program wish page rfc use ipc facil room singl charact system impos stronger criterion name room charact assumpt call output charact follow program forc output burst than go shade awaken time time room output charact program awaken send charact program effici appropri improv sourc criteria decid awaken user process devic routin produc input data sourc frequent util hardwar design comput peripher abil send end record indic variabl length uninterpret record absolut necess fix length record conveni doubl check world interprocess communic analog featur avail routin generat data know receiv routin requir inform made avail schedul purpos implement requir standard way denot logic boundari stream data flow communic channel marker recogniz by schedul supervisor receiv host comput wakeup can issu desir simplifi task input interpret marker pacement visibl receiv process data between boundari call logic messag natur unit inform exchang marker travel with data channel addit inform marker provid data flow yield use consequ consid exampl process alway exchang bit long logic messag receiv process determin length logic messag arriv avail simpl facil error detect bit messag arriv obvious bit drop note alway possibl receiv process comput posit boundari marker input stream reason inform implicit marker posit found part code input data case code redund difficult extract boundari inform rest input than use marker explicit abil send part logic messag ipc facil user storag constrain can requir process send entir logic messag time concept introduc facilit issu wakeup receiv process conveni input quanta receiv page rfc use ipc facil process conveni output quanta send consid case process run small machin send messag process larg task multiplex machin effici receiv process requir larg quantiti input data time buffer space address space send process can hold data answer allow send process dump logic messag part with last part indic end messag abil receiv logic messag part revers situat receiv process suffici buffer space avail accept entir messag possibl under circumst elect accept messag part necessari case messag long buffer by system unless part messag accept by receiv process transmiss can never complet devic serv remov veri long messag appear by error input stream abil find messag can sent left uncheck routin can easili generat messag faster than can consum given amount buffer capac can quick exhaust way system limit rate process produc messag impli time process tri send messag prevent buffer inavail process forc shade paus come without warn way process learn advanc messag can sent program better thing than wait buffer becom avail abil get guarante output buffer space process get guarante system messag certain size can sent allow process know befor comput made result can success output alloc remain until deplet until chang by alloc request particular user option rais wrath legion system programm point view empti buffer space prealloc necessarili wast contain messag avail use user hand correl empti with wast full with effici process need empti output buffer need full input both resourc necessari sustain process page rfc use ipc facil abil find outstand messag process send messag channel find messag accept by user process far end number can decreas ideal determin number bit left partial accept messag but overhead necessari implement convent system great toler count return can use both dynam post mortem use debug remot process allow input concurr channel present time given order way could exampl verifi same result produc regardless order input arriv failur receiv process mechan allow send process determin last input accept befor process die between oper process provid user manag way transmit process slow down receiv catch with by pinpoint bottleneck can use detect design mismatch unless channel outstand messag dead possibl concurr with request receiv process accept messag case count return can assum exact but consid upper bound abil get wakeup messag accept conjunct with possibl user process alert number messag sent particular channel accept far end fall below specifi threshold process discov twenti messag still outstand can elect enter shade until number fallen than by process can run burst mode than swap core fifteen time time allow send messag load send fifteen messag penalti bottleneck throughput receiv process swap cost local process signific consider econom advantag mode oper remot process die issu channel close count undeliv messag becom frozen receiv process expect type wakeup get time though count reach desir threshold process alert postmortem channel page rfc use ipc facil abil learn messag queu input process learn status nth logic messag queu given input channel determin avail complet long contain facil allow program make general prepar befor accept messag offer escap put awkward posit accept input dispos exampl known process messag result messag sent advantag get guarante output can generat befor input accept under circumst end channel move process exampl move teletyp connect between user program debug program abil scan ahead input stream allow process check pend input realli meant input accept otherwis end channel move receiv process accept input view grave respons undertaken unless reason assur input can process rule asynchron system design detect error soon possibl propag tangl result hopeless unravel abil learn messag wait process determin messag left process given input channel use readili thought given pend input channel process exercis prefer decis take input channel with messag queu effect increas throughput by free messag buffer remot transmit process allow run possibl receiv process control send process observ backlog input could tell process slow down assum remot process still send messag number input report lower bound new input ad concurr foreign process die otherwis close connect bound can made exact local process learn exact page rfc use ipc facil guarante input stay avail requir state process told receiv messag given channel messag realli avail buffer within host machin promis user process messag mysteri becom unavail exampl happen illustr rfc dure panic buffer space messag destroy report error recov backup copi contain foreign host abil receiv wakeup input arriv process enabl wakeup number messag queu input channel exceed specifi valu reach maximum valu allow program process input burst mode fashion econom swap cost permit input combin simpl manner exampl input need befor can appropri interrupt can easili generat same interrupt generat maximum number input receiv case distinguish foreign process close channel send messag system alloc buffer until input accept way process can inform point wait condit anticip abil specifi special wakeup process tri run effici specifi arbitrarili complic wakeup condit allow user manag way minim number prematur wakeup general easili provid by allow main process design small low overhead interrupt driven routin check desir condit issu wakeup main process met abil measur channel capac discuss measur data stream heat committe confus generat feel within present domain discuss singl measur capac messag channel complet orthogon concept measur number messag buffer number bit encod data repres system overhead associ with veri implement depend general equat can express measur page rfc use ipc facil term by make arbitrari assumpt messag boundari equal bit buffer system run risk exclud new node unabl meet criterion abil find maximum channel capac provid system call enabl user process learn maximum current capac given channel report pair number name maximum bit count maximum messag count abil constrain channel capac process use channel set new bound capac given channel possibl system tri meet bound note actual bound impos meet constraint differ sourc local remot user process local remot system by set arbitrarili high bound guarante made can met similar low bound can alway met until buffer messag consum receiv process by set current messag bound effect disabl transmiss new messag without cooper transmit process messag generat can temporarili disabl outstand messag buffer flush messag alloc can rais origin limit transmiss can resum abil close channel time process close down channel time process die system close open channel channel process receiv data pend input thrown indic return transmit system mark channel dead identifi last data item accept identif term number logic messag discard number bit left oldest messag process close channel send buffer output sent with sent indic input appear page rfc use ipc facil abil give channel privileg right perform oper discuss reserv by process establish channel time process wish transfer deleg power process especi environ process spawn resourc pass newli creat process scheme reassign can becom arbitrarili complic could exampl assign various aspect usag individu separ assign various right reassign fortun alway necessari becom elabor expect case follow simpl strategi can suffic abil close channel retain exclus by process establish channel channel still open process die automat close by system use channel remain outsid system control channel known by process given make use channel left user level coordin insur process make use time abil initi channel creation case channel establish can handl simpli process announc local system listen specifi channel connect remot process dial right number identif caller take place after channel establish event wrong number channel can close listen resum caller tri reach preestablish channel get busi signal dial remot process process specifi channel listen remot number system attempt establish connect channel becom busi dure time process prefer avoid complic identifi remot caller addit featur can ad by specifi both local remot channel identifi process can transfer system respons screen caller proper identif connect accept caller specifi page rfc use ipc facil abil report transmiss error after prescan input messag process decid contain sort transmiss error reject messag system invok intern error recoveri mechan implement postscript author welcom comment question correct document inform note telephon call appreci especi interest opinion use discuss wether paper direct basic question comput network consensus tend affirm encourag contribut work paper problem flow control error handl process ownership account resourc control like rbk tx rfc put machin readabl form entri onlin rfc archiv by michael baudisch page