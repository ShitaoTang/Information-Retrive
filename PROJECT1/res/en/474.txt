network work group burchfiel request comment tomlinson nic bolt beranek newman februari propos chang host host protocol resynchron connect status introduct current host host protocol nic contain provis resynchron status inform kept end connect particular host suffer servic interrupt control messag lost corrupt interfac subnet status inform end connect inconsist current protocol provid way correct condit ncp end stay confus forev frequent frustrat symptom effect lost alloc phenomenon receiv ncp believ bit messag alloc outstand send ncp believ alloc result inform flow connect can never restart use host host rst reset command inappropri destroy connect between host need way reset affect connect without disturb second troublesom symptom inconsist status inform half close connect after servic interrupt network partit ncp believ connect still open believ connect close exist inconsist discov open end connect close burchfiel page rfc februari ii rcr rcs command achiev resynchron alloc propos addit follow command host host protocol rcs link reset connect by sender rcr link reset connect by receiv rcs command sent host send link host receiv link command sent send host desir synch status inform associ with connect circumst send host choos after timeout traffic move but alloc assum alloc lost inconsist event occur associ with connect outstand alloc excess bit messag mechan synchron alloc simpli empti messag alloc pipelin variabl both end indic bit messag alloc restart alloc messag exchang normal way resynchron scheme race free rcs rcr command use posit acknowledg pair iii resynchron by sender initi resynchron send ncp put connect wait rcr repli state regular messag transmit connect until rcr repli receiv burchfiel page rfc februari wait until messag pipelin empti until rfnm receiv regular messag sent connect synchron control data activ assur data stream corrupt dure control synchron exchang send rcs command continu process alloc updat variabl indic outstand bit messag alloc receiv ncp receiv rcs variabl indic outstand bit messag alloc reset connect state indic readi accept messag confirm synchron by send rcr repli reconsid bit messag alloc send command alloc care send host receiv rcr repli variabl indic outstand bit messag alloc put connect readi send messag state prepar forthcom command point pipelin contain messag alloc outstand alloc variabl both end agreement with valu iv resynchron by receiv synchron sequenc trigger by receiv ncp resynchron could initi manual by tip telnet user expect output but receiv again assum alloc lost appropri action reset connect by send rcr command action appropri inconsist event occur with respect connect arriv messag exceed alloc burchfiel page rfc februari initi synchron receiv ncp put connect wait rcs repli state alloc transmit connect until rcs repli receiv send rcr command continu process regular messag updat variabl indic outstand bit messag alloc send ncp receiv rcr command wait until messag pipelin empti until rfnm receiv regular messag sent connect synchron control data activ assur data stream corrupt dure control synchron exchang variabl indic outstand bit messag alloc put connect readi send messag state prepar forthcom command confirm synchron by send rcs repli receiv host receiv rcs repli variabl indic outstand bit messag alloc reset connect state indic readi accept messag reconsid bit messag alloc send command alloc care simultan resynchron specif synchron exchang guarante restor alloc inform end consist state happen correct synchron trigger by sender receiv both same time both end initi command same time rcs rcr command cross pipelin interpret command confirm repli resynchron happen correct independ relat time burchfiel page rfc februari essenti factor end receiv reset request end take action could affect alloc variabl activ occur dure simultan resynchron by both end follow send ncp put connect wait rcr repli state regular messag transmit connect until rcr repli receiv wait until messag pipelin empti until rfnm receiv regular messag sent connect synchron control data activ assur data stream corrupt dure control synchron exchang send rcs command continu process alloc updat variabl indic outstand bit messag alloc concurr with receiv ncp put connect wait rcs repli state alloc transmit connect until rcs repli receiv send rcr command continu process regular messag rcs rcr command cross pipelin sender receiv rcr command interpret repli rcs command zero variabl indic outstand bit messag alloc put connect readi send messag state prepar forthcom command concurr with receiv ncp receiv rcs command interpret repli rcr command burchfiel page rfc februari zero variabl indic outstand bit messag alloc reset connect state indic readi accept messag reconsid bit messag alloc send command alloc care vi problem half close connect procedur provid way resynchron connect after brief laps by communic compon result lost messag alloc open connect longer sever interrupt communic result partit subnet servic interrupt communic host undesir tie resourc indefinit under circumst user provid with option free resourc includ by unilater dissolv connect unilater mean send cls command close connect without receiv cls acknowledg note legal subnet indic destin dead servic restor after interrupt status inform end connect synchron end believ connect open proceed use connect disconnect end believ connect close exist proceed initi communic by open new connect rts str command use same local socket synchron need proper close open end connect inconsist detect propos accomplish by chang semant exist host host protocol command vii redefinit rts str err link handl half close connect miss cls situat describ can manifest way way involv action taken by ncp open end connect continu send regular messag link half close connect control messag referenc link ncp close end respond with err messag specifi link unknown error code correspond open connect burchfiel page rfc februari receipt err messag ncp open end close connect by modifi tabl without send cls command bring both end agreement second way inconsist can show involv action initi by ncp close end think connect close send str rts reopen connect ncp open end detect inconsist receiv rts str command specifi same foreign socket exist open connect case ncp open end close connect without send cls command bring end agreement befor respond rts str viii conclus scheme present section ii resynchron alloc veri import properti data stream preserv exchang data lost safe initi synchron end time doubt synchron chang semant rts str err code command provid synchron need complet close half close connect protocol chang make host host protocol far robust use work can continu spite laps by communic compon rfc put machin readabl form entri onlin rfc archiv by via geni burchfiel page