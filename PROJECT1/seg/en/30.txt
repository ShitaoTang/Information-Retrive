 network working group mike kraley harvard request for comments john newkirk harvard june thoughts and reflections on nwg rfc in the course of writing nwg rfc several new ideas became apparent since these ideas had not previously been discussed by the nwg or were sufficiently imprecise it was decided not to include them in the official protocol proffering we thought however that they might be proper subjects for discussion and later inclusion in the second level protocol i errors and overflow in line with the discussion in nwg rfc we felt that two types of errors should be distinguished one is a real error such as an rfc composed of two send sockets this type of error can only be generated by a broken ncp in the absence of hardware and software bugs these events should never occur the correct response upon detection of such an event was outlined in the description of the err command in nwg rfc the other error is an overflow condition arising because finite system resources are exhausted an overflow condition could occur if an rfc was received but there was no room to create the requisite tables and queues this is not a real error in the sense that no one has done anything incorrect expect perhaps the system planners in not providing sufficient table space etc further a page rfc thoughts and reflections on nwg rfc june recovery procedure can be well defined and simply entails repeating the request at a future time thus we believe an overflow condition should be distinguished from a real error in nwg rfc an overflow condition was reported by returning a cls as if the connection had been refused this sequence performs the necessary functions and leaves the connection in the correct state but the initiating user is misinformed he is deluded into thinking that he was refused by the foreign process when in fact this was not the case in certain algorithms this difference is crucial in further defining error conditions we felt that it would be helpful to specify why the error was detected in addition to specifying what caused the error while writing the pseudo algol program mentioned in nwg rfc we differentiated types of errors listed below we would therefore like to propose the extension of the err message to include an bit field following the op code to designate the type of error this would be followed by the length and text fields as before we propose these error types unspecified error homosex invalid send rcv pair in an rfc illegal op code illegal leader bad message type etc illegal command sequence illegal socket specification command illegal command length last command in message was too short connection not open data data overflow message longer than advertised available buffer space illegal socket specification data socket does not exist page rfc thoughts and reflections on nwg rfc june in light of the other considerations mentioned earlier we would also like to propose an additional control command to singify overflow ovf my socket your socket the format of the message is similar to that of the cls message which it replaces in this context the socket numbers are bits long and correspond to the socket numbers in the rfc which is being rejected the semantics of an incoming ovf should be indentical to an incoming cls in addition the user should be informed that he has not been refused but rather has overtaxed the foreign host s resources an alternative to creating a separate control command can be realized by considering the similarity between a cls and an ovf conceivably an eight bit field could be added to the cls command to define its derivation we believe however that this alternative is conceptually inferior and practically more difficult to implement overflow does not require serious consideration if it is a significantly rare occurrence we do not believe this will be the case and we further believe that its absence will be an unnecessary restriction upon the user page rfc thoughts and reflections on nwg rfc june ii host up and host down significant problems can arise when a host goes down and then attempts to restart two cases can easily be distinguished the first is a soft crash where the system has prior notice that the machine is going down sufficient time is available to execute pre recovery procedures the other case can be termed a hard crash often the result of a system failure insignificant warning is usually given but more important the state of the machine after recovery is rarely predictable when a host returns from a hard crash the network will be in an undefined state very probably the ncp s data structures are destroyed or are meaningless the network has declared the host dead but only to processes which attempted data transmission and were refused the only alternative for the crashed host is re initialization of its tables what are the alternatives for the foreign hosts we would like to propose the addition of two control commands reset rst and reset reply rsr each would consist solely of an op code with no parameters upon receipt of an rst a host would immediately terminate all connections with the sending host but would not issue any cls s the receiver of the rst would also note that the originator of the rst was alive and would then echo an rsr to the sender when a host receives an rsr he sould then note that the echoing host is alive the function of rst can be partially simulated if a host will immediately close all relevant table entries upon discovering that another host is down thus after a hard crash all connections and request for connections are terminated the rst also informs all foreign hosts that we are again alive and an rsr is received from every functioning ncp a host live table see nwg rfc can easily be page rfc thoughts and reflections on nwg rfc june assembled and establishment of connections can resume related problems also crop up when we consider attempting to synchronize the network which may still be carrying messages generated prior to the crash with an ncp which has an initialized environment we lack the facilities for unblocking links discarding messages etc facilities which this proposal will necessitate further interaction with bbn should resolve these difficulties the problems associated with soft crashes are not nearly as pressing and they demand more sophisticated i e complex solutions our preliminary experimentation with the network demonstrates that a good initialization and recovery protocol are far more necessary many of the ideas presented herin wre germinated and or jelled through conversations with steve crocker and jon postel we would also like to acknowledge the assistance of jim balter and charles kline of ucla who devoted a great deal of effort toward helping develop the pseudo algol program which was the predecessor of much of our recent documentation this rfc was put into machine readable form for entry into the online rfc archives by katsunori tanaka page 