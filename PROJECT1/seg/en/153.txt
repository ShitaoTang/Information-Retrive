 network working group b thomas request for comments b clements nic bbn tenex references january ftp server server interaction the current arpanet file transfer protocol as specified by rfc and updated by rfc s and allows for third host participation but does not specify a mechanism by which the process at the third site may be the ftp server at that site this rfc suggests a simple extension to ftp which would allow an ftp user process at one site to arrange for ftp server processes at other sites to act cooperatively on its behalf such server server cooperation may appear to be of limited utility consider however the requirements placed on ftp by a resource sharing executive rsexec program a command language interpreter which extends the range of a user s commands beyond the boundaries of the user s local system among its services such as rsexec could provide its users with a network wide file system perhaps allowing in certain contexts the use of partially qualified pathnames which omit site specification consider for example the response of the rsexec to the user command append file prog pl to file prog pl for the case in which the two files are at different sites prog pl at site prog pl at site neither of which is the user s site a straightforward way for the rsexec to perform the append would be to establish ftp control connections to the ftp servers at site and at site instruct the server at site to retr prog pl using data connection c and instruct the server at site to appe prog pl using the same data connection c unfortunately at present there is no way within ftp to arrange for such server server cooperation this is due primarily to the lack of symmetry in the way that ftp treats the ends of data connections during connection establishment it specifies one end to be the server end the other to be the user end and specifies different means for establishing the connections from the two ends thomas et al page rfc ftp server server interaction january ftp could be modified to support server server interaction by making the establishment of data connections symmetric or providing a mechanism for instructing a server to establish its end of a data connection as if it were a user the second alternative probably requires fewer changes to the existing protocol the following proposed extension to ftp uses the second method it involves the addition of a single new command lstn and minor modifications to several existing commands sock appe retr stor a the lstn listen command requests the ftp server to allocate a socket for use as a data connection to establish the corresponding data connection the server is to listen on the socket allocated when an appropriate transfer command is given syntax lstn crlf where is either s for send or r for receive the server responds to lstn by refusing to allocate such a socket or sending the user the number of the socket allocated the ftp server data socket reply could be used for this purpose b receipt of an appropriate stor retr or appe command following a successful lstn command causes the server to listen for an rfc for the socket allocated data transfer may proceed after the server receives an rfc for the socket and responds with a matching rfc once established a data connection corresponding to a successful lstn command has the same duration as one established in the usual way c the user may insure the security of his data transfer by using the sock command to instruct the server to accept an rfc for the listening socket only if it is from a specified host and socket d the sock command is modified in two ways thomas et al page rfc ftp server server interaction january on success the reply must be the ftp server data socket reply that is the reply can not be deferred until receipt of a data transfer command this is to allow the user to transmit the server s response to the program at the third site see the example below after a lstn command the sock command is to be interpreted by the server as specification of the acceptable rfc for subsequent data transfer command that use the allocated socket with this extension to ftp the rsexec program could accomplish the append in the example above as follows to site to site lstn r crlf let x socket allocated sock site x crlf let y socket in reply from site sock site y crlf retr prog pl appe prog pl crlf in closing it is appropriate to note that an experimental rsexec program of the sort suggested above has been operational on tenexs for about months it currently uses a private resource sharing protocol rsp that includes file transfer operations rsp supports server server cooperation in rsp data connections are established in a symmetric way alternative above this rfc was put into machine readable form for entry into the online rfc archives by mirsad todorovac thomas et al page 