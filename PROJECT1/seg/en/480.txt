 network working group v cerf request for comments may nic ucla nmc categories d computer science updates none obsoletes none data transfer protocols this is an informal statement of material discussed at the sjcc there are two peoblems movement of data from one site to another interpretation of the data at receiving site the first task requires a simple protocol which accomplishes the following standard connection procedure for connecting transmitting and receiving processes standard packaging which allows network to collect the transmitted data stream in the right order and know when the end of the file has been reached standard connection procedure suppose every host has a process charged with the responsibility of sending and receiving files between hosts processes the data manager if the data manager offers to listen on a given socket for file xmt requests then icp is sufficient to establish a connection between a serving data manager and a using process we have completely avoided the discussion of data interpretation and also the problem of control for instance we have not said how a process can ask the data manager to send a file of a par ticular name nor how to end the transmission of a file this is deferred for later another desirable ability is to have processes transmit files to each other independent of the host data manager icp should suffice for the creation of a full duplex connection file naming and format interpretation are left to the individual process to solve it is of interest to note that files need not have names if two processes are connected then the file name is in a sense implicit in the sending and receiving socket pair one imagines however that page connections with data managers for the purpose of file transmission are too transient to serve as permanent file names so information about file name will be needed by the data manager this information could be supplied either embedded in the file transmission data stream or supplied over a separate control connection established at icp time it seems reasonable that a data manager have a network wide fixed socket number on which it is listening to service data transmission requests in this sense it acts much like the network logger for inter process file transmission less rigidity seems called for and we can leave such decisions to the individual peocesses communicating with each other public processes at serving hosts could have known nia nic sockets over which file transmission is acceptable standard packaging we naively imagine that very little in the way of formatting is needed to move data across the connection a few bits at the beginning of transmission could specify the formatting protocol e g arbitrary bit string until connection closed count field data break chars etc depending on the selected format mode the appropriate control bits will or will not appear interspersed betweeen the data bits message boundaries are totally transparent a way of ending the file possibly without closing the connection is useful although closing the connection after the rfnm from final record sent is received by the sending process might be adequate sufficient but not palatable icp causes sockets to be dynamically assigned for the ensuing conversation which might be all way page control a great many problems come up if the data manager serves as a part of the host filling system for example the data manager must know whether the process it is serving wants to send a file or receive one in either case some sort of file name qualifiers user id security codes access requested etc will be needed to resolve the usual access legality and potential file name ambiguities this information can be supplied either within a single full duplex data stream per icp request established by a modified icp for data transmission the former seems simplier sufficient and immediately implementable data transmission between arbitrary processes probably does not need as much formal control protocol as process to from dm data manager connection ad hoc procedures can be established by trading information on previously established connections regularity is nice so perhaps a standard set of control protocols can be devised which work regardless of the identity of the processes transmitting data control data must be formatted and probably identifiable by prefix codes so that unnecessary control information can be left out if desired i am thinking specifically of file names it remains to establish a set of format protocols which permit packaging of data and identification of control information this should be the task of the renamed data transmission committee this rfc was put into machine readable form for entry into the online rfc archives by simone demmel page 