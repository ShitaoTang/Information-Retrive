 network working group j michener request for comments mac nic i cotton references mitre obsoletes k kelley u of ill d liddle ownes ill e meyer mac graphics protocol introduction this document reflects opinions expressed and decisions reached at the second meeting of the network graphics group held at the stanford artificial intelligence laboratory in late november it describes part of a proposed network standard graphics protocol for transmitting graphics data within the arpa network the particular aspects of the protocol covered in this document relate to the form and content of graphics information sent from a source of graphical information an application program say in the serving host to a display package for output to a graphics console at the using host this will take the form of a sequence of bit bytes and will be called the graphics output byte stream this document is intended to serve as a basis for discussion and for experimentation over the network this document does not include form or content of graphics input data sent from the using host to the serving host nor does it cover how the connection is established between the hosts a proposal for the former will be generated eventually by this committee the latter is the job of the connection committee of the network graphics group this rfc describes the commands which are available in the protocol in terms of the effect they would have at the receiving using host end clearly some subroutine package is desirable at the serving host for use by applications in transmitting graphics data but on this topic this rfc does not intend to comment it may be observed by the reader that no facility is specified in this protocol allowing the using host to report logical errors in the graphics output byte stream to the serving host such a facility would have to be integrated with the graphics input byte stream since it involves most of the problems related to synchrony of independent hosts michener et al page rfc graphics protocol april background the reader should probably peruse rfc graphics meeting report by mike padlipsky to obtain some of the framework surrounding this discussion of network graphics also it might be valuable to make note of the model described in rfc network graphics by donald huff levels and ground rules pertaining thereto functions within the graphics protocol will be classified into a number of levels depending partly on how difficult it is to implement those functions it is intended that any host which claims to implement the functions of level n must implement all lower levels as well thus it is envisioned that sites will implement levels inclemently implementations will be improved as a continuing process to include more and more functions and it is intended that each implementation will be able to identify its own level to a graphics protocol at a remote site which is requesting a graphics interchange a side result is that each site will be able to determine its own priorities in committing programmers to the graphics protocol as opposed to other efforts it is also our intention that implementation of level n will require no knowledge of level n thus a site can implement a level in the reasonably firm knowledge that no changes at higher levels will alter the level implemented at some time it may be decided by the network graphics group to redefine a level which has previously been firmed up it is not our intention that this shall happen but one must recognize that the proposed graphics protocol is experimental and may have to be changed one further ground rule a stream of commands and data which is valid at a given level k shall produce identical results on any interpreter of level k or higher by this we mean that as long as the commands and data take advantage only of strictly defined operations similar pictures should result aspects of the protocol which are not strictly defined at this time include character size character position relative to the beam how control characters in text output affect the terminal and what happens when the beam is moved or a line drawn outside of the logical screen boundary this rule forces upwards compatibility so that an application written using features of a low numbered level will still work at sites which have moved on to implement higher levels additionally any aspects michener et al page rfc graphics protocol april of this protocol which are explicitly left unspecified in the detailed operations descriptions below shall be explicitly specified in any public description of an actual implementation we now describe the framework which will be common to all levels basic data forms information in the network standard graphics protocol will be expressed as a sequence of bit bytes a command will consist of a command byte followed by zero or more arguments the same command byte will always take the same number of arguments in the same form the length of each argument may be fixed or variable depending on the argument a simple type of argument is a value which is a bit integer another type of argument is a string which is a count followed by count number of bit bytes if the count is between and it is sent in a single byte if the count is between and means exponentiation it is sent in two bytes with the high order bit of the first byte set to one the first byte contains the seven high order bits of the number and the second byte contains the eight low order bits a string is the only type of argument of a command which can vary in length for example whenever a command has optional arguments they will be represented inside of a string coordinate data engendered considerable discussion at the second network graphics group meeting it was decided that a two dimensional logical coordinate system was required and each interpreter for the graphic command byte stream would be responsible for mapping this coordinate system to physical device coordinates it was decided that data in the logical coordinate system would be in twos complement notation that it would be fractional that each edge of the screen would have unit length and that the origin would correspond to the center of the screen on the output device the vertical horizontal edges of the screen of the output device correspond to the lines x y or x e where e is a small positive number determined by the precision of the fractional data particularly the points e e and e e shall be visible points at the corners of the logical screen in the case of a non square display surface the implementer may take his own decision thus we shall say that the logical coordinate system contains points whose coordinates range from to a little less than michener et al page rfc graphics protocol april commands which take coordinate data will be available in various modes in absolute mode a position is specified by giving its coordinates in the logical coordinate system in relative mode the difference between the coordinates of the position and the coordinates of the current position must be specified thus a coordinate datum which is an argument for an absolute mode operation should be in the range to e while one for a relative mode operation should be in the range e to e interest was expressed at the second graphics group meeting in eventually allowing a very large coordinate space many bits of precision in each fractional coordinate this is to be done by permitting the length in bit bytes of each coordinate datum to be set as a mode it was decided at the meeting that two bytes per coordinate would suffice for now thus e in the above discussion is one in the least significant bit of a bit plus sign fractional coordinate text data will be transmitted as an argument of various commands for display on the output device network ascii will be used to represent characters at the lowest levels of the protocol only one character size will be available whatever is normal on the display device if the device has no normal size characters per line would be desirable at higher levels the size of each individual character can be specified also at the lowest levels control characters will be passed along to the device for it to do the best it can however the consensus of the graphics meeting was that at some reasonably low but non zero level carriage return line feed and backspace should be interpreted to do the right thing picture subroutines and related topics at the second network graphics group meeting it was decided that two sorts of picture subroutines were desirable the primary distinction between them being relative difficulty of implementation at the meeting the simpler variety was called a subpicture and the more complex was called a subroutine this author believes that these terms do not embody enough semantics to facilitate keeping the two straight and so proposes to standardize on simple subroutine and full subpicture instead the only parameter which can be passed to a simple subpicture is the current beam position in other words if such a subpicture is called more than once in a picture the only difference in appearance michener et al page rfc graphics protocol april between the various calls is a translation due to the beam position at the time of the call full subpictures on the other hand take parameters which can cause scaling rotation reflection or anything else we come up with it is planned that a subpicture definition need be transmitted only once per network connection and would not be deleted by a new picture operation thus a changing picture could be subdivided into several parts on a basis of static versus changing information only definitions of parts which change need be transmitted to redraw the picture traditionally picture subroutines which depend only on the initial beam position have been restricted to relative data mode drawing operations in view of the fact that subpictures will probably be used to save static picture information it is desirable to allow absolute data mode operations in simple subpictures the next question naturally arises what does absolute data mean in a full subpicture which takes both position and scale parameters is absolute data really absolute in this case this author believes that the answer is as follows the full subpicture is really a picture in its own right so it has its own logical coordinate system and its absolute data is really within this coordinate system thus shifting and scaling a full subpicture really means scale the subpicture in its own coordinate system and shift the result as a whole in summary then a major difference between simple and full subpictures is that a full subpicture has its own logical coordinate system and a simple subpicture uses the logical coordinate system of whoever calls it this distinction is the reason why full subpictures are harder to implement than simple subpictures another point discussed at the meeting was a special data mode whereby a subpicture can display data at absolute positions on the screen i e absolutely in the main picture program to achieve this the meeting proposed special data modes for the three operations move beam invisibly draw line and display dot the intent of these data modes was to bypass all rotation scaling and clipping functions associated with the current level of subpicture nesting until this mode was cleared in a certain way this same effect can be achieved more directly and implemented more efficiently by two commands one to save and one to re establish the logical coordinate system for the current subpicture additionally of course the save operation would establish the initial highest level logical coordinate system michener et al page rfc graphics protocol april simple subpicture calls besides the of the subpicture to be called a simple subpicture call may specify two optional parameters the first is an which is the name in a sense described below of this particular subpicture call and the second is an absolute position on the calling page to be invisibly moved to prior to calling the subpicture when eventually the viewer is allowed to interact by picking information displayed before him if the information is part of a subpicture then the name of the subpicture call will be part of the graphic input reported to the serving host if the information picked by the viewer is within several levels of subpicture calls the names of each of the calls will be reported in a manner which indicates their nesting note that just the name of the subpicture by itself is not sufficient since one subpicture may be displayed in several positions and the application may wish to distinguish between individual calls if the identifier is not specified it defaults to the null string if the position for the invisible move is not specified the current beam position is used which of these two parameters are present is encoded by two bits in a code byte which precedes the parameters if both parameters are present then they are always in the same order this order and the bits of the code byte assigned to the two parameters are specified in the detailed description of the simple instance command and in the bnf in appendix preceding even the code byte and immediately following the name of the subpicture which is being called upon is a count of the data in the remainder of the instance command thus is included so that it is not necessary to decode the code byte to determine the total length of any one simple instance operation windowing clipping blanking or while on the subject of coordinate systems and subpictures it might be good to touch on the topic of who which end of the connection is responsible for doing what when a picture is potentially going to be displayed beyond the edge of the virtual screen it was the consensus at the graphics meeting that the interpreter of the graphics protocol i e the using end would not be held responsible for doing anything reasonable in case a picture displays information beyond the edge of the screen e g by relative moves and draws michener et al page rfc graphics protocol april the interpreter must react properly to the next absolute data in the proper range however various solutions to this situation in existing graphics systems include clipping a line to display as much as is proper blanking the whole of a line if any part is invisible or discarding high order bits of the current position register so that no invisible positions can be represented wraparound in addition to problems of the edge effects at the highest level problems arise with respect to full subpictures it is nice to be able to select a rectangular portion of a subpicture to be displayed as part of a subpicture call see newman display procedures communications of the acm volume number october pp in accordance with the consensus of the meeting which was to make this capability optional this author merely hopes to include in the protocol a method of encoding this information since his site a can handle some such windowing and b hopes to provide a service facility to perform this function appendix describes how to concatenate several levels of portions into a single rectangular test as long as no rotations are involved it also outlines the problems related to rotations and portioning full subpicture calls we are now in position to consider what may be specified as part of a full subpicture call in addition to the name of the subpicture being called which is of course required the data described below will all be optional a single code byte will precede all these data the presence or absence of one of the parameters will be indicated by a bit in the code byte being one or zero the parameters will always appear in the same order if they are present this order is given below in the detailed description of the full instance command and in the bnf in appendix additionally preceding even the code byte will be a of the following bytes including the code byte to determine the total length of any particular full instance operation one parameter is an which can be used to distinguish this particular call to this subpicture from all other calls to the subpicture this parameter was already described under simple subpicture calls michener et al page rfc graphics protocol april on parameter which may be specified is a translation this will be specified by giving the absolute coordinates of the center on the calling page of the image of the subpicture this will default to the beam position current at the time of the call a rotation may be specified by giving a bit fraction in the range to binary inclusive this fraction will represent what part of a full circle pi the rotation is the default value of angle of rotation will be zero actually the rotation representation scheme works identically if one thinks of it as a two s complement fraction from to just less than that is the same bit configurations encode the same rotation due to the periodic nature of sine and cosine for example binary zero always represents pi denotes pi in both schemes denotes in one scheme and in the other which correspond to rotations of pi and pi respectively i e identical rotations also specifiable as apart of a full subpicture call is a rectangular portion of the called picture to be imaged on the calling picture see previous section for a discussion of clipping this rectangle is specified by its center and one half its total size in x and y that is the rectangle will consist of all points whose x coordinate differs from that of the center by no more than the specified x size and whose y coordinate satisfies a similar condition the default for these values will place the center at the origin and give both the x half width and the y half width the value of thus the default includes the whole of the logical coordinate system of the called page and also some points one of whose coordinates are which strictly speaking lie outside of the coordinate system how this inconsistency is resolved is left unspecified finally one must specify the scaling to be applied in determining the image this can be done in many ways one way is to specify a uniform magnification to be applied to the subpicture so that magnifications in a wide range can be achieved it is the author s opinion that some form of scientific notation i e floating point will have to be employed if there is already a network standard floating point notation which i am not aware of it should be employed failing that it is suggested that this notation consist of an bit two s complement exponent followed by a bit two s complement fractional part another form of scaling is to specify separate magnifications in x and in y to be applied to the subpicture before any rotation is performed yet a third way is to specify a rectangular area in the calling picture s coordinate system to be filled with the image of michener et al page rfc graphics protocol april the subpicture since the center of the image is already specified by the translation this image information consists only of half edge size data if none of the three methods of scaling are chosen and an affine transformation see below is not given explicitly then a uniform magnification of unity i e no scaling is used note that the three forms of scaling tend to contradict each other and only one of them should be used in any one call what happens if self contradictory information is given in these fields is left unspecified appendix presents the mathematics involved in transforming the subpicture s coordinate system into the calling picture s coordinate system it is shown there that all the individual operations scaling rotating and translating can be represented as a single affine transformation which consists of values it might be nice to permit the serving program to specify this transformation directly accordingly one possible parameter of a full subpicture call will consist of six floating point numbers of the form described under magnification above to be interpreted as an affine transformation indeed if the affine transformation has the following form x y x y l l t t l l then the values shall arbitrarily be sent in the following columnar order l l l l t t this affine transformation should be invertible that is l l l l should not be zero viewporting another topic discussed at the meeting and referred to the protocol committee for decision was the capability of placing the top level picture in some rectangle of the virtual screen the default rectangle might be the full screen alternatively it might be left up to the viewer to specify the default via interaction with the graphics system at the using host in general viewporting allows more than one top level picture to be viewed at once the desire to view several different pictures on the same screen arises in cases where multiple users are working together and in cases where one user is interacting with a group of applications in separate serving hosts this author maintains that the coordinate transformations required by this feature are simpler than that of full subpictures since no rotations are involved and would be part of the same mechanism in its implementation in particular merely another affine transformation see appendix would be added to the levels caused by full subpicture calls all that is required is keeping michener et al page rfc graphics protocol april track of viewport identifiers and the associated rectangles since little extra work is involved it is proposed that this feature be included at some high level of the protocol command codes each command in the graphics protocol will be assigned a non negative value which will represent this command in the byte stream the algorithm whereby values and commands are associated is it turns out a very touchy subject there are five or ten different criteria for a best algorithm each criterion different in emphasis this gordian knot will be cut in this proposal by ordering the commands approximately according to level and then just numbering them in addition if several closely related commands occur at the same level some attempt will be made to encode variations of meanings in terms of bit configurations even if some later consideration causes a change in ordering to be proposed it is this committee s feeling that the numbering should not be altered however until this matter is firmly settled it is strongly advised that any implementation take into account the possibility of reassignment of command codes particular proposal for level protocol it is proposed that level be kept very simple this is so that implementation can be quickly accomplished and experimentation with the protocol begun another reason is that the least powerful host and even programmable terminals should be able to implement it in accordance with this the rule was made that a command be included only if its output is a function solely of the current command and the beam position current at the start of the command in other words the interpreter for level need have no internal storage for modes or pushdown stacks with this restriction it is hoped that a very simple implementation will be possible for level in particular perhaps one could eventually build a hardware translator from level code to one s own particular terminal s code note that in the opcode assignment for level bits and have special meaning for the move line and dot commands in particular the bit encodes absolute versus relative data mode the bit encodes whether any visible output occurs and the bit determines whether the visible output is a line or a dot level command summary the following is a list of commands and their syntax in level zero detailed descriptions of these commands follow in the next section commands dealing with protocol may be added by the connection committee they currently request opcodes in the range to michener et al page rfc graphics protocol april as described in basic data forms above and are two byte coordinate values is a count followed by many bytes and is an eight bit number decimal octal binary format null erase screen and reset beam move absolute move relative draw absolute draw relative dot absolute dot relative text textr end of picture escape level command descriptions null statement null this statement has no arguments and no effect either erase screen and reset beam to origin erase this command indicates that a new picture is about to be drawn it should always be eventually paired with a following end of picture command move beam invisibly to absolute position movea nothing is drawn the beam is positioned to the specified absolute x y position move beam invisibly by relative amount mover nothing is drawn the beam is shifted by the specified amount in x and y draw line to absolute position drawa a line is drawn from the current beam position to the specified absolute x y position michener et al page rfc graphics protocol april draw line to relative position drawr a line is drawn from the current beam position to the position delta x and delta y away display a dot at absolute position dota the beam is moved invisibly to absolute position x y and a dot is displayed there display a dot at relative position dotr the beam is moved invisibly by the specified amount in x and y and a dot is displayed there display text text at the current beam position display some characters at the normal size for the device being operated consists of a followed by count many characters if there is no normal size choose the size so that seventy two characters are displayed per line the characters in the string are coded in network ascii all codes between and decimal inclusive are permitted at level zero what happens to control characters is left unspecified where the beam is following execution of this command is left unspecified except that another display text command immediately following will append its text to the previous string the use of the text command is discouraged use textr instead the position of the first character relative to the initial beam position is left unspecified display text and restore beam textr at the current beam position display a string of characters at the normal size for the device being operated then reposition the beam to where it was before the command consists of a followed by count many characters if there is no normal size choose the size so that seventy two characters are displayed per line the characters in the string are coded in network ascii all codes between and decimal inclusive are permitted at level zero what happens to control characters is left unspecified the position of the first character relative to the initial beam position is left unspecified end of picture endpic this command denotes the end of a new picture it must be paired with a preceding erase command escape to device specifics escdev if value is the code assigned by the protocol committee to the device being operated then transmit the eight bit bytes in which starts with a indicating the number of bytes to the michener et al page rfc graphics protocol april device without examining them otherwise ignore this command if the device does not accept bit information reformat the data in some device specific way an example would be throwing away the high order bit for a seven bit device or gathering bit bytes into one bit word again discarding the high order bits perhaps the action of the bytes in the string should leave alone or at least restore any hardware beam position registers in the device which the interpreter might conceivably depend on this command really should not be used it was included at level so that specific applications can do mode setting and other device specific manipulations for example ards terminals may optionally have several independently addressable output scopes the selection mechanism changes state only when a particular sequence of ascii characters reaches the terminal thus escdev would be used to select which scope s is are to be affected by following commands the current state is invisible to the graphics package at the using host further suppose that another make of terminal has a similar option which responds to a different code sequence this possibility is the motivation for conditionally ignoring the escdev command based on the specified given that a particular application will only be used to output to either an ards or this second make with the multiple scope option then the application could always send two escdev commands one applicable only to ards terminals and the other applicable only to the second make level set line mode linmod this command sets the current line mode possible modes and the which sets each are solid dashed dotted and others or at the beginning of a new picture i e after an erase and reset command line mode is solid if a site does not have a certain mode readily available it may a simulate it in software b substitute another in its place dashed for dotted or vice versa c ignore it entirely what is provided should be clearly indicated in any public document it is strongly recommend that at least solid and one other mode be provided set intensity setint this command sets the intensity of lines dots and characters displayed following the command if is decimal normal intensity should be set if is decimal brightest should be selected and if it is then the beam should be blanked intermediate values should be mapped appropriately as the implementer michener et al page rfc graphics protocol april sees fit for instance if brightest is the same as normal all values from through should be mapped to normal information displayed between the start of a new picture the erase command and the first setint command appears at normal intensity text out texto starting from the current beam position this command displays the of network ascii characters formatted as if it were typed material at the current intensity consists of a followed by count many characters that is text extending past the right margin will be broken and repositioned at the left margin on the next line down of the control characters only carriage return line feed and backspace are required to be interpreted properly subpicture header subhed this command begins the definition of a subpicture named this definition is terminated by a matching subend command the definition will be remembered until a new one is specified or until the graphics network connection is broken note that is a consisting solely of capital letters and numbers subpicture definitions may be nested this will be equivalent to transmitting the two definitions separately in other words all subpicture names are globals and are known to all other subpictures if a subpicture definition has not been received prior to its use in a picture the empty subpicture should be displayed in its place until a definition is received a subpicture definition need not be transmitted as part of a picture i e within an erase and end command pair indeed all subpicture definitions might precede the main picture currently the will always be indicating only one byte of follows but at higher levels of the protocol room for expansion may be required in the the hex bit will be set if this subpicture can be a simple subpicture and the hex bit will be set if the subpicture can be a full subpicture it is possible that one subpicture can be both other information that may eventually be present in include whether the current value of a certain mode or parameter should be saved on entry to and restored on exit from this subroutine whenever it is called these modes and parameters include line mode intensity character size and data length michener et al page rfc graphics protocol april subpicture end subend this command ends the definition of a subpicture each subend must match a preceding subhed command simple instance insts this command indicates that the subpicture is to be called instanced at this level level no subpicture may call another if one does what happens is left unspecified also this must be a call to a simple subpicture thus the hex bit of the single byte of must have been set in the subhed command which started the definition of if the subpicture has never been defined the empty subpicture should be displayed in its place the begins with a count of the amount of information which follows this count may be zero if non zero the next byte is a code byte to be interpreted to see what further information follows if the hex bit is set next in the byte stream is an called as information this is the name of this particular instance of the subpicture as described under simple subpicture calls if the hex bit is set then next in the byte stream following the as information if present is an x y position in the calling picture s coordinate scheme at which the subpicture will be centered this is called at information if at information is not specified the current beam position is used as a default if as information is not specified it defaults to the containing zero characters if neither the hex nor the hex bits are set then neither the at information not the as information is present and the code byte should be zero also the length count had better be changes to levels commands for level text and textr carriage return line feed and backspace characters should definitely be interpreted whenever they appear in the results of other control characters remain unspecified the intensity of the characters shall be affected by the setint command erase normal intensity and solid line mode must be established at the start of a new picture drawa and drawr line mode and intensity shall be affected by the linmod and setint commands dota and dotr intensity shall be affected by the setint command michener et al page rfc graphics protocol april level mark mark this command causes the current x y beam position to be saved on a pushdown stack this pushdown stack must be separate from the subpicture call pushdown stack move to mark and pop movemk this command sets the current beam position equal to the x y position at the top of the mark pushdown stack if the stack is empty the origin is used instead then the stack is popped up unless it is empty draw to mark and pop drawmk if the mark pushdown stack is not empty this command draws a line of the current line mode and intensity from the current beam position to the x y position at the top of the mark pushdown stack and sets the beam position to that value then the stack is popped if the stack is empty the line is drawn to the origin and the beam position is set there also changes to level and for level ints arbitrary levels of simple subpictures must be supported note that recursive use of subpictures is not allowed once recursion starts it can never be stopped the pushdown stack for subpicture calls must be kept separate from the mark pushdown stack level perhaps all rotational transformations should be put at a higher level for instance higher than viewport operations full instance instf this command indicates that the subpicture is to be called instanced in a full manner as described in an explanatory section for one thing this means that the hex bit of the single byte of must have been set in the subhed command which started the definition of if has never been defined the empty subpicture i e nothing should be displayed in its place the is similar to the described under the insts command but the former contains more information below is a list of the information which can be specified and the bit assigned to the presence absence of each piece of information the pieces of information which are present always michener et al page rfc graphics protocol april appear in the byte stream in the order they are described in this list all pieces of information are described more fully in full subpicture calls except for the as information which is described in simple subpicture calls bit hex information as information name of this particular instance consists of an translation information center of the subpicture s image on the calling page consists of an and a rotation fractional part of pi to rotate the image counterclockwise consists of a bit unsigned fraction portion information rectangular part of subpicture which is to be displayed consists of and uniform magnification amount to scale the whole subpicture consists of a floating point number which should not be zero separate x and y magnification separate scales for the x and y axes of the subpicture consists of two floating point numbers neither of which should be zero image size how large a rectangle on the calling page is the image to occupy consists of an and a neither of which should be zero affine transformation the map from the called to the calling coordinates system consists of six floating point numbers notes at most one of the three bits and should be set if the bit is set bits and should not be set if additional optional parameters are ever added to the full subpicture call another code byte could follow all the above information in that case the part of the would include this second code byte and any additional bytes of information michener et al page rfc graphics protocol april escape to top level coordinate system esctop until a reslev command is subsequently executed all display commands moves draws dots and texts shall operate as if they were issued by the top level main picture instead of the subpicture containing them that is they shall be mapped to the screen according to the map for the highest level subpicture calls themselves which are made while an esctop command is in effect are not affected by the command that is transformations are calculated as if the command were not in effect the calculated transformations are ignored however and information displayed by the subpicture still appears to be at the top level until a reslev command nullifies the esctop mode thus a subpicture call executed while an esctop command is in effect acts as if a reslev were executed immediately before the call and an esctop command were executed as the first command of the subpicture similar considerations hold for returning from subpictures resume current level coordinate system reslev this command restores the logical coordinate system corresponding to the subpicture currently executing in case that coordinate system was disabled by an esctop command see esctop changes to levels and for level mark the saved beam position shall be in terms of the logical coordinate system not the physical coordinate system textr text texto since a full subpicture is supposed to be transformed as a whole as if it were a picture in its own right it appears to this author that in particular all beam movements related to characters should be affected this includes character size tab carriage return and line feed in particular carriage return should set the beam to the left margin that is to the left edge of the logical coordinate system of the called subpicture all these changes may be very hard to accomplish and what should be done will be left unspecified at this time with comment from readers particularly invited level perhaps viewpoint operations can be included in level declare viewport setvw set the viewport identified by to represent the indicated area of the logical screen the x and y data are not physical screen coordinates since that would involve device michener et al page rfc graphics protocol april dependencies this command completely supersedes any previous declaration of the same viewport if information is already displayed within the viewport specified this command causes the displayed information to be relocated on the screen to its new position if the area specified exceeds the limits of the graphics standard display screen what happens is left unspecified viewports need not be disjoint in other words two viewports can present display information at the same point on the screen if or are negative the viewport named should be deleted all information displayed by it shall no longer appear because it affects the top level picture this author feels that this command should not occur as part of a picture or in a subpicture declaration add subpicture to viewport addsvw the subpicture named is displayed within the viewport specified if it is not already displayed there if it is nothing is done the subpicture must be capable of being called via a full subpicture call if the viewport has never been declared via a setvw command what happens is left unspecified three possibilities are nothing is displayed the viewport defaults to the whole logical screen the human viewer is permitted by the using host to specify the viewport if the viewport is subsequently declared the subpicture shall be displayed in it if the subpicture has never be declared nothing is displayed for it when and if it is subsequently declared the new definition is displayed in the viewport more than one subpicture may be displayed in a single viewport at once because it affects the top level picture this author feels that this command should not occur as part of a picture or in a subpicture declaration clear viewport clvw all subpictures which have been added with the addsvw command to the viewport specified in this command are removed from it thus the specified viewport contributes nothing to what the human viewer sees after a clvw the area of the viewport may not be blank due to other non cleared viewports which overlap it because it affects the top level picture this author feels that this command should not occur as part of a picture or in a subpicture declaration changes to levels and for level michener et al page rfc graphics protocol april erase all viewports are cleared as in the clvw command but their declarations are remembered endpic this command partially loses its purpose it no longer serves to mark the end of all picture information to be presented to the user since viewport operations may follow which amend or alter the picture this function is partially taken over by the delay and nodelay commands described below level set character size setchs until further notice characters shall be displayed so that each occupies approximately and in the appropriate coordinate direction in the current logical coordinate system inter character and inter line spacing could be certain percentages any ideas more than and or they could be specified separately in any case only a best effort would be expected at a site character size is always set to normal as defined by level character size being normal by the erase command and should be positive except that if is equal to zero then being negative zero or positive correspond to a character size which is smaller than normal normal or larger than normal how much smaller or larger than normal is left up to the site changes to levels and for level textr text and texto characters are to be displayed according to the current character size erase must establish normal character size normal being that for level level set data length setdln until this mode is explicitly changed with another setdln various data will consist of number of bytes may be or affected are the following syntactic types refer to appendix and the fractional part of a floating point number when a network connection is initially established the data length is two michener et al page rfc graphics protocol april level these commands should probably be at the same level as viewport operations if not earlier extensive changes follow delay this optional command is designed to eliminate futile effort on the part of the using host programs at some hosts and or with some output devices particularly storage tubes a non negligible amount of time may be required to present an image to the human viewer if extensive changes are going to be made this command would be used to prevent the using host graphics package from updating the image after every change a nodelay command exits from the delay mode and causes the image to be prepared and presented to the viewer for example the current picture may display four subpictures each of which is going to be redefined without a delay command the viewer would see successive stages of the change each possibly involving a large amount of computation or transmission time end of extensive changes nodelay this optional command undoes the effect of the delay command michener et al page rfc graphics protocol april appendix bnf for the graphics protocol byte stream key to below non terminals are represented in terminals which are keywords standing for particular eight bit values are in capitals terminals whose meaning should be clear to the reader are in lower case note that empty string means zero bytes not a whose is zero empty string empty string michener et al page rfc graphics protocol april erase endpic subhed count hex hex c hex subend setvw aadsvw clvw delay nodelay escdev esctop reslev null mark linmod setchs setdln movea mover drawa drawr dota dotr movemk drawmk textr text texto inst instf eight bits of binary bit pattern indicating what clauses follow eight bits of binary empty string empty string empty string michener et al page rfc graphics protocol april empty string empty string floating point number empty string empty string empty string six s bit non negative fractional part of a circle signed two s complement fraction in range to less than signed two s complement fraction range strictly between and network standard floating point number if any bit two s complement exponent part and a bit two s complement fraction part bit non negative integer bit non negative integer represented in excess notation count bit bytes count upper case letters or numbers bit integer bit integer appendix mathematical formulae for subpictures transformations in this appendix positions in a logical coordinate system will be represented by a row vector with two elements as in x y vectors and matrices will be delimited by these funny brackets various symbols will be used to represent parameters in a full subpicture call relating to a transformation from one coordinate system to another these are defined below mx and my magnifications in x and y to be applied before any rotation they may be negative indicating reflection a an angle of rotation in the range to just less than pi cx cy the center in the calling picture of the image of the subpicture michener et al page rfc graphics protocol april sx sy the half sizes in the x and y directions of the image on the calling page in terms of the calling page s coordinate system they may be negative to indicate reflection x y a position on the called page x y the position on the calling page corresponding to x y pcx pcy the center of the portion of the called subpicture s coordinate system which is to be mapped to the calling page this defaults to if not specified psx and psy the half sizes in x and y of the portion of the subpicture to be mapped these both default to in not specified if a uniform magnification is specified set mx and my equal to it and proceed below as if they were specified if magnifications are specified the following holds x y x y pcx pcy mx psx my psy cos sin cx cy sin cos or in other words x y x pcx y pcy mx cosa psx mx sina psx my sina psy my cosa psy cx cy the factor of is necessary because for instance x pcx psx ranges from to for x values within the portion i e such that x pcx psx whereas the image in the calling subpicture s coordinate system should only range from to if the image size is specified instead of the magnification we have the following x y x y pcx pcy psx psy cosa sina sx cx cy sina cosa sy michener et al page rfc graphics protocol april or in other words x y x pcx y pcy sx cosa psx sy sina psx sx sina psy sy cosa psy cx cy expanding the parenthesized quantities in equations and we have a x y x y mx cosa psx mx sina psx my sina psy my cosa psy cx pcxmxcosa psx pcymysina psy cy pcxmxsina psx pcymycosa psy and b x y x y sx cosa psx sy sina psx sx sina psy sy cosa psy cx pcx sxcosa psx pcy sxsina psy cy pcy sysina psx pcy sycosa psy various interesting substitutions can be made in a and b for example if a no rotation then we have a x y x y mx psx cx pcxmx psx cy pcymy psy my psy b x y x y sx psx cx pcx sx psx cy pcy sy psy sy psy another example is if no portioning is done pcx pcy psx psy a x y x y mx cosa mx sina cx cy my sina my sina b x y x y sx cosa sy sina cx cy sx sina sx cosa michener et al page rfc graphics protocol april if in addition we have a x y xmx cx ymy cy b x y x sx cx y sy cy of course in all cases the transformation from x y to x y can be written in the form x y x y by translation matrix in general a transformation combining a linear transformation and a translation is called an affine transformation transformations with nested levels the combination of two affine transformations is again an affine transformation indeed if x y x y mat tran and x y x y mat mat tran tran mat thus if one has nested full subpicture calls the data at any level need be transformed only once namely by the transformation which is the combination of the single step transformations at each level of nesting a new grand combination affine transformation should be computed whenever a full subpicture is called after pushing down the current transformation by combining the current grand combination with the affine transformation for this particular subpicture call portions with nested levels as long as no rotations are involved or even only rotations in multiples of pi then multiple levels of portions are easy to implement in the discussion in the next two paragraphs let us assume that no rotations other than whole multiples of pi are involved just as one can keep track of a grand combination affine transformation so can one keep a grand combination of portions at each level one can proceed as follows save a copy of the current michener et al page rfc graphics protocol april grand portion and use the inverse of the single level affine transformation specified in the subpicture call to determine what rectangle of the called page corresponds to the current grand portion on calling page various relations may exist between this rectangle and the rectangle specified or defaulted in the subpicture call they may be disjoint in which case this subpicture need not be called at all they may be equal an easy case one may contain the other or they may partially overlap if there is any intersection it will be a rectangle and this rectangle becomes the new grand combination portion the problem with rotations other than multiples of pi is that the inverse image of the rectangle is no longer in the standard orientation vertical and horizontal edges this means that its intersection with the portion specified on the subpicture call may have or edges if it is non empty deeper levels may get even worse if they involve rotations too while there may be no conceptual difficulty for some in working with such a situation significantly more computation is involved than in the simple horizontal and vertical edge case this protocol puts forward no recommendation in the case that rotations other than whole multiples of pi are involved with portions it does suggest that nested portions be handled as described above in the more straightforward case this rfc was put into machine readable form for entry into the online rfc archives by helene morin via genie michener et al page 