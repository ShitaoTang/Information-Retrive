 network working group november request for comments abbay bhushan mit nic bob braden ucla categories d d and d will crowther bbn eric narslem rand obsoletes john heafner rand alex mckenzie bbh john melvin sri bob sundberg harvard dick watson sri jim white uosb the file transfer protocol this paper is a revision of rf mic the changes to rfc are given below the protocol is then restated for your ocnvenience changes to rfc two new file transfer requests have been added these are the op code assignements in control transactions have been changed to include the above requests two new error codes indicating incorrect or missing indentifier and file already exists have been added new error code assignements reflect this change editorial changes to clarify specifications page file transfer protocol rfc november i introduction the file transfer protocol ftp is a userlevel procotocol for file transfer between host computers including terminal imps on the arpa computer network arpanet the primary function of ftp is to facilitate transfer of files between hosts and to allow convenient use of storage and file handling capabilities of remote hosts ftp uses the data transfer protocol described in rfc to achieve transfer of data this paper assumes knowledge of rfc the objectives of ftp are to promote sharing of files computer programs and or data encourage implicit without explicit login use of computers and shield the user from variations in file and storage systems of different hosts these objetives are achieved by specifying a standard file transfer socket and initial connection protocol for implicit use and using standard conventions for file transfer and related operations ii discussion a file is considered here to be an ordered set of arbitrary length consisting of computer data including programs files are uniquely identified in a system by their pathnames a pathname is loosely defined to be the data string which must be input to the file system by a network user in order to identify a file pathname usually contains device and or directory names and file name ftp specifications provide standard file system commands but do not provide standard naming convention at this time each user must follow the naming convention of the file system be wishing to use ftp may be extended later to include standard conventions of pathname structures a file may or may not have access control associated with it the access controls designate users access privileges in absence of access controls files cannot be protected from accidental or unauthorized usage it is the prerogative of a serving file system to provide protection and selective access ftp provides identifier and password mechanisms for exchange of access control information it should however ve noted that for file sharing it is necessary that a user be allowed subject to access controls to access files not created by him ftp does not restrict the nature of information in files for example a file could contain ascii text binary data computer program or any other information a provision for indicating data structure type and byte size exists in ftp to aid in parsing interpretation and storage of data page file transfer protocol rfc november to facilitate impliict usage a serving file transfer process my be a disowned demon process which listens to an agreed upon socket and follows the standard initial connection protocol for establishing a fill duplex connection it should be noted that ftp my also be used directly by logging into a remote host and arranging for file transfer over specific sockets ftp is readily extendable in that additional commands and data types may be defined by those agreeing to implement them implementation of a subset of commands is specifically permitted and an initial subset for implementation is recommended the protocol may also be extended to enable remote execution of programs but no standard procedure is suggested for transferring data ftp uses the data transfer protocol specified in rfc as the data transfer protool does not specify the manner in which it is to be used by ftp implementation may vary at different host sites hosts not wishing to separate data transfer and file transfer functions should take particular care in conforming to the data transfer protocol specifications of rfc it should be noted that ftp specifications do not require knowledge of transfer modes used by data transfer protocol however as file transfer protocol requires the transfer of more than a single control transaction over the same connection it is essential that hosts be able to send control transactions in either transparent block type b or descriptor and counts type ba modes type bs the indefinite bit stream mode is not suitable as it limits transfer to single transactions the use of data transfer aborts type b is neither required nor defined in ftp ftp has its own error terminate wich may be used to abort a file transfer request ftp also does not define to structure of files and there are no conventions on the use of group record and unit separators a file separator however indicates the end of a file it is strongly recommended that default options be provided in implementation to facilitate use of file transfer service for example the main file directora on disk a pool directory user directory of diretory last accessed could serve as standard pathname defaults default mechanisms are convenient as the user doesn t have to specify the complete pathname each time ve wishes to use the file transfer service no standard default procedures are specified by ftp this initial subset represents control functions necessary for page file transfer protocol rfc november basic file transfer and mail operations and some elementary file manipulation operations there is no attempt to provide a data management or complete file management cpability it is possible that wi may at a later date assign meaning to these information separators within ftp iii specifications data transfer ftp uses the data transfer protocol described in rfc for transferring data and or control transaction both data and control transactions are communicated over the same connection data transactions data transactions represent the data contained in a file there is no data type or byte size information contained in data transactions the structure of data communicated via control transactions a file may be transferred as one or more data transactions the protocol neither specifies nor impose any limitations on the structure record group etc or length of file such limitations may however be imposed by a serving host the end of a file may be indicated by a file separator as defined in data transfer protocol in the special case of indefinite bit stream transfer mode type b the end of file is indicated by closing connection in particular a serving or usin host should not send the etx or other end of file character unless such a character is part of the data in file i e not provided by system control transactions the control transactions may be typified as requests identifiers and terminates a request fulfillment sequence begins with a request and ends with receipt of data followed by end of file or a terminate the user side initiates the connections as well as the request the server side listens and complies with the request a op codes the first information i e not descriptor byte or control transactions indicates the control function this byte is referred to as opcode a standard set of opcodes are defined below the operations are discussed in section b page file transfer protocol rfc november implementation of a workable subset of opcodes is specifically permitted additional standard opcodes may be assigned later opcodes hex a octal through hex ff octal are for experimental use op code operation hex octal set data type identifier retrieve request create request write file error ir file already exits store request write file replace if file already exists append request add to existing file error if file does not exist append with create request add to file create if file does not exist delete request delete file rename from request change file name rename to request the new file name list request list information a username identifier for access control b password identifier for access control c error of unsuccessful terminate d acknowledge or successful terminate e through through reserved for standard assignment f a through through assigned for experimental use ff page file transfer protocol rfc november a workable subset is any request plus terminates indentifiers may be required in addition for usin protected file systems b syntax and semantics b data types the set data type control transactions indentifies the structure of data data type and byte size is succeeding data transactions the set data type transaction shall contain two more bytes in addition to the opcode byte the first of these bytes shall convey a data type or code information and the second byte may convey the data byte size where applicable this information may be used to define the manner in which data is to be parsed interpreted reconfigured or stored set data type need be sent only when structure of data is changed from the preceding although a number of data types are defined specific implementations may handle only limited data types or completely ignore the data type and byte size descriptors even if a host process does not recognize a data type it must accept data i e there is no such thing as data type error these descriptors are provided only for convenience and it es not essential that they be used the standard default is to assume nothing about the information and treat it as a bit stream binary data byte size whose interpretation is left to a higher level process or the user the following data type codes are currently assigned where a byte size is not implicit in data type it may be provided by the second byte it is however possible that this bit stream is treated like ascii characters in specific instances such as transmitting a file to a line printer page file transfer protocol rfc november code implicit data type hex octal byte size bit stream standard default none binary data bytes network ascii characters ebcdic characters dec packed ascii five bit characters th bit or decimal numbers net ascii octal numbers net ascii hexadecimal numbers net ascii through through reserved for standard assignemt f a through through assigned for experimental use ff b requests and identifiers retrieve create append append with create delete rename from and rename to requests must contain a pathname specifying a file following the opcode in the information field in the list request a pathname may or may not follow the opcode if present the pathname may specify either a file or a directory a file pathname must uniquely identify a file in the serving host the syntax of pathnames and identifying information shall conform to serving host conventions except that standard network ascii bit ascii right justified in bit field with most signifcant bit as zero shall be used the store request has a byte bits allocate size field followed by a pathname specifying a file allocate size indicates the number of bits of storage to be allocated to the file an allocate size of zero indicates that server should use his default page file transfer protocol rfc november retrieve request achieves the transfer of a copy of file specified in pathname from serving to using host the status and contents of file in serving host should be unaffected create request causes a file to be created at the serving host as specified in pathname a copy of the file is transferred from the using to the serving host if the file specified in pathname already exists at the serving host an error terminate should be sent by the server store request achieves the transfer of copy of file from using to serving host if file specified in pathname exists on serving hosts then its contents shall be replaced by the contents of the file being transferred a new file is created at the serving host if the file specified in pathname does not exist append request achieves the transfer of data from using to serving host the transferred data is appended to file specified in pathname at serving host if the specified file does not exist at serving host an error terminate should be sent by the server append with create request achieves the transfer of data from using to serving host if file specified is pathname exists at serving host then the transferred data is appended to that file otherwise the file specified in pathname is created at the serving host rename from and rename to requests cause the name of the file specified in pathname of rename from to be changed to the name specified in pathname of rename to a rename from request must always be followed by a rename to request delete request causes file specified in pathname to be deleted from the serving host if an extra level of protection is desired such as the query do you really wish to delete this file it is to be a local implementation option in the using system such queries should not be transmitted over network connections list request causes a list to be sent from the serving to using host if there is no pathname of if pathname is a directory the server should send a file directory list if the pathname specifies a file then server should send current information on the file username and password identifiers contain the respective identifying information normally the information will be supplied by the user of the file transfer service these identifiers will normally be sent at the start of connetion for access control page file transfer protocol rfc november b error and acknowledge terminates the error transactions may have an error code indicated by the second information byte transmission of an ascii error message in subsequent bytes is permitted with all error codes except that with hex a error code ascii text is required the errors here relate to file transfer functions only data synchronization and related errors in data transfer are to be handled at the dtp level the following error codes are currently defined error code nd descriptor byte meaning hex octal error condition indicated by computer system external to protocol name syntay error access control violation abort by user allocate size too big allocate size overflow improper order for transactions opcode not implemented file search failed incorrect or missing identifier a error described in text message ascii characters follow code b file already exists in create request at present no completion codes are defined for acknowledge it is assumed that acknowledge refers to the current request being fulfilled order of transactions a a certain order of transactions must be maintained in fulfilling file transfer requests the exact sequence in wich transactions occur depends on the type of request as described in action b the fullfillment of a request may be aborted anytime by either host as explained in section c b identifier transactions set data type username and password may be sent by user at any time the usual order would be a username transaction followed by a password transaction at the start of the connection no acknowledge is required or permitted the identifiers are to be used for default handling and access control page file transfer protocol rfc november retrieve and list requests cause cause the transfer of file from server to user after a complete file has been transferred the server should indicate end of file by sending cls or file separator to complete the request fulfillment sequence as shown below retrieve list requests user file data server end of file indication store create append and append with create requests cause the transfer of file from user to server after a complete file has been transferred the user should send an end of file indication the receipt of the file must be acknowledged by the server as shown below create store append append with create requests user server end of file indication acknowledge rename from request must be followed by a rename to request the request must be acknowledged as shown below user rename from request server rename ro request acknowledge the delete request requires the server to acknowledge it as shown below page file transfer protocol rfc november user delete server acknowledge error transactions my be sent by either host at any time and these terminate the current request fulfillment sequence c aborts eithe host may abort a request fulfillment sequence at any time by sending an error terminate or by closing the connection ncp to transmit a ccls for the connection cls is a more drastic type of abort and shall be used when there is a catastrophic failure or when abort is desired in the middle of a long transaction the abort indicates to the receiving host that sender of abort wishes to terminate request fulfillment and is now ready to initiate ar fulfill new requests when cls is used to abort the using host will he responsible for reopening connection the file transfer abort described here is different form data transfer abort which is sent only by the sender of data the use of the data transfer is not defined in this protocol initial connection cls and access control a socket is the standard preassigned socket number on which the cooperating file transfer process at the serving host should listen the connection establishment will be in accordance with the standard initial connection protocol establishing a full duplex connection b the connection will be broken by trading a cls between the ncp s for each of the two connections normally the user will initiate cls cls may also be used by either user or server to abort a transation in the middle if cls is received in the middle of transaction the current request fulfillment sequence will be aborted the using host will then reopen connection c it is recommended that identifier user name and password transactions be sent by user to server at the start as this would facilitate default handline and access control for the entire duration of connection some service sites may require the indentifier transactions the identifier transactions do not require or permit an acknowledge and the user can proceed directly with requests if the identifier information is incorrect or not received the server may send an error transaction indicating access control violation page file transfer protocol rfc november upon subsequent requests socket has been assigned to logger socket seems a reasonable choice for file transfer rfc or any subsequent standard applicable in initial connection to loggers this rfc was put into machine readable form for entry into the online rfc archives by gottfried janik page 