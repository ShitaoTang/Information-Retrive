 network working group k pogran request for comments mit multics nic may un muddling free file transfer as the arpa network begin to mature we find ourselves addressing issues and concepts deliberately put off and left untouched at earlier stages of network development among the issues now coming to the fore are access control user authentication and accounting these issues arise immediately out of efforts to develop uniform methods for providing limited free access to the file transfer servers of the host systems to meet user needs for mail transmission and similar services several proposals have been made described by such phrases as login less mail free accounts free file transfer etc these proposals inevitably have imbedded in them some particular notion of how such things as access control and user authentication are accomplished and these proposals which knowingly or unknowingly make presumptions about the implementation of such mechanisms inevitably meet with strong criticism from implementors whose systems mechanisms are quite different in rfc bob bressler proposes ways of helping out users who wish to transfer files to or from systems which have some flavor of security but on which the user has no access privileges unfortunately beginning with the first paragraph of the rfc the notions of access controls on files examples of protection mechanisms and control of access to the system user authentication are thoroughly muddled in addition he makes sweeping assumptions about the nature and use of accounting mechanisms and accounts at server sites rfc also has buried deep within it assumptions about the nature of the access control and user authentication aspects of file transfer server implementations what s needed at this juncture of course is a lucid discussion of the general concepts involved in protection mechanisms and file system access controls in particular well you won t find that in the remainder of this rfc what you will find is perhaps enough of a discussion to un muddle that which rfc has muddled the rest will have to come down the pike at a later time in many systems mechanisms which control access to the system mechanism which control access to files and accounting mechanisms all mesh at the moment at which a prospective user of the system is authenticated the system has checked his user name password pogran page rfc un muddling free file transfer may account or whatever and decided that he is indeed a valid user of the system this user who would like to have some information processing performed on his behalf is termed a principal in privacy and protection parlance some number of processes are initially set up for this principal and some presumably unforgeable principal identifier is associated with the process es so that their requests for access to files and other system resources may be properly validated in addition the identify of the account to be charged for the resources consumed by these processes is associated with the processes at this time although on some systems a process may change its account identifier at any time the first question is whose principal identifier does a file transfer server process use there are at least two possibilities the file transfer server can run as a system daemon process with usually a highly privileged principal identifier when acting on behalf of a user it must itself interpretively evaluate that user s access to a desired file also it must be able to charge that user s account for the resources it uses a file transfer server process can be given the user s own principal identifier with this implementation validation of the user s access to files is performed automatically by the usual file system mechanisms paragraph four of rfc clearly presumes implementation if a user connects to an ftp server and makes a file request without supplying a user name password the server should then examine the file access parameters systems truly concerned about protection may prefer implementation and for good reason it follows the principle of least privilege which states that a process should execute with as little access privilege as it requires to perform its tasks properly running a file transfer server process with a user s principal identifier rather than with that of a system daemon leaves the system far less susceptible to damage caused by incorrect actions of the file transfer server the next question is whom do you charge for file transfers bressler tries to set down some guidelines for determining who to charge for non logged in read free file transfer usage clearly storing a file in a user s directory can be charged to that user how is the word storing used here surely that user can be billed for the disk or other storage medium charges incurred by that file which is now taking up space but is it legitimate to charge that user for the i o and or cpu resources used by someone else to transfer a file over the network and place it into that user s directory for example should the recipient of network mail be charged for the resources consumed by someone else in sending it would you care to pay the postage for all the junk mail that arrives in your home u s mail mailbox pogran page rfc un muddling free file transfer may over the telephone bob explained to me that he desired a mechanism which would for example enable me at his request to transfer a file from my system to his directory on his system without requiring that i know his password all well and good in this situation it would make sense to charge bressler s account for this file transfer but how does an un authenticated user tell a server charge this to bressler s account because he says it s ok pitfalls abound the file transfer server process needs to be able to charge an arbitrary user s account this again presupposes implementation of the file transfer server described above or else any user process in the system would have the capability of charging any user s account this seems undesirable a more reasonable approach would be to charge that instance of the file transfer server process to a general network services account mechanisms for accomplishing this are presented in rfc rfc matter of factly suggests that retrieval of files in system directories should be charged to overhead here too some broad assumptions are made about the nature of accounting mechanisms and accounts at server sites in addition an undesirable loss of generality is imposed upon the file transfer server it is now required to have the capability of distinguishing the pathnames of system files from those of user files in a number of systems there is no syntactic distinction between the two and the same general mechanisms can be used to manipulate both kinds of files if a distinction between them can be made at all the addition of code to the file transfer server which examines the pathname given for each request to determine which sort it is seems to be antithetical to the goals of uniformity and generality that many of today s systems have achieved the statement that a network user s file transfer activity can be charged to a system wide overhead account contains two assumptions such an account cannot be presumed to exist on all systems furthermore if it does exist in some cases it just isn t the right account to charge certainly a good case can be made that the cost of fostering inter user communication within the arpa network community which is what free file transfer amounts to should be borne by arpa meaning that such activity should be charged to arpa funded accounts if a host system s operation is entirely funded by arpa or if its management doesn t care who pays for this activity then it makes sense to charge free file transfer activity to a system overhead account on the other hand that isn t the correct course of action for a host system whose operation is not funded by arpa for charging free file transfers to system overhead would result in passing the cost along to local customers who may have no interest at all in the arpa network pogran page rfc un muddling free file transfer may lastly bressler suggests that for file retrieval cpu charges may be sufficiently small to not cause a major problem to believe this is naivete it may appear to be true for a system which doesn t charge the user for time spent executing supervisor code or i o routines where network software overhead doesn t show up in the user s bill in this case network software overhead must contribute to general system overhead the cost of which must be borne by all users i don t think many people in the network community would consider the actual as opposed to charged cpu time spent transferring a file to be negligible certainly if a system is a very popular or busy one from a network standpoint the cumulative cpu time spent on free file transfers viewed at the end of an accounting period a week a month a year will not be negligible in this rfc i ve picked apart bob bressler s rfc mostly because of its confusion of several distinct although related issues and the implementation assumptions it contains which conflict with or badly bend out of shape mechanisms and design philosophies existing on other systems in particular the system i am most familiar with multics the applicability of the discussions in this rfc i think goes beyond that we ve got to acknowledge that it s difficult to propose network wide mechanisms for providing desirable services without building in assumptions about how they are to be implemented we re at a point where we re asking for fairly sophisticated services and proposing correspondingly sophisticated mechanisms it s time to begin talking about how various systems accomplish such things as user authentication access control and so on so that we can all gain a clearer understanding of such issues and be able to propose mechanisms with fewer implementation assumptions built into them end notes on some systems there is a one to one correspondence between principals and accounts it should be noted that systems which choose implementation may require a user authentication sequence user pass and possibly acct commands before permitting any file transfers as explicitly stated on page of rfc nic and page of rfc nic this authentication sequence would be required to ascertain the principal identifier to be associated with the newly spawned file transfer server process the process is not allowed to proceed until its principal identifier has been established pogran page rfc un muddling free file transfer may note that there are at least two scenarios for accomplishing the transfer bressler desires either i push the file using my user ftp and his system s ftp server or he pulls the file using his user ftp and my system s ftp server bob chose the first scenario it can be argued that since it is bob who wanted the file transferred the second scenario is the more appropriate one a forthcoming rfc by mike padlipsky expands on these points as well as an entirely different alternative padlipsky keeps insisting that i ve also shown the superiority of implementation of the file transfer server described above but i resist that conclusion those interested may want to look at his unified user level protocol specification which is based on a similar premise this rfc was put into machine readable form for entry into the online rfc archives by via genie pogran page 