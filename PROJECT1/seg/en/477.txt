 network working group james e white request for comments uc santa barbara nic april network specifications for ucsb s simple minded file system contents page i preface ii implementation iii login iv service offered v primitive file operations v a allocate file alf v b update file udf v c replace file rdf v d retrieve file rtf v e space file spf v f delete file dlf v g rename file rnf v h file no operation fno v i no operation nop vi input stream format vii output stream format j white page rfc simple minded file system april figures page figure filename password character sets figure command op codes figure defined command fields figure definition of command flags bits figure defined command response fields figure completion codes j white page rfc simple minded file system april i preface ucsb will provide file storage for network users ucsb s simple minded file system smfs is addressed as socket number x site no accounting parameters are required this document is intended to provide programmers with the information necessary to communicate with smfs which conducts all network transactions trough its ncp which operates under the host host protocol of august ii implementation the following information is not essential to use of smfs but may be of interest smfs will store user s files on ibm disk packs each with m bit bytes of storage capacity ucsb has two units each with eight drives on line initially one drive will be allocated for network storage and the appropriate pack will always be mounted an that drive and hence accessible to smfs without operator intervention ucsb estimates that for the next year it will have up to four drives that it can devote to network use the second third and fourth drives will be allocated only as the need arises smfs is written to accommodate any number of on line drives without modification if necessary ucsb will investigate the possibility of making one of the four drives a come and go drive on which one of a number of packs can be mounted as required hence the potential exists for increased storage capacity with an accompanying increase in access time files stored with smfs will be backed up to tape daily the back up tape s will be off line and available only in case the on line copies are destroyed in no sense does usb expect to become the file storage node of the network it hasn t the capacity ucsb is equipped however to make a limited amount of secondary storage immediately available to the network community iii login smfs can simultaneously service any number of network users up to some assembly parameters maximum currently ten a potential user must establish a pair of network connections at the time of this writing the ncp modifications of rfc have not as yet been implemented at ucsb j white page rfc simple minded file system april i e one full duplex connection to smfs by executing a standard icp to socket x site smfs always listens on that socket it will accept any call it receives say from the user s receive socket m and over the connection thus established transmit a bit receive socket number call it n and then close the connection smfs will then issue two connection requests one involving its receive socket n and the user s send socket m l in other involving its send socket n l and the user s receive socket m once these two connections have been established the user will be considered logged in a deviation from the initial connection protocol will occur only if smfs or its ncp has insufficient resources to support another connection smfs will maintain its connections to the user indefinitely it will voluntarily terminate its connections to the user only if a bad op code is encountered in a user command see section vi or closing one of the connections is required to signal end of data see section v d barring such an occurrence the user should close his connections to smfs when through at which time smfs will consider the user logged out in the discussion to follow the following terms are used the connections on which the user transmits data to and receives data from smfs are designated the input and output connections respectively i e smfs s rather than the user s point of view is adopted the string of bits which passes from the user to smfs over the input connection during the life of that connection is called the input stream the string of bits which passes from smfs to the user over the output connection during the life of that connection is called the output stream iv service offered smfs will provide storage for sequential binary files of length greater than or equal to an assembly parameter minimum currently one bit and less than or equal to an assembly parameter maximum currently million bits there is no restriction on the contents of the file every file stored with smfs has a filename which may be any string of from one to bit characters chosen from the set a z blank j white page rfc simple minded file system april graphic ebcdic code hex ascii code hex uc lc uc lc uc lc a a c b b c c c c d d c e e c f f c g g c h h c i i c j j d a a k k d b b l l d c c m m d d d n n d e e o o d f f p p d q q d r r d s s e a t t e a u u e a v v e a w w e a x x e a y y e a z z e a a a f f f f f f f f f f blank figure filename password character sets j white page rfc simple minded file system april filenames may be specified by the user in either ebcdic or ascii see figure and the characters a z may be either upper or lower case however the acceptance by smfs of both upper and lower case and both ebcdic and ascii is provided only as a convenience to the user in particular such distinctions don t increase the number of unique filenames that can be generated the filenames file number and file number in ebcdic or ascii designate the same file every file stored with smfs may optionally be protected against unauthorized retrieval and or modification when a file is created the user may associate with it a modification password and or an access password thereafter smfs will demand that the appropriate password be supplied before the file is modified or retrieved respectively since smfs protects each file independently against unauthorized modification and retrieval a group of users can be given access to a file while a single individual retains the exclusive right to modify it if no password is defined for a particular type of reference to a file then such references are unrestricted passwords have the same attributes as filenames same length restrictions and same character sets because of the manner in which smfs writes files onto secondary storage it must insure that while one user is modifying a file no other user is simultaneously either modifying or retrieving the same file this requirement is effected by a mechanism internal to smfs and hence transparent to users with the exception that when a user attempts to retrieve or modify a file currently being modified by another user smfs will delay action upon the request until the current modification is complete there is no restriction on the number of users which may concurrently retrieve the same file v primitive file operations smfs recognizes and will execute the following primitive file operations v a allocate file alf smfs regards the reservation of filename the assignment of passwords and the reservation of secondary storage as an operation distinct from that of transmitting the file s contents the operation is called file allocation abbreviated alf in allocating a file the user specifies the filename to be assigned to it the access password if any and the estimated size of the file in bits smfs checks the proposed filename to insure that it doesn t duplicate that of an existing file smfs also checks to insure that it has sufficient secondary storage available to accommodate the new j white page rfc simple minded file system april file if both requirements are met smfs allocates the file the filename is reserved secondary storage is reserved and the password information is recorded in reserving secondary storage for a file smfs adds its estimate of its overhead in storing the file to the user declared size of the file in general the user should slightly over estimate the size of his file at allocation smfs allocates a fixed amount of storage on the basis of that estimate an amount which cannot be increased later smfs s actual overhead in storing a file is a function of the manner in which the contents of the file are transmitted by the user the overhead is minimal when the file is transmitted in a single series of operations see section vi and increases as the number of operations increases it is the overhead associated with single series transmission that smfs adds to the file size specified by the user to determine the amount of storage to allocate hence for multiple series transmission the overhead will have been underestimated v b update file udf the operation of transmitting part or all of a previously allocated file s contents for storage by smfs is called updating the file udf the user specifies the filename of the file to be updated the modification password if required the amount of data in bits to be added to the file and finally the data itself smfs locates the file on secondary storage checks the password for validity if appropriate and adds the data to the file smfs considers the update complete when either the specified number of bits have been extracted from the input stream and stored or when the user terminates transmission by closing the connection the data transmitted in a udf operation is concatenated to the current contents of the file boundaries between updates are transparent to the user when the file is retrieved hence for example the contents of a file might be transmitted to smfs in two distinct udf operations and later retrieved in a single rtf operation see section v d the user should view a file stored with smfs as a potentially very long bit string which may be transmitted to smfs in any number of variable length segments and is retrievable in any number of variable length segments with the manner of segmentation chosen during retrieval independent of that selected during the updating process the user may optionally request that smfs remember the manner in which a file was updated i e along with the data store sufficient information to reconstruct segment boundaries at retrieval time such a file is said to be formatted in retrieving a formatted j white page rfc simple minded file system april file the user rather than requesting that smfs transmit the next n bits of the file as he would do for an unformatted file see section v d requests that smfs transmit the next segment of the file it is then smfs s responsibility to supply the length of the segment hence the notion of a logical record is introduced of course since the user may format the contents of a file in any way he chooses he can embed record length information in the data itself hence the user can implement a record structure in a way that s transparent to smfs this scheme however requires during retrieval that for each logical record retrieved the user fetch first the length field and then using the length as an operand fetch the data itself in this kind of arrangement the retrieval rate is apt to suffer however by allowing smfs knowledge of logical record boundaries the feedback loop is effectively shortened smfs being closer to the file hence the potential exists for an increased retrieval rate if the user intends that a file be formatted he must so specify in every update and every retrieve operation referencing that file smfs in no way flags a file to indicate that it is formatted hence if the user invokes the option during retrieval without having done so when the file was stored results will be erroneous furthermore if an update of a formatted file is terminated before the bit count for the operation is exhausted i e because the user closed the connection retrieval results will again be erroneous v c replace file rpf the replace file rpf operation is identical to udf except that the new file segment rather than being concatenated to the existing file replaces the entire contents of the file the previous contents of the file are lost and the new segment becomes the only segment in the file rpf may be used to rewrite an existing file if the rewritten file is to contain just a single segment that segment may be transmitted to smfs in an rpf operation otherwise the first segment of the new file must be transmitted in an rpf operation and all succeeding segments in udf operations alternately a dummy bit count of zero rpf operation may be inserted before the first real segment is transmitted all segments of the file may then be transmitted in udf operations j white page rfc simple minded file system april v d retrieve file rtf the operation which retrieves all or part of a file s contents is called file retrieval rtf the user specifies the filename of the file to be retrieved the access password if required and the amount of data in bits to be fetched from the file smfs locates the file on secondary storage checks the password for validity if appropriate and copies the bit count and the requested file segment into the output stream smfs considers the retrieval complete when either the requested number of bits have been placed in the output stream or when the contents of the file are exhausted in this latter case smfs closes the connection to signal end of data to the user successive rtf operations referencing the same file cause successive segments of the file to be transmitted provided that the operations are juxtaposed in the input stream however nop s may be interspersed anywhere in the input stream when a series of rtf operations referencing a particular file is broken by an operation referencing another file or by a different type of operation involving the same file the next rtf operation designating the original file will cause the first segment of that file to be transmitted the manner in which the user segments a file for a series of retrieve operations need bear no relationship to the segmentation scheme employed when the file was updated nor to that employed in previous retrievals if the user elected to have his file formatted by smfs he should re invoke the option in the rtf operation in which case smfs will supply the length of the segment and place both it and the segment itself into the output stream v e space file spf files stored with smfs are sequential in organization that is the n th segment of the file cannot be retrieved without first processing the nth segment the user may however upon occasion wish to retrieve only selected segments of a file this he could do effectively by retrieving each segment of the file and flushing those with which he was currently unconcerned to avoid needless network traffic smfs provides a mechanism for flushing file segments locally the operation is called spacing a file spf it is identical to rtf with the exception that transmission of data but not bit count is suppressed spf operations may be freely inserted anywhere within a series of rtf operations designating a particular file with the desired results j white page rfc simple minded file system april v f delete file dlf a file may be deleted at any time after allocation the user specifies the filename of the file to be deleted and the modification password if required smfs locates the file on secondary storage checks the password for validity if appropriate and if the password is correct deletes the file the filename is made available for reassignment and the secondary storage allocated to the file is reclaimed by smfs the contents if any of the file are lost v g rename file rnf a file stored with smfs may be renamed at any time after allocation the user specifies the current filename of the file to be renamed the modification password if any and the proposed new filename smfs locates the file on secondary storage checks the password for validity if appropriate and assures that the proposed new filename is not already assigned to another file if these requirements are met the file is renamed and all subsequent references to the file must be by the newly assigned filename rnf provides a means for protecting a file that must be rewritten in its entirety against failures in the net or in the sending or receiving host the strategy is as follows allocate a new file assigning it some temporary name transmit the revised file contents in one more udf and or rpf operations then delete the original file and using rnf replace the newly created file s temporary filename with that of the original file v h file no operation fno fno is a dummy operation which is provided for use in terminating a series of rtf operations should the user desire to retrieve the contents of a file twice in succession he may do so with a series of rtf spf operations followed by a fno followed by a second series of rtf spf operations each rtf spf operation in the first series will retrieve flush the next segment of the file the first operation of the second string since it is the first of a string will as explained in section v d retrieve flush the first segment of the file the remaining operations in the second string will of course retrieve flush the nd rd etc segments of the file hence the contents of the file are transmitted twice fno when it terminates such a string of operations effectively repositions the user to the first segment of the file fno may appear anywhere within the input stream j white page rfc simple minded file system april v i no operation nop this operation is provided solely to aid the user in formatting the input stream and is discarded without further processing whenever it is encountered in particular a nop embedded in a series of rtf operations does not terminate the string as fno does vi input stream format the input stream shall consist of a contiguous string of commands to smfs a command type is defined for each of the primitive file operations of section v each command has the following general format op access modification new code flags filename password password filename bit count data where the lengths of fixed length fields have been indicated in bits each of the fields filename access password modification password and new filename is further divided into the following subfields length length filename password where the length subfield contains the length in bit characters of the filename password subfield this is the general format for all smfs commands no one command type requires all of the fields specified above a particular subset of these fields is defined for each type of command and only those fields should appear the defined fields for each command type are indicated in figure furthermore not all of the fields which are defined for a particular command type need always appear explicitly the user should envision that smfs maintains filename password and bit count accumulators every time a filename or new filename j white page rfc simple minded file system april access modification password or bit count appears explicitly in the input stream it is saved in the appropriate accumulator a null password designated by setting bits or bits to zero figure should be thought of as appearing explicitly the user may cause a defined field to default to the current contents of the appropriate accumulator by turning on the appropriate bin in the flags field see figure when a field defaults in this manner that field is said to appear implicitly in the command nop no operation fno file no operation alf allocate file udf update file rpf replace file rtf retrieve file spf space file dlf delete file rnf rename file figure command op codes the three accumulators are initially empty and hence an attempt to default a field in the first command in the input stream illicits an error indication a field of the appropriate type must appear once explicitly in the input stream before the corresponding accumulator is considered defined furthermore whenever smfs detects an invalid filename or password i e improper length or deviation from the character set in the input stream the appropriate accumulator is left empty again smfs allows operations on several files to be interleaved in the input stream by including in its command formats provision for explicitly specifying filename and password information in each command when many operations involving the same file appear sequentially in the input stream the user need only let the appropriate fields default in all but the first command avoiding re transmission of what would otherwise be redundant parameters j white page rfc simple minded file system april m o d i f i a c c a c t e i n s o e s n w b f p p f i o i a a i t p l s s l f e s s e c c l n w w n o d o a a o o a u a d g m r r m n t e s e d d e t a alf x x x x x x udf x x x x x x rpf x x x x x x rtf x x x x x spf x x x x x dlf x x x x rnf x x x x x fno x nop x figure defined command fields note command fields marked with an x are defined j white page rfc simple minded file system april access password the access password for this defaults operation defaults to the access or modification password which appeared explicitly most recently in the input stream hence it does not appear explicitly in the current command bit count defaults the bit count for this operation defaults to that which appeared explicitly most recently in the input stream hence it does not appear explicitly in the current command filename defaults the filename for this operation defaults to the filename or new filename which appeared explicitly most recently in the input stream hence it does not appear explicitly in the current command access password the access password for this appears explicitly operation appears explicitly in the current command bits indicates that no access password was is to be defined for the file echo op code smfs shall echo the op code and and filename filename whether it appears explicitly or not by copying them into the output stream ahead of any other response to the current command undefined not examined should be zeros modification same as bit but applied to password defaults the modification password rather than the access password figure definition of command flags bits j white page rfc simple minded file system april file formatted for udf rtf this segment is part of a formatted file hence smfs should record the bit count for rtf spf the referenced file is formatted hence the bit count does not appear explicitly in the current command new filename same as bit but applied defaults to the new filename rather than the filename modification password same as bit but applied to appears explicitly the modification password rather than the access password undefined not examined should be zeros figure continued definition of command flags bits note the sixteen bits of flags are numbered from left to right when a series of rtf spf operations referencing the same file are juxtaposed in the input stream as discussed in section v d they cause successive segments of the file to be transmitted only if both filename and access password default bits a null password is also acceptable in those operations following the first in the series if the user specifies either parameter explicitly in a command in the series even if the explicitly stated value is the same as what would have been the default value smfs considers the series terminated as if a fno had been encountered and hence the command in question returns or flushes the first segment of the file allowing both filename and password to default has the added effect in both rtf spf and udf series of decreasing the processing time required by smfs to execute the operations which comprise the series under such circumstances smfs executes such initial functions as file location and password verification only once at the beginning of the series rather than for each operation hence a potential for increased transmission rates exists furthermore in such a series of udf rpf operations smfs is able to conserve secondary storage by concatenating file segments before they are written out j white page rfc simple minded file system april whenever smfs aborts the processing of a command in the input stream e g the filename is invalid an incorrect password is supplied etc smfs flushes the entire command suppose for example that the file specified in a udf operation does not exist i e has not been allocated if the data field for the operation is very long smfs may well detect the non existence of the file before the data field has been transmitted by the user in such cases smfs will accept and flush whatever remains of the aborted command in this case including the very long data field until it reaches the point in the input stream at which it expects to find the next command which it will process normally smfs will however notify the user that the command was aborted by placing an appropriate indicator in the output stream and it will do this as soon as it detects the error and hence in this case before the erroneous command has been flushed from the input stream hence the user has the option of aborting the process by closing the connection smfs considers a command with an invalid op code as an especially severe error since it has no way of locating the start of the next command accordingly it places a special character x ff in the output stream follows it with the invalid op code and then closes its connections to the user vii output stream format smfs will respond to each command it extracts from the input stream every command except fno and nop by placing a command response in the output stream command responses have the following general format op cmpl code filename code bit count data where the lengths of fixed length fields have been indicated in bits the field filename is further divided into the following subfields length length filename where the length subfield contains the length in bit characters of the filename subfield j white page rfc simple minded file system april this is the general format for smfs command responses for responses to particular commands not all fields may be present a particular subset of these fields is defined for each type of command response no other fields will appear the defined fields for each command response type are indicated in figure the fields op code and filename are the op code and filename extracted by smfs from the input stream and are echoed by smfs in the output stream the filename is always echoed explicitly even if it appeared implicitly in the input stream op code and filename are suppressed and hence do not appear in the command response it bit of the flags field of the corresponding command is set to cmpl code contains an indication of the outcome of the operation if the operation was completed successfully cmpl code contains a value equal to the op code of the command executed hence if echoing of op code and filename is not suppressed the operation was successful if and only if op code and cmpl code are identical if the operation as unsuccessful cmpl code contains an indication of the error encountered by smfs in processing the command completion codes are summarized in figure j white page rfc simple minded file system april c o m p l e f t b i i i o l o t p e n c c n c o d o a o u a d m d n t e e e t a nop fno alf x x x udf x x x rpf x x x rtf x x x x x spf x x x x dlf x x x rnf x x x figure defined command response fields note command response fields marked with an x are defined j white page rfc simple minded file system april an invalid op code in the input stream constitutes a special type of error smfs s response is as follows a special command response is constructed it consists of the value x ff in an eight bit field followed by the erroneous op code also in an eight bit field the command response is placed in the output stream and connections to the user are closed allocation successful the file was successfully allocated update successful the file was successfully updated replace successful the file was successfully replaced retrieve successful the file segment was successfully retrieved space successful the file segment was successfully flushed deletion successful the file was successfully deleted rename successful the file was successfully renamed no default filename the user attempted to default the filename or new filename and the filename accumulator was empty zero length filename the length of the filename or new filename was specified as zero filename too long the length of the filename or new filename exceeded characters invalid filename the filename or new filename contained character s that do not appear in the character set no default password the user attempted to default either the access or modification password and the password accumulator was empty zero length password the length of either the access of modification password was specified as zero figure completion codes j white page rfc simple minded file system april password too long the length of either the access or modification password exceeded characters no default bit count the user attempted to default the bit count and the bit count accumulator was empty invalid password either the access or modification password contained character s that do not appear in the character set duplicate filename either the filename in an alf operation or new filename in a rnf operation is already assigned to another file insufficient space in an alf operation the requested amount of secondary storage is unavailable allocation i o error in an alf operation an irrecoverable i o error was encountered by smfs while attempting to allocate the file file not found the referenced file does not exist search i o error an irrecoverable i o error was encountered by smfs while attempting to locate the referenced file file full in a udf rpf operation the secondary storage allocated to the file has been exhausted incorrect password the access or modification password supplied by the user does not match that declared when the file was allocated file size too small in an alf operation the bit count specified is less than the minimum file size accepted by smfs figure continued completion codes j white page rfc simple minded file system april file size too big in an alf operation the bit count specified exceeded the maximum file size accepted by smfs write i o error an irrecoverable i o error as encountered by smfs in an alf operation smfs was attempting to record password information or in a udf rpf operation smfs as attempting to add data to the file read i o error an irrecoverable i o error was encountered by smfs attempting to retrieve either password information or data rename i o error an irrecoverable i o error was encountered by smfs while attempting to rename the file delete i o error in a dlf operation an irrecoverable i o error was encountered by smfs while attempting to delete the file end of data in a rtf spr operation the end of the file was reached before the requested segment had been transmitted flushed figure continued completion codes this rfc was put into machine readable form for entry into the online rfc archives by gottfried janik j white page 