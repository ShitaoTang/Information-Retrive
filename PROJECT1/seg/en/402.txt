 network working group t o sullivan request for comments raytheon nic may discussion of telnet protocol the attached discussion is an extension of rfc nic and is presented to provide useful background to designers and implementers to help them interpret the proposed protocol and evaluate it in preparation for further discussion at the atlantic city meetings while the views in the discussion represent those of various telnet committee members they should not be interpreted as being the agreed view of committee they are the author s understanding of some of the arguments and background to the protocol proposed in the telnet protocol recommendations see footnotes to attached discussion for changes to rfc discussion of telnet protocol the use of a standard network wide intermediate representation of terminal code between sites eliminates the need for using and serving sites to keep information about the characteristics of each other s terminals and terminal handling conventions but only if the user the using site and the serving site assume certain responsibilities the serving site must specify how the intermediate code will be mapped by it into the terminal codes that are expected at that site the user must be familiar with that mapping the using site must provide some means for the user to enter all of the intermediate codes and as a convenience special control signals as well as specify for the user how the signals from the serving site will be presented at the user terminal other schemes were considered but rejected for example a proposal that the using site be responsible to transmit to and from the code expected by the serving site was rejected since it required that the using site keep tables of all serving site codes and provide mapping for each case the information would require constant maintenance as new hosts were added to the network o sullivan page rfc discussion of telnet protocol may since it is not known how the current or future sites will specify the mapping between the network wide standard code bit ascii in an bit field and the codes expected from their own terminals it seems necessary to permit the user to cause every one of the ascii codes plus for full user power selected control signals either of a telnet control nature or of a special terminal nature such as break or attention there was strong feeling about the importance of the user system interface at the using site but equally strong feeling that this problem is one of local implementation and should reflect the using site installation philosophy rather than the subject to network wide standards some topics of consideration in this area are how to represent special graphics not available at the using site at the user s terminal treatment of upper lower case problem on tty and a representing lower case output b providing users with shift and shift lock signals incorporating editing capability in telnet extending user options in network mode not available to local users e g hold output kill print permit users to specify how keyboard input is to be translated e g let a character from the terminal cause a specified string to be sent by the user s telnet in early discussions there was pressure to get a simple statement of protocol out early to permit early use of selected systems the counter pressure to provide a richer set of protocol in the first release was also present work started in the direction of the latter but the complexities introduced were not necessary for early use of the network the proposed solution to the telnet protocol problem seems to provide a mechanism for a minimum implementation to be discussed later while providing a basis for developing richer sets of protocol for present and future use in terminal applications process process communications and use by other conventions to pass data or control information o sullivan page rfc discussion of telnet protocol may the understanding that ascii be used as a network wide code has been established for some time its use in telnet provided a problem with respect to the limitation of a maximum character set of some systems provide for more than this number in their operation and therefor as serving sites cannot map on a one for one basis each such serving site could probably provide a reasonably useful character set including all system control signals by mapping of its codes and just not provide a network user access to the other codes however any character left out might later be used in a major application at that site as a special control signal this could result in denying network users the facility offered by that application serving sites are therefor encouraged to provide a full mapping between the ascii code and the code used on the serving system the ascii code for esc known to some as alt mode has been selected as an escape for each serving site character not mapped on a one for one basis the serving site can specify an escape character or string of escape characters preferably a printable graphic to represent it thus the user could enter the full set of serving site code from any network terminal operating through the network virtual terminal nvt ascii convention the serving site in generating output directed at the user s terminal would be expected to map out such a character and transmit the appropriate esc character or string of esc characters example a serving site whose normal code is ebcdic has specified that cent has not been mapped on a one for one basis and that to transmit the character users must enter esc followed by c at a using site the telnet implementers have decided to try to print out all esc characters using to indicate esc on receipt of the representation for cent the user would see c on his print out the representation of the end of a physical line at a terminal is implemented differently on network hosts for example some use a return or new line key the terminal hardware both returns the carriage or printer to start of line and feeds the paper to the next line in other implementations the user hits carriage return and the hardware returns carriage while the software returns to the terminal a line feed the network wide representation will be carriage return followed by line feed it represents the physical formatting that is being attempted and is to be interpreted and appropriately translated by both using site and serving site o sullivan page rfc discussion of telnet protocol may example a multics user is working through the network on some serving site host in the course of the session the user has numerous occasions to hit new line on his mod tty each time the multics system is awakened by a new line interrupt the line of buffered characters is passed to telnet where it is scanned for special characters if none is found carriage return followed by line feed is inserted where new line was entered and the line is turned over to the ncp for transmission when the telnet finds the carriage return line feed sequence in the data stream coming from the serving site the two characters are replaced with new line code and sent to the terminal the decision to have the assumed condition for echo be that the using site will provide any echo necessary for its terminals was taken because of the difficulties faced by some installations that cannot turn off their echo or that have terminals that print locally as a result of key strokes serving sites could take the position let the user turn my echo off but this seems an unnecessary burden on the user in addition some serving sites may choose not to supply any echo service in which case the no echo assumption will supply a network wide condition while other assumptions would give a mixed starting connection the convention of using i echo you echo seems to fill both the requirements for dynamic echo control and for a minimum implementation of telnet protocol an agreed upon exchange to pass echo control i e two sites exchange the i echo you echo codes results in passing the control from one site to the other example a serving site is exchanging control information with the user in an area where the serving system asks for pass word and wants to suppress the printing of the pass word at the using site s user terminal in this case the using site has the ability to control the print capability at the user s terminal using site has been echoing to the user s terminal serving site to using site i echo using site to serving site you echo pass word user enters password at terminal o sullivan page rfc discussion of telnet protocol may no echo sent you echo i echo after the exchange the original normal condition is re established if the using site did not have dynamic echo control installed in its telnet implementation the serving site would have signaled i echo several times received no response and assumed that the using site could not comply proceeding to call for the pass word without the normal protection of inhibiting print telnet control signals are of two types one that results in transmission of signals down the network to a receiving site the other intended for the user process site only the latter type will be discussed later so far we have discussed the former type specifically dealing with echo control the use of esc should not be considered a telnet wide standard but a convention limited to the bit ascii mode of transmission other conventions to be incorporated later may include binary transmission ebcdic etc presumably each will have its own convention for an escape character to extend its code set since it is expected that conventions other than ascii will be implemented under telnet a code to indicate a data type representing each set of conventions will be employed the control code x ao has been selected to represent the ascii convention in telnet since a number of applications may wish to transmit transparently i e bit binary data x al is being reserved for that purpose the telnet control code x a is reserved for an expected set of ebcdic conventions the data type is expected as the first byte of data over a telnet connection minimum implementations will be aided by providing a default that is if the first byte over a connection has the high order bit set as zero then the transmission has begun in ascii mode each set of conventions i e each data type will be expected to have a convention for that data type to signal that it is returning to control mode this return may be for the purpose of making use of an existing control codes or to change data type x is used example at the using site a terminal has a special device on it e g plotter laboratory instrument control box etc that is controlled by binary code in bit bytes the terminal uses a special enter code that routes signals to the device and cuts o sullivan page rfc discussion of telnet protocol may off printing at the terminal until a special leave signal is received from the driving process the driving process in this case is at a remote serving site it is assumed in this example that a dle convention is used for transparent transmission a single dle signal representing return to control normal transmission has been in ascii driving process at serving site to using site x x a using site to serving site x x enter code bit binary bytes using site telnet to terminal v enter code bit binary bytes terminal turn printer off feed transparently to special device look for leave signal bit binary bytes leave signal single dle x a x x message v bit binary data leave signal message o sullivan page rfc discussion of telnet protocol may terminal during this sequence of exchanges at the terminal feed binary data to special device until leave signal is sensed strip off leave signal turn on printer and block data path to special device print message at terminal there is a special control signal on some terminals that has no corresponding bit pattern in ascii but is transmitted by a special electrical signal this control signal is attn on a and break on a teletype the ascii data type in telnet will use the code x to represent break there is a corresponding control signal for use from serving sites to using sites for reverse break and it is assigned the code x some systems treat the break as an extra code available for use in conjunction with the data stream for example one system uses break as a special editing code meaning delete the current line to this point in these cases the code may simply be inserted in the data stream with no special additional action by the user other systems use break or attn in a special interrupt fashion to mean stop processing the application and give me the supervisor or cancel the present job etc other systems use normal characters for this purpose such as control c in these cases because of differences in the ways both serving and using sites operate it is necessary to take a route in addition to the normal telnet data stream to signal that the special control signal is imbedded in the data stream examples problem the pdp normally will when it fills its input buffer continue to accept characters from a terminal examining each to see if it is a control character then act on it if it is or throw it away if it is not since the telnet server at the serving site is at the mercy of the ncp with respect to controlling the bunching and therefor arrival at the telnet of bursts of characters telnet implementations might be expected to choke off flow to the buffers until they are ready to accept characters without throwing them away under this condition the serving process might be outputting to the using terminal the input buffers fill up and a control c get stuck in the data stream that has been choked off o sullivan page rfc discussion of telnet protocol may a similar problem could occur with the multics or some ibm system as a server the user at a using site gets into an output loop at the serving site and wants to break the process without having to release his telnet connection the buffers clog the connection transmission is choked off and the control c break or other user control signal gets stuck in the pipeline example solution the user at the using site knows he is entering a special control signal break attn control c etc and follows it with an x the local instructions at using sites for accomplishing this may differ from site to site using site telnet to serving site insert x in data stream using site telnet to using site ncp send an ins sending site ncp to telnet server look out here she come serving site telnet does its special thing until it sees x then resumes normal handling thus depending on the server s local implementation to provide adequate service a special handling of the data stream can be invoked whenever an ins is received in order to get the special character when it sees x it recognizes it as a sync character and knowing that the special character has been passed on strips the x from the data stream and returns to normal mode if the x arrives before the ins a counting scheme can keep the activity appropriate to the serving site conditions this approach to handling selected special characters or signals relieves the using telnet processes from having to recognize the special serving site characters as well as from having to know how the serving site wants to handle them at the same time the o sullivan page rfc discussion of telnet protocol may procedure requires only a minimum level of user understanding of the serving site this seems appropriate since the telnet ascii conventions are providing a network virtual terminal not a network virtual user the ability of the user to cause the using site telnet to send any combination of ascii characters in a string and only that combination is viewed as important to the user utility of the telnet ascii conventions because of this some user sites may find it necessary to provide special local telnet control signalling from the user to the using site examples a user on a line at a time system multics system gecos etc is working through the network on a serving site that operates a character at a time the application is a debugging aid that permits the user to type in a memory location to which it will respond with n where n represents the current contents of that location the serving site process does not expect to see the location followed by a carriage return line feed sequence the user at the using site should be able to type in the location follow it with a signal to suppress the end of a line convention followed by a new line or return and expect the location number to be transmitted immediately without an end of line sequence in another case a using site has decided that it is convenient to accumulate four characters at a time and transmit them to the serving site unless an end of line is observed in which case the end of line sequence is sent preceded by whatever number of characters have been accumulated presumably three or less in the same debugging application the address is such that the end does not correspond with the four character buffer demarcation the user should have the ability to enter a code for transmit immediately in place of the carriage return in order to preserve neat formatting and expect the address to be sent to the serving site telnet controls have been discussed and those introduced to date are probably sufficient for an early implementation of telnet ascii convention there will be a need to establish a mechanism for the controlled assignment on request by network sites and announcement of data type and control codes it should be noted that some controls are network wide telnet controls while others are specific to the ascii data type it should be further recognized that some local control messages do not require a corresponding network wide code o sullivan page rfc discussion of telnet protocol may while it is recognized that even a minimum implementation of telnet for a using site is expected to permit the user to send any selected ascii string and only that string to the serving site it is not necessary for a serving site to implement a full mapping from ascii to local code nor is it necessary for either the using or serving sites to implement all control codes example using site a minimum implementation of the telnet protocol for the using site would permit ignoring and stripping any control signals from the serving site since they would all either require agreement or acknowledgement e g data type echo control etc or can be ignored with no particularly harmful results e g reverse break example serving site a minimum implementation of the telnet protocol for the serving site could provide one for one mapping for the most important serving system controls and graphic signals and ignore all control signals it would be helpful if a minimally implemented receiving site when it recognizes an incoming control signal for which appropriate reaction is not available could respond with x the following not implemented at this site and follow it with the code just received whenever an ascii telnet connection is lost it should be assumed that the process at the other end of the connection has been quit aborted failed etc in this way a minimum using site installation can fail to implement the break and break synchronization and have the user rely on the using site local procedure for leaving a running local process and returning to the supervisor to break a connection to a remote serving site example user recognizes that he is caught in an output loop and wishes to stop his user process at the serving site the serving site requires a break but the using site minimum implementation has not made it available even if it had the ins was not implemented and could not be used to unblock the input pipe locally the using site convention for leaving a process and getting to supervisory level is to hit the attention key on the terminal the user does this and is passed to the supervisor where he signals to release the telnet connection the serving o sullivan page rfc discussion of telnet protocol may site seeing that an ascii telnet connection has been lost assumes that the user is ended either normally or abnormally serving site cancels the user s process the user tries again by re establishing the connection logging in again re initiating the process etc other conventions under telnet may make quite different assumptions about lost connections and some may go as far as dynamic establishing and releasing of connections the proposed telnet ascii implementation leaves much uncovered but seems to permit early simple implementation with varying levels of capability along with the capacity to expand in several ways to meet others needs there is an important open question should a protocol such as telnet provide the basis for extending a system to perform functions that go beyond the normal capacity of the local system for example a local system may not provide functions such as hold output kill print etc but it could extend it for network purposes through telnet if so to what extent should such extensions be thought of as network wide standards as opposed to purely local implementations endnotes please drop the s at the end of character in paragraph page rfc nic also make note that the starting assumption in the initial exchange between using site and serving site will be that the using site will if necessary provide echo and the serving site will not note please change rfc nic page code x to read reserved please note on page of rfc that the receipt of an x should be responded with by the receiver sending a double signal i e x x if the new data type can be handled cent sign this rfc was put into machine readable form for entry into the online rfc archives by lorrie shiota o sullivan page 