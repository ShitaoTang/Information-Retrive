 network working group g hicks request for comments b wessler nic utah september measurement of host costs for transmitting network data background for the utah timing experiments since october we at the university of utah have had very large compute bound jobs running daily these jobs would run for many cpu hours to achieve partial results and used resources that may be better obtained elsewhere we felt that since these processes were being treated as batch jobs they should be run on a batch machine to meet the needs of these batch users in march of this year we developed a program to use the remote job service system rjs at ucla ccn rjs at ucla is run on an ibm some examples of these jobs were and still are a algebraic simplification using lisp and reduce b applications of partial differential equation solving c waveform processing both audio and video the characteristics of the jobs run on the were small data decks being submitted to rjs and massive print files being retrieved with one exception the waveform processing group needed from time to time to store large data files at ucla for later processing when this group did their processing they retrieved very large punch files that were later displayed or listened to here when the program became operational in late march and started being used as a matter of course users complained that the program page faulted frequently we restructured the program so that the parts that were often used did not cross page boundaries the protocol with rjs at ucla requires that all programs and data to be transmitted on the data connection be blocked this means that we simulate records and blocks with special headers this we found to be another problem because of the computation and core space involved this computation took an appreciable amount of time and core space we found because of our real core size that we were being charged an excessive amount due to page faulting the page faulting also reduced our real time transmission rate to the extent that we hicks wessler page rfc measurement for transmitting network data september felt a re write of the transmitting and receiving portions of the program was needed in order that the program receive the best service from the system these portions optimized so that they each occupied a little over half of a page as we now had so few pages in core at any one time the tenex scheduler could give the program preference over larger working set jobs as an aside because of our limited core we have written a small one and one half pages editor in order to provide an interactive text editing service the mechanism to access the network under tenex is file oriented this means byte in bin and byte out bout must be used to communicate with another host the basic timing of these two instructions in the fast mode is us per byte to get the data onto or off of the network a distinction was made because the tenex monitor must do some bit shuffling to ready the users bytes to be transmitted or it must put the network messages into some form that is convenient for the user this is the slow bin bout and occurs once per message if the users bytes are bits long then it will take an average of us per message if the bytes have to be unpacked from the message to be usable then it may take up to a milli second depending on the size of the message ii measurements and results we found by timing various portions of the program that the rjs program was using to us per bit byte or between and micro seconds of chargeable cpu time per bit see tables and for actual results a short discussion of how these figures were obtained is now in order note we have not been trying to measure network transmission rates rather how much it costs us to take a program data from our disk and send it to another host to be executed processed column is the clock time real time from when the first byte was brought in from the disk until the last byte had gone onto the network or from the time we received the first byte from the network until the disk file was closed column is computed in the same manner as column except that it is the chargeable runtime for the process column is the actual number of bytes that went onto or came from the network the letter that follows this column indicates the direction e g s for sending to ucla r for receiving from ucla column was calculated by the following formula bits per second real time number of bytes hicks wessler page rfc measurement for transmitting network data september column was calculated by the formula us bit chargeable runtime number of bytes column is the minute load average see tenex documentation for details using these figures we can conclude that for a million bits of information programs to be executed or data it would take to cpu seconds to transmit at a cost of per cpu hour on tenex s this millionbits would cost to to transfer from the originating host and potentially the same for the foreign host to receive this is about to times higher than the predicted network transmission costs it is to be noticed that in some cases for programs to be transmitted over the network the cost incurred by transmitting them was greater than the cost of executing these programs at the foreign host iii analysis there may be numerous ways to reduce the cost of the network to the host a treat the network not as a file device but as an interprocess communications device b create an intelligent network input output device this would of course be customized for individual types of operating systems and hardware configurations for tenex systems this could be implemented as the ability to do mapping operations from the users virtual memory directly onto the network in any case this intelligent network device would be required to handle the various protocols for the host some changes may be required in the ncp protocols a way to reduce the cost of the rjs program the one measured in tables and would be to change the rjs ucla protocol one possible change is to allow hosts the option of using bit bytes because it may be more efficient instead of the bit bytes now required by the protocol basically it is our belief that in order to make the network as viable economically as was anticipated by the authors of reference much work is needed on host machines and network protocols rather than on further refinements of the communication devices involved hicks wessler page rfc measurement for transmitting network data september references hicks gregory network remote job entry program netrjs network information center rfc braden r t interim netrjs specifications network information center rfc july personal correspondence with r s tomlinson of bolt beranek newman during the time period of sept to sept roberts l g and b d wessler computer network development to achieve resource sharing spring joint computer conference may pg personal correspondence with bolt beranek newman bressler b d murphy and d walden a proposed experiment with a message switching protocol network information center rfc may hicks wessler page rfc measurement for transmitting network data september utah accounting for network usage for the period sep ending sep clk tim cpu tim of bytes bits sec us bit load s r r s s r s r s r s r s r s r r s r s s r r r s r s r s r utah accounting for network usage for the period sep ending sep clk tim cpu tim of bytes bits sec us bit load s s r r s hicks wessler page rfc measurement for transmitting network data september r s r s s r s s r r s r s s r s r r s r s s r s s r s r s r s r r r s s s r s r s r this rfc was put into machine readable form for entry into the online rfc archives by helene morin viagenie hicks wessler page 