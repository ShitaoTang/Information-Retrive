 network working group r watson request for comments sri arc nic august a mail box protocol version introduction initial reaction to rfc a mail box protocol nic indicates general agreement on the need for such a mechanism the conventions suggested in rfc assumed only the use of the data transfer protocol in nic in order to simplify an initial implementation the valid argument we believe has been made that sites will also implement the file transfer protocol and that as much as possible the mail box protocol should be a subset of it this version is in answer to this suggestion the purpose of a mail box protocol is to provide at each site a standard mechanism to receive sequential files for immediate or deferred printing or other uses the files for deferred printing would probably be stored in intermediate disk files although details of how a file is handled stored manipulated or printed at a site are not the concern of this protocol a mail box as we see it is simply a write only from the network sequential file to which messages and documents are appended separated by an appropriate site dependent code it is also assumed that there would be a program at the sending site which sends the file in the format given below with the optional control codes when appropriate this program could probably be accessed as a subcommand of the telnet program the motivation for developing this protocol is the network information center s nic need to be able to deliver messages and documents to remote sites and to be able to receive documents for cataloging redistribution and other purposes from remote sites without having to know the details of path name conventions and file system commands at each site multiple mail boxes are allowed at each site and are identified as described below the default is mail box number for use with the standard mail printer defined below the only place where the mail box protocol has a potential conflict with the file transfer protocol is in file naming conventions the file transfer protocol assumes that the using site will use a filename which follows the access and file path name conventions of watson page rfc mail box protocol version august the serving site and that this information would be supplied by the user in the mail box protocol we would like not to have to explicitly know the path name conventions at each site in other words there is a need for a network virtual pathname convention we did not want to solve this problem in general at this time and in rfc nic proposed the use of a separate socket for mail type delivery and the use of an integer to specify the address of a specific file mail box to be appended to as the simplest form of network wide standard file name convention for an initial implementation to follow more closely the spirit of the file transfer protocol i would now recommend the append request be specifically used and that the standard socket agreed on for use with the file transfer protocol also be used following the byte indicating an append request there would be a standard agreed upon string of letters followed by a number indicating that this is a mail box append request a suggested name string would be netmail where is a byte interpreted as a mail box number if the above suggested mail box file naming convention is unsuitable and some other network wide standard mail box naming can be agreed on then it can be used please let me know how you feel about this naming convention given agreement on a standard mail box pathname then the mail box protocol can utilize a subset of the file transfer protocol conventions to be given below the other problem which was raised about the mail box protocol was the possibility of someone accidentally or deliberately flooding the printer of a site with garbage as there are no access or file size controls some thinking and discussions of this problem have yielded no simple satisfactory solutions i would recommend initial implementations without standard special safeguards in this area safeguards would be a site dependent option standard safeguards for the above problem can be easily added later if they really prove necessary and satisfactory ones can be agreed on watson page rfc mail box protocol version august mail box protocol version the mail box protocol will use established network conventions specifically the network control program initial connection protocol data transfer protocol and file transfer protocol as described in current network protocols nic the normal transmission for mail box is to be network ascii the standard receiving mail printer for mail box number is assumed to have a print line characters wide and a page of lines the new line convention will be carriage return hex d octal followed by line feed hex a octal as per the telnet protocol rfc nic the standard printer will accept form feed hex c octal as meaning move paper to the top of a new page it is the sender s responsibility to control the length of the print line and page if more than characters per line are sent or if more than lines are sent without a form feed then the receiving site can handle these situations as appropriate for them these conventions can be changed by control codes as described below at the head of the message or document sent to mail box number there is to be an initial address string terminated by a form feed this address string is to contain the sender s name and address and the receiver s name and address formatted in some reasonable easy to read form for a clerk to read and distribute comments could also be included in the address string the format of information in mail boxes other than mail box number is not explicitly defined by this protocol initial connection initial connection will be as per the official initial connection protocol document nic to the standard file transfer socket not yet assigned a candidate socket number socket has been suggested file transfer the mail item file to be transferred would be transferred according to the file transfer protocol as per the file transfer protocol a file mail item can be sent in more than one data transaction as defined in the data transfer protocol end of file is indicated by the file separator as defined in data transfer protocol or by closing the connection watson page rfc mail box protocol version august order of transactions the only basic operation required is an append append request mailer user server mail box end of file indication acknowledge the data type default is network ascii the standard line printer default is as defined above other control transactions can be used control transactions to be used op code hex octal change data type identifier error or unsuccessful terminate a acknowledge or successful terminate b append request add to existing file a change printer control settings data type codes all data types of the file transfer protocol can be used for special applications for mail box default is bit bytes of network ascii characters error codes all error codes defined in the file transfer protocol could be returned watson page rfc mail box protocol version august printer control codes hex octal meaning set line width to characters meaning use the full width of your printer meaning set page size to lines meaning set page size to infinite other virtual printer control codes can be added in the future other classes of control codes can be added as the need arises nls aug rww expedite title author s richard w watson rww distribution sdc tfl jwm jfh rel aojo jew awh dlm pwf raw hrvz aam rls jmm jmw akb pmk tnp asl bmw jam eaf rtb jmp bdw jtm jcl ajb cds rfh ema nwg sub collections nwg arc nic rfc clerk rww origin mail nls aug rww this rfc was put into machine readable form for entry into the online rfc archives by ryan kato watson page 