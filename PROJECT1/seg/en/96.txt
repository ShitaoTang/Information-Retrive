 network working group w parrish request for comments j pickens nic computer systems laboratory ucsb june mit mathlab meets ucsb ols an example of resource sharing i introduction a resource sharing a comment non trivial resource sharing among dissimilar system is a much discussed concept which to date has seen only a few real applications see nic summary of research activities utah for description of tony hearn s tenex ccn programming link the first attempts have utilized the most easily accessible communication paths telnet and rjs and the most universal representations of numbers byte oriented numeric characters in scientific notation future schemes will probably be more efficient through standardized data and control protocols but even with the existing approaches users are gaining experience with combinations of resources previously not available b the mathlab ucsb ols experiment mathlab and ols are powerful mathematics systems which cover essentially non intersecting areas of mathematical endeavor mathlab or macsyma contains a high powered symbolic manipulation system ols is a highly interactive numeric and graphics system which through user programs allows rapid formulation and evaluation of problem solutions prior to this experiment users have dealt with problems symbolically on mathlab or numerically and graphically on ols lacking an interconnecting data path users have been left to pencil and paper translation between the two systems the goal of the mathlab ols experiment is to provide an automated path whereby expressions at mathlab may be translated into user programs at ucsb thus the user is able to experiment freely with the numeric graphic and symbolic aspects of mathematic problems ii the resources to understand this particular case of resource sharing it is first necessary to understand to some degree the resources being shared this paper does not attempt to deal with all of the resources parrish pickins page rfc mit mathlab meets ucsb ols june available at both sites ucsb and mit only the applicable shared resources are discussed briefly in the section discussing possibilities for additions section v some available unshared resources are presented along with their possible shared applications the current implementation is limited to evaluation of real functions a description of the capabilities at the two sites follows a graphical and numeric computation capabilities at ucsb to get a graph of a function on the ols it is necessary only to specify the function with a series of button pushes for example to get a plot on sin x the program ii real sin x display return will display a plot of sin x versus x provided that x has been defined as a vector containing values over the range which it is desired to plot for a more complete description of ols see nic the ols user s manual programs in ols or sequences of button pushes can be stored under user level keys i e the above program could be defined as user li and the user could display modify and look at various values of the sin function over different ranges by simply setting up the desired value of the the vector x and then typing user li the number of elements in such a vector is variable up to a maximum of default value is the vector containing the result can be stored under a letter key i e y and can be looked at by typing display y scaling of plots on the ols is automatic for best fit or can be controlled upon default however it is often desirable to look at plots of several functions on a common scale this can be done on the ols and the graphs will be overlayed ols graphical capabilities are available to users at ucsb on the culler fried terminals and to network users using a special graphics socket at ucsb see nic rfc socket number list for network users without culler fried keyboards see nic rfc telnet access to ucsb s on line system b symbolic manipulations available at mathlab mathlab s macsyma provides the capability to do many symbolic manipulations in a very straightforward and easy to learn manner included in these manipulations are symbolic integration and differentiation of certain functions parrish pickins page rfc mit mathlab meets ucsb ols june solutions to equations and systems of equations laplace and inverse laplace transforms of certain functions certain series expansions rational simplification of rational functions for a more complete description see the macsyma user s manual by the mathlab group at project mac mit iii a description of the current implementation a variety of programs are used to make up a system to effect this transfer of data two functions are defined in lisp like language which are loaded into macsyma after login in order to facilitate saving a list of expressions to retrieve later to ucsb and to write this list out to a disk file at mathlab for later retrieval a set of ols user programs create the batch job which actually performs the retrieval translation and storage of these expressions on a specified file on some ols user directory the program which actually performs the connection to mathlab retrieves the expressions translates and stores into the ols is written in pl and exists as a load module on disk at ucsb the sequence of operations required in order to retrieve expressions using these various programs is outlined below the user makes a connection to mit mathlab in the conventional manner this can be done either through ucsb ols or through other telnet programs or from a tip the user logs in at mathlab calls up macsyma and loads the file into the macsyma system which facilitates retrieval contains addlist and save functions the user performs the desired manipulations at mathlab and saves up a list of line numbers as he goes along using the addlist function these line numbers represent those expressions he wishes to retrieve the format for addlist is addlist parrish pickins page rfc mit mathlab meets ucsb ols june when the user has completed all the manipulations he wishes to do he saves them on the mit mathlab disk using save function the format for save function is save this function writes out in horizontal form the list of line numbers in the order the addlist function was invoked to the mit disk the filename will be batch save also appends a question mark on the end of the file as an end of file indicator user disconnect from mathlab user connects to and logs into ols and loads a file containing the user programs which produce a virtual job deck for the batch system a sequence of questions are given to the user by these programs regarding accounting information and the source file at mit and the destination file at at ucsb the batch job gets submitted automatically and the transfer and translation is done after the transfer is completed the destination file may be loaded into ols and the results may be displayed and numerical manipulations can take place the form of these user programs as they are returned is as follows lii real load function therefore in order to look at a graph of one of these functions it is necessary to set up values of various constants as well as a range of values of the independent variable it is also necessary to request a display of the function this can be done by typing display return it should be noted that the function does exist at the time directly after the user program is called and may be stored under any of the alphabetical keys on the ols storing several of these functions under alphabetical keys will allow them to be called up for plotting on a common scale for example if the functions were stored under the keys a b and c they could be displayed on a common scale by typing display abc return iv limitations a the program as it stands can only transfer expressions equations or functions are not implemented b variable and constant names at mit can contain more than one letter but the current implementation recognizes only one letter variable names parrish pickins page rfc mit mathlab meets ucsb ols june c the program as it stands does not handle complex numbers d the user is subject to failures of three independent systems in order to complete the transfer the ucsb the network and the pdp at mit this has not proven to be a serious constraint e software changes at either site can cause difficulties since the programs are written assuming that things won t change anyone who has ever had a program that works knows what system changes or intermittent glitches can do to foul things up with two systems and a network things are at least four times as difficult thanks are due to jeffrey golden at project mac for helping with ironing things out at mathlab and the ucsb computer center for their patience with many i o bound jobs v possibilities for additions a recognition of complex numbers possibly for use with lii complex on the ols b addition to translation tables of wmptalk for recognition of sum cosh sinh integrate diff etc often mathlab will not be able to perform an integral or derivative in which case it will come back with integrate expression as its answer c an ols utilities package for allowing users to more easily manipulate the numerical vectors describing the expressions i e setting up linear and logarithmic sweeps for the various plots describing the scale of the plots on the ols screens d the ability to have an ols program written from a mathlab function including if then else do etc this would most likely require a more sophisticated parse than is done in the current implementation example an example is included in which a ucsb user a logs into mathlab b initializes the save function c generates a polynomial function and its derivative and integral parrish pickins page rfc mit mathlab meets ucsb ols june d logs out of mathlab e creates the retrieval job f waits and then displays the resultant user programs g and finally creates the x variable and plots the functions although the sample ols manipulations are very simple ones it should be noted that the user could compare the retrieved functions with numerical models or even use the functions as subroutines in higher level algorithms usage of this combined numeric symbolic system is limited to the imagination of the user the example follows user telnet connection to mathlab from ucsb login to mit ml ii log mit ml return mit mathlab pdp ml its ddt users login wmp login to mit mathlab macsyma call up macsyma this is macsyma use instead of see update macsym fix dsk macsym being loaded loading done c batch batch utils load batch utils file uread batch utils dsk wmp file not found c batch batch utils dsk ucsb c listx d c addlist x listx cons x listx d addlist x listx cons x listx parrish pickins page rfc mit mathlab meets ucsb ols june c save filename apply stringout append cons filename batch dsk ucsb reverse listx d save filename apply stringout append cons filename batch dsk ucsb reverse listx d batch done c x x x d x c integrate x sin fasl dsk macsym being loaded loading done x x d log x c addlist d d d c addlist d d d d use addlist function to save line numbers d and d c diff d x x x d x x c addlist d d d d d use addlist function to save line number d c save myfile d d d d write list of lines out to a disk file using c z leave macsyma save function iot listf ucsb dsk ucsb parrish pickins page rfc mit mathlab meets ucsb ols june free blccks uo u u attn batch batch utils demo wmp demo batch demo batch myfile batch file is in directory msgs ucsb at mathlab logout logout and disconnect ml its console free disconnection complete work areas updated load retrieval program load mathlab syst load mathlab return file loaded user lo retrieve expressions mathlab file exp myfile myfile myfile enter ols file myfile demo demo demo enter ols file protect code demo enter demo demo batch jobname myfile parset enter parset parset press enter to submit job enter volume needed job submitted job to retrieve mathlab expressions is now in ucsb mod batch queue some time elapses and batch job is run load the retrieved program work areas updated syst load demo return load demo file loaded parrish pickins page rfc mit mathlab meets ucsb ols june display the returned expressions user li user i display lii real load x x user li user i display lii real load x x log x user l user i display lii real load x x x x user li sq undefined user display sq the following figure is available in the ps and pdf version of this document sample ols curves generated for x endnotes supported on a pdp system at mit and available for the use at ucsb by the way of apra network in this memo the notation and has been substituted for a circle enclosing a and symbol respectively this rfc was put into machine readable form for entry into the online rfc archives by helene morin via genie parrish pickins page 