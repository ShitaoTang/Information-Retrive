 network working group a shoshani sdc request for comment e harslem rand nic july categories c d updates none obsoletes none initial connection protocol reviewed introduction at the network meeting preceding the sjcc an icp committee was established it s purpose was to get something working fast with minimum modifications to the current icp so as to minimize complaints this seems like a good definition for almost everything consequently those who had objections to the current icp were interviewed and a compromise was reached in the form of rfc the icp committee didn t have a chance to think about an alter native because of the above mentioned constraints in this note we attempted a simple version of an icp assuming that we can add commands to host host protocol we hope that this will be useful in the design of the next version of the host host protocol icp commands to establish a regular connection one party can issue an init ncp sends rts or str commands then the other party can accept the request for connection by responding with an init or refusing it with a close we think that page a similar simple mechanism is desirable for the icp furthermore the icp should allow for simplex as well as duplex connections from user to server the following commands are necessary for simplex connections isc initiate simplex connection asc accept simplex connection rsc refuse simplex connection the notation for parameters is similar to that of rfc l server socket name in one special case the server is logger u user socket s socket assigned by server for the connection with user x is the byte size if u is odd and is the link number if u is even x is the complement of x x is the link number if u is odd and byte size if u is even to initiate a simplex connection the user s ncp issues isc l u x to refuse this connection the server s ncp issues rsc l u page to accept this connection the server s ncp issues asc l u s x similarly for duplex connections we have idc l u x u x rdc l u u adc l u s x u s x where u u s s u s and u s are pairs of opposite gender after the server accepts the connection s it they goes immediately to a connected state and the appropriate all command s must be sent advantages the main advantage to this approach is that it mini mizes the dialog between user and server the server socket l is used only as an address not a socket to connect to therefore eliminating the need to establish a connection to l choose a byte size send an all command send and receive data on it and close it race conditions as mentioned in rfc do not arise socket l is the server and should be in a listening for icp state when an isc or idc is received if socket l is not in that state the serving ncp should refuse to icp request the serving ncp should not queue icp requests in the current icp when the user choses socket u he has to reserve sockets u and u in the above described approach no restrictions exist for u and u except that they are of opposite gender the same is true for s and s we think that duplex commands are necessary since both connections are to be connected to the same server process their separation by using two iscs will add complications of correlating the two iscs with the same process also if two iscs are used the first might be accepted and the second refused this leads to uncertainty on the user s part this condition cannot occur with the duplex commands page minimum modification to current icp the minimum change we can think of to make the current icp look similar to the above is to add one ncp level com mand accept acc l u s the exchange between ncps in the notation of rfc is now server ncp user ncp listen for connection on l rst u l l a acc l u s s is passed by ncp to the user and connection from u to l is closed str s u b s str u s b u rts s u l b rts u s l c wait for connection wait for connection all l b m b b b all l c m c b c an alternative way to the acc command is a cls command with an additional parameter bits long if parameter is zero the request for connection by the user is refused if the parameter is non zero the request is accepted and socket s is the value of the parameter all suggested changes improve the icp dialog both from the aesthetic and efficiency points of view we lean strongly however to the first more major icp modification page a comment about cls command it seems appropriate to mention here for the purpose of the next version of the host host protocol that the cls command has more than one function we think that the cls command should be reserved to close connections in the connected state only i e open connections two additional commands can be used for refusing and reject ing requests for connections rej when a request for connection is rejected unconditionally ref when a request for connection is refused temporarily because the ncp could not handle it for example no process listened to it and it was timed out or ncp tables are full in which case the user process may try again the reason for refusing is indicated in the parameter reason this rfc was put into machine readable form for entry into the online rfc archives by bbn corp under the direction of alex mckenzie page 