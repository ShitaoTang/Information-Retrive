 network working group j michener request for comments mcg nic july a network graphics loader motivation the facility described herein will permit remote users on the arpa network to obtain graphics output from programs they write for the evans and sutherland line drawing system model lds located at the dmcg computer also users at that computer can employ the facility to do graphics on their ards and imlac consoles introduction the graphics loader on the project mac dynamic modeling computer graphics pdp is for use with the e s lds display display programs can be shipped to it and executed repeatedly the output which would normally be visible at the pdp installation is transmitted to the originating site in digital form corrections and alterations to display programs can be transmitted so that the bulk of the program need be sent only once any data or parameters which vary may be sent whenever they change the originating site may request to have any part of its program or data transmitted back to it from the graphics loader with this feature it is possible to debug a display program which is incorrectly modifying itself in order to simplify the graphics loader it is assumed that the display program should occupy a contiguous block of core starting at location octal i e it has been assembled absolutely that its first executable instruction is at the same place and that when one frame is complete it jumps to location octal the e s lds has the capability of writing into memory the coordinates of endpoints of the line segments which would be visible to a user sitting at the lds display device a register called the writer address register war is used to indicate an area of memory to contain these coordinates various submodes are available for output to memory but for the submode of greatest interest scaled coordinates to memory mode each visible line segment causes two words of coordinate data to be stored the contents of the war are incremented for each word stored michener page rfc a network graphics loader july for each execution of the display program the graphics loader sets the proper output mode suppressing output to the cathode ray tube at the dgsd machine initializes the war before execution and saves the final value of the war after execution thus it is easy for the graphics loader to transmit to the user only the visible output of the display program description of requests from the remote user program request are in the form of bit words the first word of a request is interpreted as two bit fields the left half contains a number identifying which of six operations is being requested the right half is either a mode or is ignored depending on the requested operation if the left half is not a valid operation number an error message is sent and the next word is considered to begin a new request depending upon the operation requested and upon the mode one word of argument data may or may not be read this word is also treated as two bit halves the interpretation of the halves depends on the operation in the description of individual operations the left half will be called a the right half will be called a standing for arguments and error checking of the arguments is performed next if an error condition is present error information is sent to the user program at the originating site and the graphics loader prepares itself for the next command if no error condition is present an acknowledging message is sent unless the suppress acknowledgement mode prevails for certain requests the operation is performed before the acknowledgement is transmitted for those operations involving a transfer of display program information either to or from the graphics loader this transfer is done next after the error checking of arguments has been performed and after an acknowledge message has been sent this done the graphics loader reads the next command michener page rfc a network graphics loader july specifications the valid operations are currently setup indicated by an operation number of execute indicated by an operation number of transmit indicated by an operation number of update indicated by an operation number of flush connection indicated by an operation number of modeset indicated by an operation number of an invalid operation number is an error condition condition number the setup request the mode field of the first word is ignored setup requires an argument word the arguments a and a are both treated like lengths so both must be non negative numbers if they are not error condition is recognized a if a is strictly positive then this request describes a whole new display program and any previous display program from this user is to be forgotten in this case a is the total length of the display program exclusive of the area to be addressed by the write address register war a is the length of the area to be addressed by the war as such a must be at least twice the greatest possible number of visible line segments to be displayed if the lds programmer feels sure of himself he may set up his own war area and set his own output to memory modes he would not need to use the a parameter at all an acknowledge message is sent unless suppressed see modeset then the display program is read which consists of a words b if a is zero then this request is for a change in the length of the area to be addressed by the war a contains the new length a may be larger or smaller than the current length of michener page rfc a network graphics loader july the area if no previous a type of setup request has been processed error condition is recognized otherwise an acknowledge message is sent unless suppressed see modeset this request would typically be used if an initial estimate on the number of words required were too low error condition described under execute may be indicate a low estimate the execute request the execute request does not take a parameter word but the mode field is used to specify the number of times that the execute action is to be performed this action is described in detail following this paragraph briefly it is a single execution of the display program if the mode field is zero or negative then one execute action is performed whenever an error is encountered during a multiple execute the iteration is immediately stopped this way the status of the display program after the error is not destroyed and no flood of error messages is ever sent only a single one the execute action is as follows if no previous setup request has been processed error condition number will be recognized an attempt is made to seize the e s lsd display processor if a previous execute has succeeded in seizing it then this will also succeed if some other user of the dmcg machine has control of the display processor this will fail and error condition will be recognized the display program is now executed the environment at the beginning of execution of the display program is given in appendix if a previous execute failed in a way indicating a programming error in the display program error conditions and then an setup or an update request must be executed before another request will be processed if no setup of update is given before another execute then error condition is recognized if the lds runs for two seconds without causing an interrupt or jumping to the finish location the word before the origin of the display program then it is assumed the program is running away the lds is stopped and error condition is recognized a setup or an update is required before another execute is permitted michener page rfc a network graphics loader july if the lds stops because too many output words are stored i e if the wcr becomes positive or zero error condition is recognized the number of output words made available to the user is as specified by a of the most recent setup request if the lds stops in any manner other than either those described above or by jumping to the word before the origin the finish location then error condition is recognized a setup or an update is required before another execute is permitted if the lds stops by jumping to the finish location then the value of the war at the time determines the amount of output in the war area which the user may have access to if the war has been altered so that it contains an address smaller than its initial value then the effective value of the war is its initial value if the war contains a value greater than the address of the end of the area for output then a wcr stop error is imitated the effective value of the war is the maximum allowed by setup and error condition is recognized the situation in which no error is recognized will be called a normal stop michener page rfc a network graphics loader july summary for normal stop origin display program if war here it is set to here war output area if war here it is left alone if war here it is set to here and error condition is recognized if no error condition is recognized for an execute request an acknowledge message is sent unless suppressed see mode set the effective value of the war is saved for later use in determining how much output the display program generated but it is saved only for normal stops and wrc positive stops after normal stop if auto transmit mode is set see modeset below then a transmit request is simulated using the arguments specified in the modeset request which initiated auto transmit mode otherwise the next request is begun the transmit request transmit takes one argument word and decodes the mode field except in special cases normally a indicates the number of words of display program and or output in the war area which are to be transmitted possibly after data format conversion as indicated by the mode field a indicates the starting address of the block of data to be converted and sent michener page rfc a network graphics loader july a special case if a is zero the mode and a are ignored in this case an acknowledge message is sent unless suppressed a length word containing is sent bits left half word equals right halfword equals zero and then a word containing the origin address for display programs this address should always be octal it might have to change however and this mechanism is provided to permit the user to determine what its value is b the normal case is when a is non zero if there has never been a setup request error condition is recognized if the mode field is non zero or or if a is negative or a is less than the origin but not zero or a a is greater than the current effective value of the war read on then error condition is recognized the effective value of war always points to the word beyond the last word of output from the lds before the first execute request it points to the word after the end of the display program indicating that zero words have been output execute requests effect the value in various ways depending on error conditions etc as described previously the effective war value is also changed to correctly reflect the effect of setup requests which can change the size of the war area type b and update request which can increase the size of the display program causing the whole war arla to be shifted if the parameters are correct an acknowledge message is sent unless suppressed see modeset if a the number of words to be reformatted possibly and sent is zero it is understood that the block of words to be processed starts at a and terminates with the last word before the effective war value thus the number of words to be processed is the effective war value minus a if the mode field of the first word of the request is zero then no reformatting will be done an exact copy of the core image will be transmitted if it is a one then the block of words to be processed is assumed to contain the coordinates of end points of a sequence of line segments the odd numbered words starting counting with one not zero are assumed to represent set point data and the even numbered words are assumed to contain draw to data note that this is consistent with lds scaled coordinate to memory mode as long as no dots are displayed the line segments are recoded in ards format five seven bit ascii characters to a word with michener page rfc a network graphics loader july the right most bit of each word unspecified the last word may contain null ascii characters all zero to fill out the word the first word transmitted after the acknowledge message if any has a left half of and a right half of for exact core image or for ards format the next word has a left half equal to the number of words which follow and a right half of zero for ards format this is the number of words after reformatting of course unless zero words are to be transmitted the next words are the data request note that the following sequence of requests could be used to simply convert line data in the correct format to ards format the notation a b stands for a bit word whose left half has the value a and whose right half has the value b michener page rfc a network graphics loader july establish network connection setup start n data representing n line segments follow n coordinate pairs transmit request ards transmission convert and transmit the whole program flush signoff the update request the update request allows a portion of the display program to be altered and also allows the end of the display to be extended to include more data perhaps the mode field of the first word of the request indicates the number times the execute action is to be performed if the update request is successful the update request takes an argument word which is similar to that of transmit i e a is a length and a is an address if no setup request has previously been executed error condition is recognized if a is negative or if a is less than the origin of the display program error condition is recognized if a a is greater than the end of the display program then the length of the display program is increased to equal a a origin the war area remains the same length as before and its contents are shifted to their new locations the effective war value see transmit is increased by the amount of increase in display program length michener page rfc a network graphics loader july an acknowledge message is sent unless suppressed if no error condition is recognized and if no problem with core size limitation arises also the flag which is set by severe error conditions encountered during execute requests is cleared by successful update requests the next a words are read and stored in consecutive locations starting in location a if a is zero no words are read if the mode field of the first word of the update request is positive it is taken as an iteration count for a multiple execute request otherwise the next request is read from the network the flush request the flush request takes no arguments and ignores the mode field of the first word of the request no acknowledge message is sent the network connection is broken and the process destroys itself the modeset request the mode field of the first request word is decoded first if it is zero or less or if it is greater than currently error condition is recognized a if the mode field is then acknowledge messages and ascii error messages are not to be suppressed b if the mode field is then acknowledge messages and ascii error messages are to be suppressed c if the mode field is exit from auto transmit mode see d d if the mode field is or whenever an execute has a normal stop a transmit request is to be automatically performed the mode field for the transmit is to be less than the mode field for this modeset request one more word is read from the network it contains the arguments for the transmit that is the word is saved and used when the transmit operation is performed the values of the arguments are checked at that time not during the modeset request michener page rfc a network graphics loader july example suppose a display routine calculated and saved a different dimensional transformation matrix each time it was executed it might be programmed to make an object appear to rotate the user of the routine typically would want to set up the matrices and then let er rip with ten or twenty or more executions this could be done as follows setup length length of display pgm large output area program modeset auto transmit in ards mode length arguments for transmit meaning current contents of output area exq execute times sending the data each time update update then execute times address of matrix arguments for update to change a matrix words new matrix etc michener page rfc a network graphics loader july the output from the graphics loader for this example would be as follows acknowledge setup setup see description of ackn for format in word acknowledge modeset modeset acknowledge transmit exq output output in ards mode leng data acknowledge transmit exq output leng data in total there are sets of output acknowledge update update acknowledge transmit update output leng michener page rfc a network graphics loader july data in total there are sets of output acknowledge messages these messages are each a single bit word they can be suppressed dynamically by the modeset request the left half of the bit word identifies the fact that it is an acknowledge message by containing a the right half is further divided into two bit fields quarters the right bit field within the right half word contains the opcode field of the last request sent by the user thus if an update request was received last this field is a the left bit field within the right half word contains the number of the action actually being performed this differs from the opcode of the last request received only for auto transmit mode and when a positive mode field is given in an update request which is an execute count possible pairs of these fields are given below note that auto transmit mode sends only one acknowledge message which indicates both successful execution of the display program and correct parameters for the transmit operation michener page rfc a network graphics loader july currently most recent comments executing request received setup setup sent before data words are read exq exq never sent in auto transmit mode transmit exq only sent in auto transmit mode transmit transmit exq update never sent in auto transmit mode transmit update only sent in auto transmit mode update update sent before data words are read modeset modeset when setting up auto transmit mode this is sent before the argument word for transmit is read notes a modeset request which suppresses acknowledge messages is never acknowledged one which permits acknowledge messages is always acknowledged requests which read data words certain setup update and modeset requests send acknowledge messages unless suppressed before reading the data words error messages these messages contain one or more words if acknowledge messages are suppressed then only one word is sent the assumption was made that brevity of response would also be desired for error messages if it were also desired for normal output the first or only word contains a left half of identifying this as an error message the right half contains the number of the error condition recognized these numbers are summarized below if the long form of the error message is being used additional words are sent the first contains a positive count of the remaining words in the left half and zero in the right half words following the michener page rfc a network graphics loader july count word contain five bit ascii characters per word the last word may end in null characters which spell out a descriptive error message these messages are summarized below error condition number error message unrecognized operation code previous setup required invalid mode or operand field previous execute failed display processor occupied output area overrun display error two second time out display error improper display stop display error memory protection violation output from transmit this output consists of an identifying word left half of right half containing for image mode and for ards mode a count word left half indicating the number of words following this word right half of zero and zero or more data words in whatever data format the first word indicated michener page rfc a network graphics loader july appendix the environment at the beginning of execution of the user s display program is as follows this lds is in program mode rar origin of user s program war first word of a block of core at least as long as requested via setup operations this block immediately follows the last word of the display program pc origin of user s program sp address of first word beyond the end of a octal word area of combined data sink and control register stack p unspecified p unspecified dsp first word of a octal word area of combined data sink and control register stack ur unspecified rcr unspecified wcr minus one plus the negative of the length of the war area as specified in the most recent setup request dir stop on wcr positive do not stop on hit matrix multiplier inactive overlap permitted two dimensional mode do not do twice rsr unspecified sr except for bits not under program control like the stylus z coordinate bits next unspecified michener page rfc a network graphics loader july savelb savert viewlb viewrt windlb windrt instlb instrt name unspecified cdir scaled coordinates to memory curve mode inactive minimum effort inactive solid not dashed lines self mode inactive hitang unspecified selint unspecified matrix multiplier unspecified origin of program should be jumped to when the display program is finished this rfc was put into machine readable form for entry into the online rfc archives by lorrie shiota michener page 