 network working group j white request for comments ucsb computer research lab categories d g september nic telnet access to ucsb s online system contents i motivation ii limitations iii system documentation iv system access v software structure vi virtual ols keyboard vii netols commands a help b prefix c shift and unshift d fullduplex and halfduplex e state f logout viii ols display ix instructing user telnet x examples a logon b newton raphson square root approximation c remote job entry figures figure ols keyboard figure keys with one for one mappings figure keys represented as strings figure characters with one for one mappings figure characters which map into strings i motivation a teletype compatible interface to ucsb s online system ols has been implemented in accordance with the telnet protocol adopted by the nwg this server telnet is responsive to connection requests directed by user telnet s to socket number host address although ols is not a teletype system and although much of its power as mathematical tool rests in its graphical display capabilities enough of the system survives the telnet transformation to justify such an implementation white page rfc telnet access to ucsb s on line system september ii limitations in this telnet style implementation of ols all curvilinear display generated by the user on levels ii and iii real and complex is disregarded by the system and hence not returned to the user through the net the same is true of the display of special user created characters although special characters may be constructed and stored their display will be suppressed both during the process of construction and later when they are invoked from the type level all other display generated by the system will be relayed to the user intact in some cases with stylistic transformation having first been applied for example greek characters are displayed as lower case a z all such transformations are described in detail in this document finally those elements of the system the operators which edit user programs are prime examples which assume a fixed screen display device function abnormally in a telnet environment for such a device the system can remember the position on the screen of a previously displayed segment of text and return to that position to for example underscore it but when the screen marches forward relentlessly through a continuous medium as it does with telnet s virtual teletype that kind of strategy fails hence the underscoring is not relocated but rather appears on the current line beginning in the next available character frame ols assumes normally that the user is equipped with the specially designed double keyboard depicted in figure conventions are defined in this document which enable a telnet user to simulate that keyboard in particular a means is provided for designating keys on the upper or operator keyboard iii system documentation this document has three purposes figure ols keyboard please view the pdf version of this rfc to describe the means by which a telnet user simulates an ols keyboard to describe the transformations applied to output generated by the system and to enumerate those aspects of the system which are unique to or behave differently for network telnet users in particular this document is not a user s manual for ols such a manual is available and on file with the nic in addition a copy should exist at each network site in its nic collection the user white page rfc telnet access to ucsb s on line system september should consult his station agent this document is titled ucsb on line system manual nic its contents are current as of january a revision to the manual is currently in preparation and will be distributed when available in addition tutorial manuals for two of the subsystems available under ols molsf mathematically oriented language single precision floating point and col card oriented language will soon be made available the latter has already been published and is being transmitted to the nic for distribution while the former is nearing completion documentation of the third subsystem of ols net has already been distributed through the nic as two rfc s network on line operators april rfc nic and a user telnet description of an initial implementation august rfc nic net currently houses a set of operators for system call level interaction with ucsb s ncp a user telnet and an operator invoked by id on level ii which returns the status of network hosts staff members at the computer center will be happy to field questions about ols from network users in particular an ols consultant is available for such purposes at questions about ols including those specific to use of the system through the network may also be addressed to jim white ucsb s technical liaison at if necessary messages can be left at the computer center office iv system access the network user is encouraged to explore the system and is invited to do so with the following accounting parameters user number id number user name arpa problem name affiliation name in characters or less e g ucsb white such use of the system will not be billed production users are asked to establish their own accounts with the computer center the use of which will be billed in accordance with the then current rate structure v software structure this document is the description of a network front end to the online system logically distinct from ols itself this front end is hereafter referred to as netols netols is always responsive to white page rfc telnet access to ucsb s on line system september connection requests direct ed to socket when contacted by a network user ntcls performs the network functions required to establish a duplex connection to him the number of such duplex connections and hence the number of network users is bounded by an assembly parameter whose current value is five before the network connection is established netols secures for the user a port into ols sixty four such ports exist and are shared by local dial up and network users should none be available netols will abort the connection sequence once a port has been secured and a network connection established netols will effectively push the syst key for the user by transmitting to ols the bit code representing that key a login sequence is thus initiated and the user is transmitted the lines ucsb on line system enter user nubmer to which he should respond with his user number beginning at this point in time and continuing for the life of the network connection netols s sole function is that of interpreter interpreting input from the user and making it meaningful to the user it is at this point for example that curvilinear and special character display are discarded when the user breaks his network connection to netols if eh hasn t logged out of ols already netols performs that function for him by pushing syst down just as it pushed the initial syst the ols port acquired for the user is then released and hence available for use by other users it should be noted that the user can log out of ols and back on again without the network connection s being broken since that action is transparent to netols who attaches no special significance to the key sequence which accomplishes it vi virtual ols keyboard a major function of netols is to provide a mapping between elements of the telnet character set and the keys on an ols keyboard figure the lower or operand portion of that keyboard is fairly easily represented since it s similar to a standard typewriter keyboard most of the keys on the lower keyboard are mapped on a one for one basis from elements of the telnet character set upper case alphabetics are mapped into the alphabetics lower case and miscellany of punctuation into itself all such one for one mappings are depicted in figure a line of that figure reads as follows for half arrow see the pdf version of this rfc white page rfc telnet access to ucsb s on line system september the key labeled half arrow meaning logical not on the lower portion of an ols keyboard is struck by causing the user s user telnet to transmit tilde those lower keyboard keys not listed in figure and all the keys on the upper keyboard hereafter referred to collectively as non standard keys are represented by the telnet user in the following manner for each such key a character string has been defined the string is called the name of the key in most cases the name of a key is identical to its label in figure the name of the sin key for example is sin in the online system user s manual upper keyboard keys are denoted by underscoring their labels to distinguish for example the key sin from the three keys sin every non standard key on the ols keyboard is struck by typing its name or any unique abbreviation thereof preceded by a special prefix character and followed by a space netols interprets the prefix name and space from them generates a single bit code which forwards to ols the default prefix character is semi colon chosen simply because for touch typists it s one of the home keys the prefix can be changed by the user to any character listed in figure the procedure for so doing is described in section vii b to send the prefix character through netols to ols type it twice in succession thus if the default prefix is in effect is mapped into a single semi colon and relayed to ols the names of all non standard keys are listed in figure a line of that figure reads as follows for sin they key denoted sin in the ols user s manual the trigonometric function sine is named sin and hence is struck by typing sin preceded by the prefix and followed by a space assuming then that the default prefix is in effect sin is struck by sin is used here and in following examples to denote a space furthermore if the user chooses he may abbreviate that as si since the key desired remains uniquely identified further abbreviation to s is unsatisfactory and hence disallowed since the single character s is insufficient to distinguish between a number of keys whose names begin with that character key names may be typed by the user in either upper or lower case white page rfc telnet access to ucsb s on line system september as each character of a non standard key s name is typed by the user netols consults it table of key names if the character string so far specified cannot possibly lead to a valid name the most recent character is ignored echoed hence typing sjin will be accepted as sin the erroneous j being ignored and a question mark echoed and the subsequent jn accepted if when the terminating space is typed no single key is uniquely identified a is echoed and the space ignored thus s i will be recognized as sin the first space is to push ols explanation send telnet explanation decimal digits decimal digits a z alphabetics a z uc alphabetics greek characters a z ls alphabetics exclamation mark exclamation mark plus sign plus sign underscore underscore minus sign minus sign commercial at commercial at slash slant number sign number sign apostrophe apostrophe ampersand ampersand dollar sign dollar sign asterisk asterisk percent percent equal sign equal sign tab horizontal tab ht horiz tab colon colon semi colon semi colon left bracket left bracket right bracket right bracket left parenthesis left parenthesis right parenthesis right parenthesis less than less than greater than greater than comma comma quotation marks quotation marks question mark question mark half arrow logical not tilde logical or vertical line back backspace bs det backspace rubout return carriage return cr carr return m space space sp space figure keys with one for one mappings white page rfc telnet access to ucsb s on line system september to push ols explanation the key name is circle multiply circle add circle subtract return carriage return circle divide l level li level i l ii level ii l iii level iii l iv level iv l v level v l vi level vi l vii level vii circle add add arc argument arg atan arc tangent atan back backspace back case case case cent sign cent signcent clr clear tab clear cmplx complex cmplx con contract con conj conjugate conj conv convolve conv cos cosine cos ctx context ctx del delta del diff forward difference diff display display display circle divide div dwn down down enl enlarge enl enter enter enter erase erase erase escape escape escape eval evaluate eval exp exponentiate exp netols command fullduplex netols command halfduplex netols command help id identity id inv invert inv down arrow line feed down lfdn up arrow line feed up lfup figure keys represented as strings white page rfc telnet access to ucsb s on line system september to push ols explanation the key name is list list list load load load log logarithm log netols command logout ls left shift ls max maximum max mod modulus mod circle multiply mult neg negate neg half arrow logical not not logical or or pred predicate pred netols command prefix prod running product prod pt point pt pwr power pwr real real real refl reflect refl rept repeat rept reset reset reset return carriage return return rs right shift rs superscript s s sel select select set set tab set netols command shift sin sine sin sort sort sort sq square sq sqrt square root sqrt netols command state store store store sub substitute sub circle subtract subtract sum running sum sum syst system syst test test test type type type netols command unshift up up up user user user figure cont d keys represented as strings white page rfc telnet access to ucsb s on line system september alternate names for circle circle circle return and circle are mult add subtract return and div respectively return can also be represented as the single character cr carriage return as indicated in figure an alternate name for circle is alternates for back are the single characters bs backspace and del rubout as indicated in figure an alternate name for circle is div netols commands are explained in section vii an alternate name for circle is mult an alternate for half arrow is the single character tilde as indicated in figure an alternate for is the single character vertical lines vertical line as indicated in figure an alternate name for return is return can also be represented as the single character cr carriage return as indicated in figure an alternate name for circle is notes for figure ignored and a echoed indicating that s alone is ambiguous at any point in the entry of a key name either altmode esc or may be typed by the user netols will then determine whether a key has been uniquely specified by the characters already typed if so it will echo the remaining characters of the key s name and consider them entered by the user a subsequent space from the user will cause the indicated key to be pushed if no single key is uniquely specified netols will echo bel causing a bell to be run on many terminals more of the key name is then expected from the user if after at least one character of the key name has been entered by the user and accepted by netols and before the terminating space is typed the prefix is typed a second time all already entered characters of the name are discarded by netols thus co sin is interpreted as sin if a carriage return is typed in the same white page rfc telnet access to ucsb s on line system september context the initial prefix will also be discarded hence co s denotes carriage return is interpreted as the lower keyboard key s vii netols commands a number of commands to letols are defined and all are described in this section the format for each such command is the same as that for the non standard keys and hence the command keywords are included in figure all of the conventions of section vi apply as well to the entry of commands the user should understand however that such commands are processed by netols not ols and that they are defined only for network users of ols a help the help command invoked with help if is the prefix reproduces for the user the third column of figure the names of all non standard keys and the keywords for all defined neols commands are listed in their collating sequence on the user s virtual teletype b prefix issuing the prefix command causes the next character typed to become the prefix provided it is one of those listed in figure consequently prefix makes the prefix prefix restores the defaults situation c shift and unshift the shift command causes a perturbation of lines and of figure after shift is issued all subsequent upper case alphabetics are mapped into the greek characters rather than into the alphabetics and lower case alphabetics into alphabetics rather than into the greek characters this convention change may be found convenient if the user s user telnet sends lower case alphabetics by default and requires for example that a shift key be held down to send upper case characters the unshift command nullifies the effect of shift d fullduplex and halfduplex issuing the fullduplex command causes all subsequent characters typed by the user to be echoed by netols halfduplex nullifies the effect of fullduplex disabling echo by netols half duplex is the default situation white page rfc telnet access to ucsb s on line system september e state the state command causes the current prefix the mode of operation halfduplx or fullduplex and the case convention shift is on or shift is off to be displayed on the user s virtual teletype in the following form prefix is halfduplex shift is off f logout issuing the logout command causes the user to be logged out of ols i e syst down to be pushed and his network connection to netols to be broken about three seconds elapse between the two events viii ols display netols suppresses all but alphameric display before it reaches the user alphameric display is mapped into the telnet character set according to figures and figure lists all those ols display character which have one for one mappings a line of that figure reads as follows for half harrow the character logical not displayed as half arrow on an ols terminal is represented in telnet as tilde alphabetics are mapped into upper case alphabetics and greek characters into lower case alphabetics numerics are mapped into numerics and a miscellany of punctuation into itself in addition a number of carriage control characters are appropriately mapped line feed down into lf tab into ht back into bs etc line feed up is suppressed erase is represented as bel figure lists those ols display characters which are mapped into strings of telnet characters in most cases these character strings are stylistic representations of characters peculiar to ols for example the add key is normally displayed in list mode as circle in this telnet implementation is an attempt to represent that graphic superscripts are represented as underscored numerics carriage return is represented as cr lf no attempt is made to effectively represent rs which on an ols display device repositions the beam to the upper left corner of the screen it is made equivalent to carriage return white page rfc telnet access to ucsb s on line system september ix instructing a user telnet for local users all echoing that s done at all to display ols explanation ols sends telnet explanation decimal digits decimal digits z alphabetics a zuc alphabetics greek characters a z lc alphabetics exclamation mark exclamation mark plus sign plus sign underscore underscore minus sign minus sign commercial at commercial at slash slant number sign number sign apostrophe apostrophe ampersand ampersand dollar sign dollar sign asterisk asterisk percent percent equal sign equal sign tab horizontal tab ht horiz tab i colon colon semi colon semi colon left bracket left bracket right bracket right bracket left parenthesis left parenthesis right parenthesis right parenthesis less than less than greater than greater than comma comma quotation marks quotation marks question mark question mark half arrow logical not tilde logical or vertical line back backspace bs backspace space space sp space enl up arrow line feed up con down arrow line feed down lf line feed up arrow j list mode space underscore shaded rectangle list mode rubout x upper case x list mode pointer underscore break break sp space erase erase bel bell g figure characters with one for one mappings white page rfc telnet access to ucsb s on line system september to display ols explanation ols sends post list circle list mode add circle list mode subtract circle list mode multiply circle list mode divide arrow list carriage return vertical lines return carriage return cr lf rs reset to upper left cr lf cent sign cent sign c bs vertical lines superscript bs bs figure characters which map into strings is done by ols the terminal never echoes in general ols does not echo the user s input there are exceptions to this rule but they are relatively few in number and occur primarily on the syst level in particular upper keyboard keys are never echoed except in list mode the network user is advised to instruct his telnet to operate in full duplex mode i e to echo nothing the fullduplex command provided by netols is provided because it can be provided but its use is not recommended ols is meant to be used in character at a time mode and the user should so instruct his user telnet for those users provided with only a line at a time mode the end of line character should not be transmitted to netols netols flushes without comment all telnet control characters it detects in the input stream characters in the telnet character set which have no meaning to netols are echoed as and discarded exceptions are lf line feed and nul which are flushed without comment white page rfc telnet access to ucsb s on line system september x examples a logon the dialogue which logs a user onto ols assuming the user number of section iv is as followings telnet entry ols query response ucsb online system enter user nubmer id number user name arpa arpa job name ucsb white ucsb white autosave code integer molsf load molsf file loaded in this and succeeding examples denotes cr carriage return entries echoed by ols are enclosed in parentheses above the user should substitute for ucsb white his own affiliation and name the procedure above loads the math subsystem of ols to load instead either col or net substitute its name for molsf to load a different subsystem say col after logging in telnet entry ols query response syst work areas updated load col load col file loaded again denotes a space not an underscore white page rfc telnet access to ucsb s on line system september b newtown raphson square root approximation a simple user program can be constructed to approximate the square root of a number n using the newton rapshon iteration procedure which derives the k th approximation from the kth by the following algorithm x k xk n kk the following entries construct the user program list type enter n real load enter store n type enter first guess load enter store x type of interations load enter store n rept load n x x store x disp x x list store user sqrt to display the user program enter user disp sqrt when executed the program obtains from the user the number n whose square root is sought an initial guess and the number of iterations to be performed the program then computes and displays the results of each iteration and then calls itself permitting a second square root to be computed the program is executed as follows telnet entry ols query response user sqrt enter n enter enter first guess enter of iterations enter enter n etc white page rfc telnet access to ucsb s on line system september c remote job entry a file of card images can be constructed with the help of the col subsystem of ols ard submitted as a batch job assuming col has been loaded the following entries construct a card file which invokes the fortran compiler jobname job acct name t store exec fortgclg store fort sysin dd store source statement store source statement n store store to display the completed file type disp to submit the file type sub to watch for it in execution type disp j when execution is complete printed output can be retrieved with the following dialogue telnet entry ols query response cmplx load unit vol ser mvt mvt dsname rjeout rjeout member jobname jogname now loading file loaded the output can then be examined by entering disp note text within brackets describes non ascii characters that were part of the original document please see the pdf file for the original representation white page 