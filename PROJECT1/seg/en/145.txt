 e harslen j heafner network working group ranl request for comments comments on the meyer proposal we find the meyer proposal note to be the most acceptable to dare for exactly the reasons that he enumerates viz simple suffices for most planned uses of the network easy to implement can be extended it does not encompass everything that has been suggested recently however we do agree with the items that are proposed and we feel that the missing features are probably not worth doing battle over and thus delaying the specification we make the following comments on the seven issues rasied in note we agree with steve that dynamic reconnection will later be required for more sophisticated uses of the network we also agree with the project mac people that it unnecessary initially a better job can be done of dynamic reconnection given some network experience and the specific needs of its use int is easy to implement and serves a useful purpose we favor including a sub field for instance tag identifier we see the need for both cases a where multiple processes should appear indistinguishable and b where a given user owning multiple processes must distinguish among them those program parts that should not distinguish among processes should simply ignore the instance tag tom s suggestion to use part of the user number sub field merely reduces the combined length of sub fields from bits to bits the problem remains we disagree with both steve and mac in that no special structure should be imposed on the data transmitted we prefer the message data type mentioned by e i ancona note page an example of its use was cited in note page transmit vs broadcast page with regard to a standard character set we strongly support adopting one in the beginning and in particular ascii we have observed that most sites have previously suggested ascii is there anyone who objects word boundary alignment is more attractive than double padding steve s suggestion of short term queueing of rfcs is acceptable as an option we support the ucc in note for three principle reasons a in general the user should not know the remote socket code of the process to whom he wishes to communicate b the additional duplex connection can provide some superfisory control over process behavior possibly in conjunction with the interrupt procedure c most of the other proposed methods demand queueing we think there must be a standard ucc yet we encourage parallel experimental uccs we make two additional comments on note that were not reiterated in note blk and rsm are more straightforward than previous suggestions and they do not deny multiplexing over a given link with regard to the use of links we refer to an example given by bob kahn where an intermediate imp goes down and eats some s rfnm this should not necessitate reconnection in note page the statement that the ucc has the ability to close connections to a dead process is installation dependent in our particular case the ncp is notified directly of process failure due to the particular software interface through which all processea including ncp must communicate jfh hs this rfc was put into machine readable form for entry into the online rfc archives by gary okada page 