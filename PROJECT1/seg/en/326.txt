 network working group g deloche request for comments ucla august implementation of the host host software procedures in gordo table of contents chapter page introduction host host procedures generalities connections and links definitions connection types message structure user transactions list of transactions host host protocol and control messages implementation in gordo introduction to gordo gordo file system gordo process software organization overview software description data structures allocation tables buffer pages programs handler network software procedures description of some typical sequences appendix a flowcharts rfc editor note s represents subscript s introduction this technical note concentrates upon the host host procedures and the implementation of the corresponding programs in gordo operating system of the ucla host deloche page rfc host host software procedures in gordo august the first section is closely related to the bbn reports no and and specifies the host functions for exchanging messages it mostly deals with links and connections message structure transactions and control messages the second section is software oriented it explains how the host functions are implemented and integrated into gordo it is involved with data structures programs buffers interrupt processing etc parts of this section are taken from or referred to those reports host host procedures generalities the basic idea is that several users at a given host should simultaneously be able to utilize the network by time sharing its physical facilities this implies that within each host operating system there must exist a special program that multiplexes outgoing messages from the users into the network and distributes incoming messages to the appropriate users we will call this special program the network program links and connections see figure definitions it is convenient to consider the network as a black box a system whose behavior is known but whose mechanisms are not for communicating messages between remote users rather than between pairs of host computers a logical connections we define a logical connection as being a communication path linking two users at remote host s with that concept a user user program in a host computer can establish several logical connections to any remote host users and send or receive messages over those connections connections appear to users as full duplex one of the purposes of the network program is to serve the users in establishing identifying and maintaining these connections deloche page rfc host host software procedures in gordo august b logical links each logical connection is made of a pair of directional links one for transmitting the other for receiving those links called logical links are established by the network programs and used by them note here that users are only interested in connections and are completely unaware of links relationships between links and connections are carried out by the network program one of the advantages to define a connection as a pair of directional links is that a host will have the capability to loop himself through its imp it opens a connection to himself this feature can be useful for debugging purposes further on through this paper we will not use any more the attribute logical when referring either to links or connections connection types in order to reach a high flexibility in utilizing the network there is advantage to classify the connections three types of connections are distinguished a control connection b primary connection and c auxiliary connection a control connection this connection has a special status and is unique between a pair of host s e g if the network includes x host s there are at most x control connections issued from one host this connection is used by remote network programs for passing control messages back and forth control messages are basic to the establishment deletion of standard connections see note here that this control connection is the only connection which is not used by the host users let us describe now the standard connections deloche page rfc host host software procedures in gordo august b primary connection these connections connect remote users a primary connection is unique between a pair of users and is the first to be established is teletype like i e ascii characters are transmitted echoes are generated by the remote host the receiving host s scan for break characters the transmission rate is slow less than characters sec is mainly used for transmitting control commands e g for log in into a remote host operating system c auxiliary connection these connections also connect remote users an auxiliary connection is opened in parallel to a primary connection and is not unique i e several auxiliary connections can be established between users is used for transmitting large volumes of data file oriented is used either for binary or character transmission figure links and connections see pdf file deloche page rfc host host software procedures in gordo august message structure the host s communicate with each other via messages a message may vary in length up to bits see down below the structure larger transmission must therefore be broken up by host users into a sequence of such messages a message structure is identified on figure it includes the following a leader bits message type source destination host link number see bbn report no pp a marketing bits when sent by the sigma for starting a message text on a word boundary see bbn report no pp the message text max bits for the sigma it mostly consists of user s text however it may represent information for use by the network programs control messages see a checksum bits its purpose is to check at the host level the right transmission of a message changes in bit pattern or packet transposition packets are defined in bbn report no p see down below for checksum calculation a padding for solving word length mismatch problems see bbn report no p as far as software is concerned padding is only involved at message reception for delineating message ends at transmission the hardware takes care of the padding remark checksum calculation the last bits of every message sent by a host is a checksum this checksum is computed on the whole message including any marking but excluding the bit leader and any padding to compute the checksum consider the message to be padded with zeroes to a length of bits section the bits into six bit segments s s s deloche page rfc host host software procedures in gordo august section each bit segment s into bit elements t t t define a function which takes two bit elements as inputs and outputs a bit element this function is defined by tm tn tm tn if tm tn exp tm tn tm tn exp if tm tn exp for each bit segment si compute ci k si where k s t t t computer c c c c c c c c c notice that c c is just c rotated left one bit the number c is the checksum the reason the ci are rotated by i bits is to detect packet transposition figure format of a message sent by the sigma see pdf file user transactions from what has been discussed until here the network appears to a user as a bunch of connections let us now explain how one can make use of these connections first we are going to describe the set of transactions that a user should be able to access for utilizing the connection facilities then we are going to explain the role of the network program for the execution of these transactions this will cover a host host protocol in which control messages are exchanged between network programs for explanation purposes those transactions are represented at the user level in the form of subroutine calls and parameters however this does not imply at all that the implementation will closely follow this pattern we are more involved here with the description than the implementation aspect see chapter deloche page rfc host host software procedures in gordo august list of transactions listed below are the descriptions of subroutines that could be at user s disposal for creating breaking connections and transmitting receiving data over them this set of subroutines can be considered as a kind of interface between the user level and the network program level a open primary connection openprim connectid hostid buffaddr opt connectid connection identification hostid remote host identification buffaddr buffer address for incoming messages opt options such as message required after successful connection establishment full echo each message is transmitted back by the remote host for checking purpose etc remark means optional b open auxiliary connection openaux connectid buffaddr n opt connectid connection identification i e the identification of the corresponding primary connection first a user has to open a primary connection buffaddr same meaning as above n number of auxiliary connections that should be opened opt same meaning as above c transmission over connection transm connectid no buffaddr n opt connectid connection identification no connection the primary connection is always referred to as being no an auxiliary connection number corresponds to the order in which it has been established the first auxiliary opened is referred to by no the second by no etc buffaddr buffer address of the message to be transmitted n message size byte number opt options such as data type characters vs binary trace bit etc deloche page rfc host host software procedures in gordo august d close connection close connectid n no connectid connection identification n number of connections to be closed if omitted all connections in use by the user included the primary link are closed no in case of n different from zero this number indicates the auxiliary connection to be closed host host protocol and control messages the host host protocol is carried out by the network programs it mainly involves the execution of the previous transactions initiated by users and covers a host host dialogue this dialogue fulfills control procedures for opening or breaking connections and consists in exchanging control messages over the control link a control message has a structure identical to that of a regular message it only differs from it by the text which is for use by network programs instead of users let us insist that this control procedure is completely unrelated to transmission control procedures implemented in the imp computers we are here at the host level network programs and therefore control messages that are going to be described below are transmitted over the imp s like regular messages consider now the previous transactions and describe for each of them which messages are exchanged over which links each case will be explained by means of trivial examples we suppose that a host x user wants to a remote host y program called ursa a open a primary connection openprim the host x s network program waken up see by a use for opening a primary connection starts a dialogue with the host y s network program i host x sends the following control message host x control link host y enq prim deloche page rfc host host software procedures in gordo august enq enquiry for connection establishment one ascii character prim connection type primary one special character outgoing link it is a decimal number ascii characters e g link this link has been determined by the host x network program see implementation ii host y acknowledges by sending back the following control message host x control link host y ack enq prim ack positive acknowledgment one ascii character enq prim same meaning as above this part of the message is returned for checking purposes incoming link it follows the same pattern as the outgoing link this link has been determined by the host y network program now the connection is established it will use links and for exchanging user messages the connection is said to be in a pre log in state i e the remote host y expects its standard log in procedures b transmission over primary connection transm by means of transm subroutines referring to the primary connection the host x user is able to sign in into the host y operating system and then to call for the ursa program host y user program the network programs at both ends will use the link and for passing along messages these messages are standard messages whose contents serve for log in sequence a trivial example could be host x prim link host y s i g n i n x x deloche page rfc host host software procedures in gordo august host x prim link host y r e a d y host x prim link host y u r s a c open an auxiliary connection openauxi in a very similar manner as a an auxiliary connection is established between host x and host y for so doing control messages are exchanged over the control link host x control link host y enq aux host x control link host y ack enq aux now the auxiliary connection is established it will use links and for exchanging standard messages d transmission over auxiliary connection transm by means of transm subroutines referring to the auxiliary connection the users at both ends can exchange data host x aux link host y x x x x host x aux link host y x x etc e close connections close this is carried out in a similar manner as a the user calls a close subroutine and then the network programs at both ends exchange control messages deloche page rfc host host software procedures in gordo august host x control link host y eot eot end of transmission one ascii character no of connections to be closed decimal ascii characters outgoing link to be closed then host y acknowledges back as in a host x control link host y ack eot remark in a c and e host y may answer back a message including a negative acknowledgement character nak instead of ack this for many various reasons such as wrong sequence connection already opened and so forth the message could be nak ind where ind is an alphanumerical character indicating in a coded form why the previous block has been refused upon receiving back such acknowledgments host x will repeat its message until host y accepts it an emergency procedure will take place if too many successive nak messages occur remark on each of the above illustrations arrows only the message text is represented in fact complete messages with leader marking padding are exchanged over these links implementation in gordo introduction to gordo gordo is a time sharing system implemented on sds sigma we outline below some of the characteristics relevant to our paper gordo file system the file system is page oriented it is composed of files and directories a file consists of a heading and a number of pages which compose the body of the file a directory consists of a number of entries that point to either files or other directories deloche page rfc host host software procedures in gordo august gordo process a process is a program procedures and data plus its logical environment in other words a process is a program which is known and controlled by the gordo scheduler a user a job may have several processes as different as compiler loader editor application program etc a process is created through a system call fork the space a process can refer to is the virtual space of k word length a part k of it is reserved for the operating system the other part k is directly accessed by the user this later may fill or modify its part of the virtual space upon coupling see below service calls pages taken from different files figure illustrates this coupling a process can request for services by means of system calls the system calls relevant to our paper are wake for awaking set active a sleeping process sleep for putting asleep another process or itself couple for coupling a page from the file space to the virtual space a process ordinarily runs in slave mode however if it is set up as an i o process it can access privileged instructions processes can share data through files attached to mail box directories remark through this note the words process and program are used inter changeably figure virtual space and coupling see pdf file software organization overview figure illustrates the overall organization the system is based upon two main programs the network and the handler the handler is an i o interrupt routine closely related to the imp host hardware interface it serves the network process in transmitting an receiving network messages the network process carries out most of the work deloche page rfc host host software procedures in gordo august its main function is to satisfy the users requests for opening closing connections and transmitting receiving network messages for so doing it establishes identifies and breaks the links upon using the allocation tables host connect input link see it is aware of the presence of new users upon exploring the network mail box directory it communicates with active users by means of shared pages through which messages and requests are exchanged connection shared pages it formats incoming outgoing messages in a working page this working page has an extension emergency ring it communicates with the handler by means of a shared page i o communication page which contains the i o communication buffers figure software organization overview see pdf file software description data structures allocation tables host connect input link the network program establishes identifies and breaks links and connections upon using tables a table sorted by remote host a table sorted by connection a table sorted by input link a host table see figure it is a bit table indicating the free outgoing links it has the following characteristics location disc resident coupling coupled to the network process virtual space size as many slots as remote host s deloche page rfc host host software procedures in gordo august slot structure as many bits as possible outgoing links to a remote host i e access indexing each slot is accessed through a remote host specific feature throughout the whole table no more than bits can be turned on this figure corresponds to the maximum number of outgoing links that can be activated at one time no matter what is the number of remote host s b connect table this table keeps track of all the connections environment it has the following characteristics location disc resident coupling couples to the network process virtual space size as many slots as connections in use slot structure see figure each slot is word length access indexing each slot is accessed through a connection see the way it is handled specific feature the slot structure corresponding to a primary connection is not identical to that of an auxiliary connection see figure this because user identifications and requests are done through primary shared pages specific feature this table is handled in parallel with the connection pages see b deloche page rfc host host software procedures in gordo august specific feature this table is mainly used for transmitting messages for each connection it contains the outgoing link and remote host i e all the information required for transmitting a message c input link table this table keeps track of all the incoming input links and so is closely related to the connect table figure host table see pdf file figure connect table slot structure see pdf file figure insert link table slot structure see pdf file it has the following characteristics location disc resident coupling coupled to the network process virtual space size as many slots as incoming links i e as connections slot structure see figure each slot is word length access hashing the hashed key value is mainly based upon the incoming link and the remote host specific feature this table is also used for momentarily memorizing the connection number while establishing the next connection see the way it is handled specific feature this table is primarily used upon receiving messages for each incoming link it contains the corresponding connection i e indirectly the user identification to which the message should be passed along deloche page rfc host host software procedures in gordo august buffer pages all the pages that are now to be described contain two buffers input and output these buffers are used for either passing along or processing messages the size of each of these buffers should at least be equal to that of a message i e bits we have chosen a buffer size of words bits so that both of the buffers are included within one page words the remaining words of the page are generally used for control a typical buffer page structure is identified on figure a i o communication page see figure this i o communication page is used as an interface between the handler and the network program in the buffers of this page the messages are assembled input or de assembled output word by word by the handler e g a ready to go message sorted by the network program in the output buffer is shipped out word by word by the handler main characteristics location resident in core locked page coupling coupled to the network process virtual space content input buffer words for incoming messages output buffer words for outgoing messages input control zone half words output control zone half words structure see figure specific feature the input buffer is filled by the handler read from hardware and emptied by the network program vice versa for the output buffer b connection shared pages user network shared zone general features there are as many shared pages as connections these pages shared between the network and the user processes constitute a communication zone for passing deloche page rfc host host software procedures in gordo august the messages back and forth and exchanging control information e g a request for establishing new connections main characteristics location disc resident coupling coupled to both a user process virtual space and the network process virtual space content input buffer words for incoming messages output buffer words for outgoing messages input control zone half words output control zone half words structure see figure specific feature the input buffer is filled by the network and emptied by the user vice versa for the output buffer specific feature the control zone corresponding to a primary connection shared page differs from that of an auxiliary connection this because it is via a primary connection control zone that auxiliary connection establishment requests are transmitted to the network process c working page general feature this page allows the network and the handler programs to work independently on different messages and so contributes to an overlapping for instance when the handler is busy transmitting a message to the hardware the network program can format leader marking etc the reset message to be shipped out so that it can reinitiate the handler as soon as it is free main characteristics location disc resident coupling coupled to the network process virtual space content input buffer words for incoming messages output buffer words for outgoing messages deloche page rfc host host software procedures in gordo august remark during reception it may happen that a user program is not ready to accept a new message in that case to avoid clogging up the system the network stores momentarily the incoming message in one of the buffer of the emergency ring if this ring is full a help routine will be invoked during emission all operations are synchronized with the rfnm s therefore such procedures need not be provided the network program allows a user to re emit only when having received the rfnm of the previous transmitted message figure typical buffer page see pdf file figure i o communication page structure see pdf file figure connection shared page structure see pdf file programs handler program general features it is an i o interrupt routine which drives the imp host hardware interface in order to transmit or receive messages transmission and reception are carried out in a full duplex mode main characteristics location core resident the handler is in the same memory zone as the operating system and can be considered as part of it initiation by the imp host hardware interrupt this interrupt is triggered either during transmission when a message word is completely sent to the imp during reception when a message word has been completely received from the imp during idle time when the hardware received either a start input or start output order from the sigma cpu those orders are issued by the network program for provoking interrupts back deloche page rfc host host software procedures in gordo august consequently for indirectly initiating the handler main functions empties the output buffer upon transmitting its content outgoing message to the imp this operation is carried out word by word bits and makes use of write orders for driving the host imp hardware fills the input buffer with data received from host imp hardware incoming message this operation is also carried out word by word and makes use of read orders for driving the host imp hardware wakes up the network program when any of the previous operations is complete network program general features this program serves the user for opening closing connections and transmitting receiving messages it uses the handler as an aid for inter facing with the hardware for the gordo point of view it is a regular process and treated as such main characteristics location disc resident more precisely it is on disc when asleep and called in core when awakened by a program initiation it is initiated through wake service calls issued either by a user process or by the handler main functions establishes deletes outgoing connections upon users requests for so doing it sends control messages see to remote host s in order to get links established released it then notifies back the users insures the processing of incoming control messages transmitted over control links e g for contributing to establishments deletions of connections those requested by remote hosts deloche page rfc host host software procedures in gordo august prepares transmission of outgoing messages it picks up text messages from shared pages the messages are stored there by users formats them adds leader marking checksum and passes them along to the handler for transmission insures delivery of incoming messages it is the opposite of the above operation the users to which the messages should be delivered are identified through the leaders virtual space configuration see figure specific feature it is integrated as an i o process so that it can access privileged instruction rd wd for indirectly initiating the handler figure network process virtual space see pdf file software procedures the detailed software procedures are given on the flowcharts attached with appendix a however to get a quick understanding of the implementation we list below some typical software procedures description of some typical sequences consider some of the transactions at user s disposal see and point out the basic software procedures they imply for each case we will delineate i what the user program does and ii what the network program does a open a primary link see also i what the user program does it stores in the network mail box directory the name of a file e g data it couples the first page of this file to its virtual space it stores information in this page its job process the remote host e g i it wakes up the network process it goes to sleep deloche page rfc host host software procedures in gordo august ii what the network program does it explores the network mail box directory and accesses the file data it couples the first page of this file to its virtual space shared zone see suppose this page to be kth in the shared zone k is the internal connection it explores the ith slot of the new host table see a and selects the first bit e g the alpha th bit alpha corresponds to the outgoing link it stores information job process remote host i outgoing link alpha in the kth slot of the connect table see it momentarily stores the connection k in the input link table this is carried out upon creating an entry in this table hashing the key value outgoing link alpha remote host i outgoing flag it prepares the message text enq prim a and formats a complete message in adding leader marking checksum etc it checks the handler state bit in i o locked page if the handler is free it stores the ready to go control message in the output buffer of the i o locked page initiates the handler and goes to sleep else it goes to sleep after a while the handler wakes up the network process because it has received a complete message we suppose this message be the control message sent by the remote host for acknowledging the establishment of the connection the message text should be ack enq prim alpha beta where beta is the incoming link see let s see now what the network program does when receiving the above control message it retrieves the connection previously stored in the input link table upon re hashing the same key value see above also it deletes this entry it creates an entry in the input link table for the incoming link for so doing it hashes the key value incoming link beta remote host i incoming flag in this entry it stores the host i the incoming link beta and connection k deloche page rfc host host software procedures in gordo august it updates the kth slot of the connect table in storing the incoming link beta it turns on the net user bit in the kth shared page page corresponding to the primary connection that has just been opened and wakes up the user process it goes to sleep b transmit a message over primary link i what the user program does it stores the message text in the output buffer of the primary connection shared page see it turns on the user net bit of this page and wakes up the network process it goes to sleep ii what the network program does it looks for user request i e it explores in sequence the connection shared pages and selects the one that has its user net bit turned on suppose k be the selected page on the shared list k is the connection it determines the request type in testing the request bits of the shared page k it finds out that it is a request for transmitting a message it takes the message text from the output buffer of the shared page k formats it into a complete message and transmits to the handler in a very similar way as above see open a primary link it goes to sleep remark in a first phase the user will directly write the network functions in his program later on subroutines will be put at user s disposal these subroutines will be very close to those described in deloche page rfc host host software procedures in gordo august appendix a flowcharts see pdf file for flowcharts this rfc was put into machine readable form for entry into the online rfc archives by bob german deloche page 