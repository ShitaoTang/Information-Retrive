 network working group m krilanovich request for comments computer research lab ucsb nic april network on line operators preface the operators described in this document have been implemented within ucsb s on line system and make the network via the ncp accessible to on line system users a set of operators is provided to facilitate the use of the network by on line system users the operators are defined on lvl i on system net and serve an an interface between the users and the network control program ncp which supervises all network operations at this site a concept fundamental to on line system network operations is that of a completion code variable associated with each socket that is not in the closed state is a unique variable called a completion code variable this variable serves two purpose it identifies the local socket referenced and upon completion of the operation it contains a completion code to indicate the outcome of the operation to the user it may be used at any time for any purpose other than network operations its value at the beginning of a network operation is immaterial rather it is the variable itself that is important in all network operations whenever a completion code variable is called for the only acceptable type variable is a lo storage location either case or case in those operations requiring a socket to be specified by its socket identifier the following format is used the site number of ucsb is always used for local sockets and so this item is never specified the site number of a foreign socket if specified must be a positive integer or a lo storage location and must be less then in value if not specified the site number of a foreign socket will default to the site number of ucsb a socket number is specified as an integer either unsigned in which case it is assumed to be positive or with an explicit minus sign or a lo storage location of any value negative socket numbers are represented internally in two s complement form and therefore for the purpose of the gender of a socket a socket number is even or odd according to whether its absolute value is even or odd respectively krilanovich page rfc network on line operators april in all operations involving the on line system network operators there are certain conventions concerning the format of the data sent and received the data is grouped in messages consisting of three fields op code length an text in that order the op code is one byte in length and is a code which indicates how the text field is to be interpreted the length field is two bytes long and gives the length in bits of the text field which contains the actual data the op code and length fields together are termed a header the following op codes are presently defined op code meaning this op code is a nop no text field exists and the contents of the length field are unpredictable this op code is used mainly as a delimiter the text field contains ebcdic characters one character per byte the on line system operators consider the characters as intended for display as soon as the text field has been received the text contains codes for keypushes one byte per key the on line operators consider the keys as intended for execution as soon as the text field has been received the same as for an op code of except that the on line operators consider that the execution of the keys will be delayed until all data for that receive operation has been received the standard format of data sent or received by the on line system operators is a string of messages with the last message indicated by a header with a nop op code called a trailer these conventions are the default situation any of them may be overridden by appropriate programming following is a description of each operator its function and key sequence open by invoking this operator the user requests that the specified local socket be removed from the closed state and thus be prepared to participate in data transfer there are three distinct operations that can be performed by this operator and these are described below krilanovich page rfc network on line operators april a connect by invoking this operator the user requests that the specified local socket be logically connected to the specified foreign socket and that transfer of data be enabled between the two sockets processing at the terminal is suspended until the foreign sockets either accepts or rejects the connection attempt this operation is valid only when the local socket is in the closed state the key sequence is as follows up q q q q return where q is the completion code variable to be associated with the local socket q is the socket number of the local socket q is the socket number of the foreign socket q is the site number of the foreign socket the following completion codes are possible for this operation the operation was successful and the connection has been established the specified completion code variable is already assigned to a socket the operation was suppressed the specified local socket is not in the closed state the operation was suppressed all communication paths to the specified foreign site are in use the operator was suppressed local resources are insufficient to support another connection the operation was suppressed the connection attempt was rejected by the foreign process the specified foreign site is invalid the operation was suppressed either hardware at the foreign site is inoperative or the ncp s counter part at the foreign site does not exist or has failed local and foreign sockets are both either send or receive sockets the operation was suppressed by operator command all network operations were terminated the socket will be closed an ncp control transmission error occurred the operation as suppressed krilanovich page rfc network on line operators april b listen this operation is a request for notification of any connection attempt directed toward the specified local socket processing at the terminal is suspended until such a call is received this operation is valid only when the designated local socket is in the closed state the key sequence is as follows up q q return where q is the completion code variable to be associated with the local socket q is the socket number of the local socket the following completion codes are possible for this operation the operation was successful and a call has been received the specified completion code variable is already assigned to a socket the operation was suppressed the specified local socket is not in the closed state the operation was suppressed local resource are insufficient to support another connection the operation was suppressed by operator command all network operations were terminated the socket will be closed c accept this operation accepts connection with the foreign socket whose call caused successful completion of a previous listen operation by the specified local socket after completion of this operation data may be transferred to or from the local socket depending on its gender this operation is valid only when the last operation referencing the local socket as a listen operation processing at the terminal is suspended until the operation is completed the key sequence is as follows up q return krilanovich page rfc network on line operators april where q is the completion code variable associated with the local socket by a previous listen operation the following completion codes are possible for this operation the operation as successful and the connection is established the specified local socket is in the closed state the ncp may have received an abort notification from the foreign process the operation was suppressed the previous operation specifying the designated local socket was not a listen the operation was suppressed all communication paths to the specified foreign site are in use the socket has been returned to the closed state close this operation is a request that the specified local socket be returned to the closed state if the last operation involving this socket was a listen this operation refuses the foreign process connection attempt if the last operation was a connect the attempt is aborted if a connection is established any data in transit form the local socket is allowed to reach the foreign socket and to be either received or flushed before the local socket is closed processing at the terminal is suspended until the socket has been returned to the closed state the key sequence is as follows dwn q krilanovich page rfc network on line operators april where q is the completion code variable associated with the local socket the following completion codes are possible for this operation the operation was successful and the socket has been returned to the closed state the specified completion code variable is not currently assigned to a socket the operation was suppressed the specified local socket is in the process of being closed the operation was suppressed but the local socket will be closed either hardware at the foreign site is inoperative or the ncp s counterpart at the foreign site does not exist or has failed by operator command all network operations were terminated the socket will be closed an ncp control transmission error occurred the operation was aborted a transmission error occurred the operation was aborted but the socket will be closed send this operation caused data to be sent to the foreign socket processing at the terminal is suspended until the data has been received by the foreign socket or until it has been queued locally by the ncp the possible key sequence are as follows store q q text q store q q text q store q q text q store q x q return where q is the completion code variable associated with the local socket q is any key except reset text is a string of any length of any keys except q and reset q is an unsigned integer if it is preceded by x the krilanovich page rfc network on line operators april integer is assumed to be in hexadecimal x q should have a value less then if q is the first key after store the keys comprising text are not executed but rather are sent as a one byte code per key in one or more standard messages they are preceded by a header with the op code which indicates keys to be executed as soon as they are received and followed by a trailer if a precedes q the headers and the text will be sent but no trailer if a precedes q only the text will be sent if a precedes q x q will be sent as a one byte number with no header or trailer the following completion codes are possible for this operation the operation was successful and the data has been sent the specified local socket is not a send socket the operation was suppressed the specified completion code variable is not assigned to a socket the operation was suppressed a previous send operation is in progress the operation was suppressed the connection is not fully open the operation was suppressed the foreign socket terminated the connection before completion of the send operation not all the data was transmitted either hardware at the foreign site is inoperative or the ncp s counterpart at the foreign site does not exist or has failed by operator command all network operations were terminated the socket will be closed one or more interrupts were received from the foreign socket the operation was suppressed an ncp control transmission error occurred the operation was aborted and the socket will be closed a transmission error occurred the operation was aborted and the socket will be closed receive this operation causes data to be received from the foreign socket processing at the terminal is suspended until the data sent by the foreign socket has been received by the local socket and processed the possible key sequences are as follows krilanovich page rfc network on line operators april load q load q load q q q return load q q return where q is the completion code variable associated with the local socket q is a positive integer or a lo storage location less then q is a positive integer or a lo storage location less than q is a positive integer less than if q is the first key after load one or more standard messages will be received and executed the data may or may not be executed as soon as it is received depending on the op code processing of manual keypushes is suspended until a trailer is received if q is preceded by a the operation is as above except that only one message with no trailer is received and the operation is only performed if there is data queued for the local socket ready to be received load is intended mainly for use with the network on line interface if q is preceded by a a string of text whose length in bits is q is received and processed according to the op code q if a precedes q q bytes of data are read and placed right justified in the lo accumulator the following completion codes are possible for this operation the operation was successful and the data has been received the specified local socket is not a receive socket the operation was suppressed the specified completion code variable is not assigned to a socket the operation was suppressed a previous receive operation is in progres the operation was suppressed the connection is not fully open the operation was suppressed the foreign socket terminated the connection before completion of the receive operation data is unpredictable either hardware at the foreign site is inoperative or the ncp s counterpart at the foreign site does not exist or has failed by operator command all network operations were krilanovich page rfc network on line operators april terminated the socket will be closed one or more interrupts were received from the foreign socket the operation was suppressed an ncp control transmission error occurred the operation was suppressed and the socket will be closed there was no data queued for the local socket the operation was suppressed applicable only to load check this operation causes the status of the specified local socket to be displayed there is no completion code variable associated with this operation since it is always successful and the socket is identified by its socket number this operation is valid at any time and with one exception noted below is always completed immediately the possible key sequences are as follows display q return display q display return where q is the socket number of the local socket whose status is to be displayed successive return s will display the status of local sockets with successively higher socket numbers and once display has been pushed it need not be pushed for subsequent occurrences of q if q is followed by a processing at the terminal will be suspended until the socket is not in the closed state at which time the status will be displayed if the socket is not closed at the time the is pushed response is as if the were a return if display is followed immediately by a return the status of all non closed sockets owned by the terminal is displayed each preceded by its associated completion code variable if this information is more than will fit on one tube successive return s will display the remainder of the information krilanovich page rfc network on line operators april the status has the following format lclno mnem fgnsite fgnno deficit where lclno is the socket number of the local socket mnem is a mnemonic of up to eight characters for the status fgnsite is the site number of the foreign socket or blank fgnno is the socket number of the foreign socket or blank deficit is the send receive deficit in the form bytes bits or blank following are the possible mnemonics together with their interpretations mnem meaning open a connection is fully established no send receive operation is in progress fgnsite and fgnno are the site number and the socket number of the connected socket deficit is the number of bits queued locally at the socket by the ncp and available to satisfy a future receive operation or awaiting output as the result of a previous send operation listen a listen has been issued connect a connect has been issued fngsite and fgnno are the site and socket numbers of the foreign socket decision a listen has been completed fgnsite and fgnno are the site and socket numbers of the calling socket call s one or more calls have been received for the local socket no listen or connect has been issued i o a connection is fully established a send receive operation is in progress fgnsite krilanovich page rfc network on line operators april and fgnno are the site and socket numbers of the connected socket deficit is the number of bits yet to be sent or received closed the socket is in the closed state drain the foreign socket is attempting to close the connection the ncp has data yet to be read by the local socket fgnsite and fgnno are the site and socket numbers of the connected socket deficit is the number of bits yet to be received drained the foreign socket is attempting to close the connection the ncp is awaiting arrival at the foreign site of data currently in transit fgnsite and fgnno are the site and socket numbers of the connected socket closing the local socket has issued a close the ncp is in the process of returning the local socket to the closed state fgnsite and fgnno are the site and socket numbers of the connected socket drain the local socket has issued a close the ncp is completing the last send operation before returning the local socket to the closed state fgnsite and fgnno are the site and socket numbers of the connected socket deficit is the number of bits the ncp has yet to transmit identify this operation is used to identify a local socket by its completion code variable the operation is valid at any time and is always completed immediately since it is always successful there are no completion codes for the operation and the contents of the completion code variable are not changed the key sequence is id q where q is the completion code variable associated with the local socket krilanovich page rfc network on line operators april the response is a display of q followed by is undefined if the socket is in the closed state or the socket number associated with it if it is not closed after id has been pushed once it need not be pushed again for subsequent occurrences of q purge this operator is used to dissociate all completion code variables from sockets and to issue a close to all sockets currently in use at the terminal the operation is valid at any time and is always completed immediately since it is always successful there are no completion codes for the operation and the contents of the completion code variables are not changed the key sequence is del return signal this operation is used to convey a signal to the foreign process the significance of the signal is completely user dependent the effect is that the next time the foreign socket attempts to initiate a receive or send operation the operation will be suppressed and a completion code supplied indicating that a signal had been received processing at the terminal is suspended until the signal has been sent to the foreign ncp this operation is valid only when the socket is fully open the key sequence is refl q where q is the completion code variable associated with the local socket the following completion codes are possible for this operation the operation was successful and the signal has been sent the specified completion code variable is not assigned to a socket the operation was suppressed the connection is not fully open the operation was suppressed krilanovich page rfc network on line operators april conversational controller this operator is intended primarily for use with the network on line interface and is used to carry on a conversation with the foreign process any data queued locally for the specified local receive socket is received and displayed as characters any keys pushed will be sent from the specified local send socket the user has the option of specifying whether or not upper keyboard buttons are to be sent in any case the buttons erase repeat enter pred and reset will not be sent and pushing any of these except reset will cause suspension of data reception until a button other than these four is pushed pushing reset always terminates the operation the key sequence is as follows arg q q where q is the completion code variable associated with the local send socket q is the completion code variable associated with the local receive socket if arg is followed by both upper and lower keyboard buttons will be sent and the operation will be terminated only by pushing reset if no follows arg only lower keyboard buttons will be sent and the operation is terminated by pushing reset or any upper keyboard button if a precedes q no headers will be sent and if a precedes q no headers will be received in any case if headers are to be received the operation is terminated when a trailer is received and a corresponding trailer is sent if headers are to be sent the completion codes for the send socket are the same as for the send operation and the completion codes for the receive socket are the same as for the receive operation if a non zero completion code is found a message is displayed either output error or input error depending on whether the send socket for the receive socket encountered the non zero completion code and the operation is terminated this rfc was put into machine readable form for entry into the online rfc archives by gruss gottfried krilanovich page 