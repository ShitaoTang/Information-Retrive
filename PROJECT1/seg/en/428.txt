 network working group e i ancona request for comments m i t lincoln laboratory march message data types proposal we propose that the first eight bits of a normal message be reserved for a message data type adoption of this convention does not in any way signify agreement as to the actual data types to be used it merely establishes the convention that the first eight bits of every normal message are not available for user data discussion socket port v v v y process x it is important that conventions regarding the contents of messages be set up early so that there will not be a large proliferation of such conventions between every pair of programs running on the network as network usage grows network languages may develop for specifying both the syntax and semantics of messages however even before such conventions are developed a simple way of describing such a specification is by means of a message type which both sender and receiver know how to interpret it is important that currently running programs still run with this convention thus we propose that two system programs be written which initially put in and test and remove the type information from the message let us call these two programs x and y for lack of ancona page rfc message data types march better names in general x and y will perform transformations on the data e g change character sets or number formats as network usage grows x and y might become table driven with the table specified by the user standard types and local types we propose to distinguish between two kinds of message data types standard and local since our two transformation programs cannot be expected to perform a transformation between every possible data representation and the data representation of the machine they are running on and also since the addition of a data representation should not necessarily involve a change to x or y we propose that only a fixed number of message types have meaning throughout the network these are standard types there are two classes of local types mylocal and yourlocal a message type mylocal n implies this is type n of the set of types of the sending host yourlocal n implies this is type n of the set of types of the receiving host conventions a possible implementation of standard and local types is to define standard type to be yourlocal and standard type to be mylocal in these cases the second byte would be the local type number local type would mean user specified i e the message contents are unchanged and unchecked installations would define their own local type numbers and these would normally be available from the network information center thus initially all messages sent to currently running programs will be type n and all messages received from currently running programs will be type n where n is the local type number of the character set of the installation examples of possible standard types yourlocal mylocal u s ascii ebcdic mod tty ascii ancona page rfc message data types march load table driven translator table n if in the future the x and y transformation boxes are table driven this gives the table the table number n is stored in the second byte of the message use table driven translator table n network standard graphics message examples of local types local character sets e g lincoln writer dec ascii etc graphics local messages e g tx apex display executive calls gsam this rfc was put into machine readable form for entry into the online rfc archives by robbie bennet ancona page 