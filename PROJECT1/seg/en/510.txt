 network working group j davidson request for comments university of hawaii nic august references rfc rfc comments on the rcte telnet option rfc describes a remote controlled transmission and echoing telnet option its authors provide a framework wherein a serving host may control two aspects of telnet communication over the simplex user to server path commands are introduced which govern when and which characters shall be echoed by the user and when and which characters shall be transmitted by the user motivation for the option was based on two considerations the latency between striking and printing of a character which is to be echoed by a remote server is disconcerting to the human typist and character at a time transmission introduces processing inefficiencies for imps for servers for users and decreases effective channel thruputs over the net the author feels that the rcte description is in error or at least unclear in its treatment of when characters are to be transmitted however discussion of the subject in the rcte specification is incomplete so it is difficult to point to a statement which is wrong rather the present objections are based on inferences drawn from the sample tenex interaction perhaps there is some misunderstanding of the original issues to which rcte now addresses itself original motivation for remote controlled echoing rce rfc an echoing strategy for satellite links introduced a need for rce for users who are separated from a service host by a satellite link the motivation was to lessen human frustration and confusion no consideration was given to resulting processing inefficiencies or channel thruputs in the remainder of this rfc we consider character transmission apart from echoing considerations davidson page rfc comments on the rcte telnet option august it was recognized that the human s best interests could be served if user to server transmission were performed on a character by character basis the implicit assumption being that this insured the most rapid server response possible this scheme allowed for the classic overlap of network i o and computation and was thus efficient as far as the human user was concerned concessions were made in the transmission strategy when it was accepted that the serving process could not in fact do any significant processing until a completed command was available ideally then users should be able to buffer characters until they have a completed command and then fire off the entire command in a single packet with the resultant savings in channel usage and a greater per packet data efficiency the characters which delimited commands were called wakeup characters in for their effect on the serving process rcte calls them transmission characters for the effect they have at the user telnet the key here is that it is quite possible for a human separated by a satellite link from his remote host to type several completed commands and to therefore initiate several packet transmissions all the while awaiting the server s response to his first command again we see the overlap of i o and computation and again we achieve maximum efficiency from the human s viewpoint the problem however is that wakeup transmission character sets change and there will always be a finite amount of time the one way transmission time during which the set definitions will differ between server and user this says that during such times the user will be sending off packets which do not contain completed commands or contain more than a single completed command or he will be buffering characters beyond the end of a completed command a fourth alternative is that he may actually still be doing the right thing by chance buffering beyond the end of a command is the only case which lessens processing efficiency for the human however dissatisfaction with rcte here is the author s complaint rcte at least the sample interaction which allowed transmission by default only at break characters would have the telnet user wait until he knows exactly the wakeup transmission character set being used by the server ideal channel utilization might be achieved since no unnecessary packets are sent and strangely no extra characters are allowed in the current packet but the overlap of i o and computation has been eliminated and the human has an extra round trip time added to the server s processing time this is wrong davidson page rfc comments on the rcte telnet option august an alternative implementation unless a round trip time penalty is to be paid by the human at every break interaction the user telnet must transmit characters based on the transmission character set in effect at the moment the characters are typed and unless the step by step interaction developed in the rcte tenex example was not a true representation of the relative temporal occurances of events rcte did not do this the sample tenex interaction showed the user typing t login arpa while the break set included and the only transmission characters in effect were the break characters by default the rcte example showed that the login phrase was properly a completed command it was transmitted but while the alternative transmission strategy of the current rfc would recognize the arpa phrase as a second completed command and thus initiate a second transmission rcte withholds judgment until the server respecifies the transmission classes response for the user suffers one might also ask what transmission strategy was to be undertaken when two users were say linked thru a tenex transmission should obviously be at every character rcte would send the first single character packet and then wait to be sure that a single character did in fact delimit the next command also it would wait a long time it would seem since no break interaction would occur until the end of the line the user would be echoing like a champ but no characters would be transmitted for the linked party s inspection if we adopt the convention that transmission decisions should be based on the transmission set and by default the break set in effect at the time the character is typed then the sample interaction might in fact look like this p tenex tenex exec t login p login note typing and printing occurs simul u login taneously up to the at which point the human types ahead t arpa u arpa p ar s password the server sends while text is printing p pa password t washington u washington t s p t again printing is simultaneous to typing p t p u s job the interaction will not necessarily be the same each time it depends on the typing speed of the user and response time of the server for this example both channel utilization and performance for the human are perfect since the transmission set even though it was only the default break set did not change unsolicited output the question of unsolicited output arise again the treatment in was simplified over that of only because of the rcte transmission strategy no output could possibly be returning for a command which hasn t been sent yet so the message must be system going down davidson page rfc comments on the rcte telnet option august rfc outlines when unsolicited output can be recognized and when it should be printed in line with the alternate transmission scheme proposed the requirement that such system alerts be terminated by rcte commands is of course the proper way to handle such interrupts this clarification of the unsatisfactory solution in is appreciated tip buffering rcte as defined cannot allow a user to transmit when his buffer is full else he might send a break character presumably the buffer fills because we are waiting for break transmission redefinition the response to the command delimited by the break character could return before the characters of the command were echoed rcte would thus demand that it be printed first and the listing would be out of order the alternative transmission strategy eliminates this problem since transmission of a full buffer is no worse than guessing incorrectly that the last character in the buffer is a transmission character a further suggestion all server to user echoing could be eliminated if control bytes were sent to indicate which break sets should be echoed and which shouldn t endnotes for example statement e f does not properly distinguish between the occurrence of a break character and the occurrence of a transmission character the present rfc shows that they are fundamentally different davidson page 