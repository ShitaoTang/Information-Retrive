 network working group dave walden request comments bbn nic categories c or maybe d updates none obsoletes none tip message buffers we have recently heard some groaning about the size of the tip s message buffers while we realize these aren t as big as some hosts might desire they aren t as small as the intensity of the groans suggest either let s first consider messages going from a tip to another host the buffers have the following sizes device numbers buffer size in bit characters the tip user has the option of having his messages sent every character on line feeds and or com s every nth character or the or of and selecting to have messages sent every large number of characters say will result in the tip sending the longest messages it can for a given device hosts which don t like to receive very short messages might advise users accessing them from a tip to set the tip s parameters to use the maximum length buffer now let s consider messages going from another host to a tip the buffers have the following sizes device numbers buffer size in bit characters page the tip double buffers its terminal output thus when a tip terminal makes a connection to a host the tip sends off an allocation of between and characters depending on the terminals device number and when a message comes using up the allocation the tip immediately sends another allocation for the same number of characters while it prints the first buffer for traffic both to and from the tip lower numbered devices have bigger buffers therefore users of line oriented systems as well as users of higher speed devices should try to come in through the lower numbered ports on the tip s multi line controller if possible the sizes of the tip s message buffers and the number of each size are not permanently fixed and can be changed if a better distribution is suggested we didn t know what size buffers to provide so we have provided a variety what is fairly fixed is the total amount of buffer space two output buffers and one input buffer for each of devices must come out of this total buffer space the answer to your question why not dynamically allocate buffers at run time is it is a complicated job to do that it requires memory compactions a mechanism to reclaim space from current users when a new user comes on etc our guess is that the code to dynamically allocate buffers at run time would reduce the total space available for buffers by about one fifth this rfc was put into machine readable form for entry into the online rfc archives by bbn corp under the direction of alex mckenzie page 