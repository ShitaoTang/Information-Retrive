 network working group r winter request for comments cca nic september category updates none obsoletes none user s view of the datacomputer memorandum to datacomputer design file from r a winter subject user s view of the datacomputer date september introduction the datacomputer is a specialized node of the arpa network that is dedicated to the management of a large shared database by large we mean several trillion bits of data of which at least one trillion are on line shared may mean for some files shared by nearly all the users in the arpa network the name datacomputer derives from the idea that the system is dedicated to data handling though the processor is capable of general computation it will not be used for that purpose the processor like the mass storage device is only a component of an integrated system which appears to the user as a black box there is one language for addressing the black box data language this language defines everything it can do all the information presented in this memorandum is about the first of a series of service offerings we use the term access method to refer collectively to a structure and the operations on it being too modest to call the first one am access method we named it dcam datacomputer access method d we expect subsequent dcams to generalize dcam if the need arises we will design parallel services all services will use the same data language winter page rfc user s view of the datacomputer september system overview the users of the datacomputer are programs running on other computers retrieving data from and storing it in the data base the environments capabilities and applications of these programs vary widely however a chief design goal is to allow them to share the data there is further variation among users in physical connection remotely located users access is over a narrow link to the data computer s low speed port local users are connected to the high speed port through a link times wider through its ports the datacomputer accepts two kinds of input data and requests for services data is output through the ports as requested in the data base descriptions are stored separately from the data and data elements are named typed and ordered according to them a measure of structure independence is obtained by writing access requests in terms of the symbolic names of items in the data description directories are maintained by the system a hierarchical naming scheme is used and access controls for privacy and data integrity are provided redundant copies of data and or journals of changes are maintained by the system and used to effect recovery under system control in case of system error these facilities can be operated under user control if there is external error since the datacomputer s only interface with the outside world is through its ports it sees the universe as a group of data streams specifically these are record streams if one views all transactions in the data transfer protocol sense as records associated with each record stream is a data description allowing the datacomputer to parse the records into named typed elements thus all data elements stream elements and data base are named and fully described data type conversion proceeds automatically as a function of old and new data types and optional information supplied by the user reconfiguration above the element level is a matter of arrangement of elements in records a full set of capabilities is provided for this in general the using program is concerned with the configuration of the stream records that comprise its interface with the datacomputer the internal configuration of data affects the user only as it limits the data s accessibility or malleability winter page rfc user s view of the datacomputer september in fact the user should not generally have to be aware of the internal data configuration although support on some level for all types of applications is attempted the first implementation gives particular attention to large simply organized shared files emphasis is placed on allowing the user of such files to describe precisely what data is really of interest to him so that nothing but the desired information is transmitted this is crucial for avoiding overload of the narrow link and is accepted as a central design goal data base organization the database contains all information stored in the datacomputer it is a set of files which are named physically distinct collections of data the location of one file the file directory is known to the system it contains the names locations and certain attributes of all the other files access to this file is restricted internally each file has its own organization but each organization is a particular application of a general model the particular application is defined by a file description associated with the file in the general model each file contains uniquely numbered records each record contains named fields a field of a certain name may occur more than once in a given record and a unique number is associated with each occurrence a field contains an elementary piece of data the value of the field the records are variable in format and size fields are variable in length in addition to the records themselves each file can contain an index the system maintains the index to the specifications of the user conceptually the index contains lists of pointers to records having certain properties a typical list might point to the records containing the field state with the value massachusetts the system supplies a unique permanent identifier for each record this identifier maps trivially into a location in the file or at worst into a small region in which the record can be quickly located the identifier is used to pointers to the record both from the index and from other records winter page rfc user s view of the datacomputer september besides the physical ordering defined by record location a logical ordering will be maintained on request by the system this can be based on some simple function of record contents such as the value of certain fields alternatively the user can compute the function and simply supply the result for example by saying insert this record after that one retrieval from such ordered files can be made either in physical or logical order in all such ordered files if insertions are made space must be reserved for them and garbage collection must be done periodically a single field value is viewed as a homogeneous string of characters or basic data units it is described by giving the type e g ascii bit binary integer etc and the length is some unit associated with the type when the length of a field is constant throughout the file it is stored in the file description otherwise it appears with each occurrence of the field the type of a field is constant the information in the file description is sufficient to parse a record into field name value pairs also given such a set of pairs and a file description the system can produce a record satisfying the description mapping in either direction there is only one possible result with a record a file description and a field name value pair to store in the record there is also only one new record that can result thus a file description defines all the possible formats for a record from a particular file stream organization streams are sequences of records passed from using programs to the datacomputer or vice versa the format of the records is defined as in the file description thus streams have the same organization as files except they cannot be indexed the operations defined on streams are more limited than those defined on files since the records must be accessed in sequence there is no concept of permanent storage for streams the records move past the datacomputer one at a time as though they were on a conveyor belt winter page rfc user s view of the datacomputer september one record the current record is available to the datacomputer in each stream to begin formatting the subsequent record in an output stream the datacomputer transmits the current record to access the next record in an input stream the datacomputer relinquishes access to the current one operations when the user is interested in the contents of his whole file in solving the problem at hand the datacomputer s job is simple in terms of information retrieval there may be reformatting or reordering but location of the right data to operate on is trivial however this will not be the standard usage of the datacomputer particularly for the remote user for most problems the datacomputer expects to subset the file before doing anything else the larger the file compared to the subset the less acceptable it is to transact with the full file in order to form the subset and the datacomputer will have such enormous files that using anything but a very small subset in one problem is most unusual thus subsetting without examining the entire file is a fundamental requirement normally the subset will be considered formed when a list of the relevant record id s or record addresses is known the index of the datacomputer file can be thought of as a collection of primitive record id lists that the file designer expected to be useful in forming interesting subsets the values of all important fields can be indexed for example every word in a field containing a string of text might be indexed in fact an arbitrary function of the contents of the record or the relation of the record to other records can be indexed the common logical operators and or and not are defined for record subsets arbitrarily complex expressions of them can be evaluated with relatively little processor time or i o the ease of this operation results from careful design of the index and strategies the most important of which is the parallel evaluation of the boolean functions on large groups of records certain statistical operations like counting the number of records satisfying a certain boolean condition can be done directly on the index this can be used to derive question answering strategies heuristically or can be the direct input to a statistical study once the index has done all it can in subsetting attention turns to the records themselves certain conditions cannot be evaluated using the index an obvious case is the selection of records based on the winter page rfc user s view of the datacomputer september value of an unindexed field also certain data structures cannot be explicitly represented in the file record field model these must be constructed by the user out of groups of records linked by pointers or using other special mechanisms the class of operations that is useful in further record selection consists of field content testing pointer chasing simple computation in the numerical and symbolic senses and various operations below the data element level such as pattern matching string manipulation etc such operations require a control structure approaching that of the general purpose higher level language it is our intention to make all of this available though not with the goal of providing a computation facility but rather a data management facility that is capable of using as much knowledge as the programmer can supply a simple set of primitives is required for file maintenance in the data structure we are talking about the operations are add a field record delete a field record replace a field record the difficult part as in retrieval is locating the element to be operated on notice that individual record formats can be changed at will the set of possible formats is limited only by the file description when record contents are changed index entries that are a function of them must be changed also when the function determining what is to be indexed is part of the file description the maintenance of the index is automatically performed by the system otherwise this is the responsibility of the user all fields in a record can be optional variable length allowed to occur an arbitrary number of times up to some fixed limit for each field fields can be present and later be deleted from any record fields can be added to the file description at any time the only reason for limiting the flexibility of a record format is to reduce storage applications the system outlined here is intended to be suitable for many applications some examples are storage and retrieval of dumps and other unstructured files the system will happily pack away your one enormous record as quickly and painlessly as possible winter page rfc user s view of the datacomputer september applications that would normally be set up on tape sequentially accessed files that are copied over when they are changed most record formats should be able to remain just as they are if you want to operate this way the datacomputer imposes no overhead such as indexing on you the datacomputer willingly acts as unsophisticated as a tape drive it will pass your file adding and changing records as it copies them it will pull off the interesting ones reconfigure if desired and transmit them to you when you describe the data you have solved the data sharing problem for this application simple minded direct access applications the great hairy index structure neatly degenerates to imitate indexed sequential simple directly addressed files and other old standbys in the direct access world text document retrieval the indexing is made for this kind of applications in addition documents can point to subdocuments related documents etc content oriented rapid retrieval applications are the specialty of the house large data bases used for statistical analysis or modeling such as the census the common social science data bases etc applications in which data element groups such as records are related in a complex fashion and the intelligence of the datacomputer which is close to the data and remote from the computational facility can be put to good use in all of these an important consideration is size we hope to handle these applications properly on the datacomputer even when the files are of extraordinary size this rfc was put into machine readable form for entry into the online rfc archives by sandy ginoza original has hand written note in postel s handwriting received sept winter page 