 network working group c irby request for comments k victor nic sri arc july draft design for a text graphics protocol draft design for a text graphics protocol this proposal should be seen as a synthesis of existing ideas rather than an attempt to put forth new ones it is based on work by the ngg elaine thomas peter deutsch charles irby ken victor bill duvall bob sproull and others at arc parc and bbn we are concerned about the lack of text handling capabilities of the protocol suggested in rfc also we feel that the protocol will have a significant influence on the interface provided to writers of future graphics application programs and consequently that such things as beam twiddling should not be part of the protocol things of this nature address the problem at too low a level for a facility which is intended to service the needs of a wide range of graphics devices we feel that although the breakdown into levels as proposed in rfc may be expedient for initial experimentation it is inappropriate for a network standard protocol instead we propose that the protocol allow for two levels segmented and structured this allows the writers of graphics application programs to deal with a very simple display facility segments consisting of lines dots or character strings or with a powerful structure of display subroutines we propose an experimental implementation of such a scheme on the arc bbn and parc systems to test these ideas using several application programs including nls and at least an imlac ards and an e s lds environment we are trying to design a protocol used to communicate with a virtual display to operate at the other end of a wire arpanet connection from a host which is running some kind of display application program irby et al page rfc draft design for a text graphics protocol july we will adopt the terminology that the human user sitting at the display is the user and the application program is the server we wish to stress the fact that within a single application a single terminal should be useable both as an interactive graphics terminal and as an interactive control terminal thus the graphics protocol must allow for teletype like operations the need for two sets of connections for running graphics programs over the net according to our understanding is centered about the issue of handling being able to recover gracefully from berserk programs and perhaps achieving greater bandwidth through the net we recognize this problem but also think one should be able to run graphics programs using only one set of telnet connections also it seems obvious that even though one is running a graphics program one must expect to be able to handle unescorted characters not embedded in a command or response message being sent to his terminal consequently we are proposing that the graphics protocol be implemented within telnet using bit begin graphics command and end graphics command characters or the bit transparent mode of the new telnet this means that one will be able to run graphics programs with one two or more sets of telnet connections we also strongly propose that any site which is interested in supporting display terminals for use in network graphics would be prudent to implement local control over the display such as ignore graphics commands reset to tty mode commands from the user to the using host failure to take such precautions may very well lead to burned out tubes basic concepts the model the model we are adopting consists of an application program manipulating a remote display file this file may be segmented or structured in which case it may be manipulated independently from the display itself for structured display files an update display command causes the display file to get mapped onto the display in whatever fashion is appropriate for the display irby et al page rfc draft design for a text graphics protocol july part of this protocol deals with commands issued to the remote display file editor this editor creates and changes the display file at the user host structured display files a structured display file consists of named subpictures each containing any number of named units there are two types of units primitive units and call units the effect of a unit is independent of its name or creation within the subpicture primitive units contain drawing instructions and associated coordinates that may generate visible information on the display screen drawing instructions and coordinates can occur only in primitive units call units give the display structure a subroutine capability a call unit invokes the display of another subpicture in other words a call unit allows one subpicture to contain instances of other subpictures as well as providing for subroutine style control transfer call units can be used to establish display parameters and maintain parameter transparency for example a call unit can be used to call a subpicture with a translation and relative intensity setting on return from the called subpicture these parameters are restored to their original values a subpicture is an ordered list of units which can be any mixture of primitive and call units each subpicture begins with a header and terminates with the subpicture end unit the subpicture end unit is a single unique unit in a display structure linked to the end of each subpicture in order to understand how control passes through a structure one can think of the display elements as follows subpictures are subroutines and units are linked blocks of in line code when all of the units contained in a subpicture have been executed the subpicture end unit returns control to wherever the subpicture was called from a primitive unit contains display code and transfer to the next unit a call unit contains a subroutine call to a subpicture and a transfer to the next unit in line irby et al page rfc draft design for a text graphics protocol july segmented display files a segmented display file consists of named segments each containing any number of primitive units the only operations available for segmented display file is to add new delete old or replace old segments updating the actual display happens automatically the effect of a unit is independent of its name or creation order within the subpicture hosts since a given terminal may be under partial control of several different hosts all further discussion of names coordinates display files etc should be taken as relative to each individual host that is each host believes it has a display file naming and coordinate space and a set of state parameters entirely under its control its only evidence of resource sharing is that the terminal may appear to be of different sizes at different times we feel that in principle it should be processes within hosts rather than hosts that enjoy these properties but it does not seem feasible to construct a process identification scheme that all hosts will find acceptable subpictures a subpicture has a name and zero or more units subpicture names are arbitrary globally unique fixed length identifiers subpicture names are chosen by the host each unit displayable component has a name which is local to the subpicture a unit may be a primitive unit such as a string or a vector or a call unit which implies displaying a possibly transformed copy of another subpicture the display data are organized into a re entrant tree acyclic graph by the call units a unit may be visible or invisible irby et al page rfc draft design for a text graphics protocol july a particular instance of a subpicture the result of a call unit appears on the screen precisely if it and all subpictures on the logical path to it from the root of the tree are visible primitive units strings a string is a horizontal line of characters with its own mode and x y origin relative to the origin of the subpicture note intensity is always relative font and mode e g blinking information logically accompanies each character this is accomplished by means of embedded mode and font specification characters and a restore original string mode and font character note mode modifiers are non displayable characters and do not take up character positions on the screen determining the space occupied on the screen by a string requires knowledge of the font s being used this is a separate question which is dealt with later tty units a tty unit is a rectangle that consists of a number of lines within this unit the display acts as if it were an alpha numeric display e g characters which would write beyond the right hand margin of the rectangle cause an automatic line folding to take place ascii control characters carriagereturn linefeed formfeed and backspacecharacter horizontaltab and verticaltab are interpreted appropriately other control characters are displayed in a terminal specific manner e g f f etc display of the characters in the range is left unspecified at this point truncated to bits alternate fonts alternate modes irby et al page rfc draft design for a text graphics protocol july it is hoped that we can agree on a standardization of some of the characters in this range to allow for such things as greek letters common mathematical symbols super scripting and sub scripting linefolding that would cause characters to be written below the rectangle whether performed automatically or by a linefeed character etc cause the text within the unit to be scrolled upwards one line storage tube may adopt a different scheme characters are displayed in a teletype unit in one of two ways characters sent to the terminal that are not part of any command unescorted characters are appended to appropriate tty units see below use tty units tty by use of the append string to units command for structured display files the first character sent to a tty unit appears as the first character at the left margin of the top line this is necessary for a number of reasons the most convincing of which is the behavior characteristics of storage tubes and most real alpha numeric displays successive characters appear as successive characters within the top line until either an explicit e g linefeed or implicit line overflow line break occurs when a line break occurs the next character appears on the second from the top line of the unit this continues until the bottom line of the tty unit is reached at this point a line break causes the lines within the unit to scroll up one line note storage scopes may use a different technique for scrolling dots a dot unit consists of an initial x y followed by a series of points x y which describe a series of dots each dot unit logically carries mode information such as blinking relative intensity etc irby et al page rfc draft design for a text graphics protocol july lines a line unit consists of an origin x y followed by a series of points x y which describes a series of straight lines connected tail to head i e a polygon each line unit logically carries mode information such as blinking dotted vs solid invisible other kinds of lines such as conic sections may belong in the primitive set special points this primitive unit consists of a series of points which will be displayed joined by lines in the best available manner the intent is to use flegal s algorithms to produce a smooth curve device specific this primitive unit consists of any number of device specific commands the device type may be obtained through an interrogation command call units in addition to the name of the referenced subpicture a call unit may include the following transformations master instance rectangle specifies a rectangle in the caller s space into which a specified rectangle of the callee s space is to be imaged this provides independent scaling in each coordinate as well as translation and clipping rotation it may be desirable to combine this with scaling using the familiar idea of homogeneous transformation intensity and color control in principle a call could specify intensity increments positive or negative for each color it is assumed that best effort will be used in scaling and rotation of text we recommend replacing it by a line when all else fails irby et al page rfc draft design for a text graphics protocol july initial state after the initial telnet connection is established the first graphics command issued by the applications program should be a request for either a structured display file or for a segmented display file the response to this request should be whether or not the requested display file was allocated and other parameters about the virtual display e g screen size character sizes whether or not color is available etc before the display file is allocated the terminal should appear as and simulate to the best of its ability a network virtual terminal nvt any graphic commands issued before the allocation of a display file will be ignored after requesting commands and receiving a structured display file the following structure will exist there will exist a subpicture referred to as the icp subpicture whose rectangular extent corresponds to the extent of the virtual display allocated to this host there will exist a tty unit referred to as the icp tty unit in the icp subpicture where rectangular extent corresponds to the extent of the virtual display allocated to this host this tty unit will consist of n lines where n is terminal dependent and available through a query command this tty unit will be instituted for the display of unescorted characters there will be in effect an implicit call on the icp subpicture this call is not accessible to the applications program the applications program causes the display of information by creating primitive units in the icp subpicture creating call units to created subpictures in the icp subpicture irby et al page rfc draft design for a text graphics protocol july using the tty command to make visible invisible the icp tty unit or change its location or size after requesting and receiving a segmented display file the following structure will exist there will exist a segment referred to as the icp segment there will exist a tty unit referred to as the icp tty unit in the icp segment whose rectangular extent corresponds to the extent of the virtual display allocated to this host this tty unit will consist of n lines where n is terminal dependent and available through a query command this tty unit will be instituted for the display unescorted characters the applications program causes the display of information by creating primitive units in the icp segment creating new segments using the tty command to make visible invisible the icp tty unit or to relocate it or change its size display editing primitives general editing primitives request display file file type file type is either structured or segmented this command requires a response segmented display file editing segment segment if the segment segment already exists then it is cleared if it did not exist then it is created pictures are displayed within segments by the use of the primitive unit command listed below irby et al page rfc draft design for a text graphics protocol july delete segment segment if the segment exists then it is deleted primitive units all unit operations cause immediate display on the screen string unit segment mode x origin y origin text writes the specified string unit mode refers to relative intensity blinking reverse video color etc errors segment does not exist line unit segment type mode x y x y xn yn draws the specified line segments type refers to solid dashed dotted etc errors segment does not exist illegal mode dot unit segment mode x y x y xn yn draws the specified dots errors segment does not exist illegal mode special points unit segment mode x y xn yn draws the special points curve the terminal should attempt to connect the specified points in the nicest way possible e g flegal s spline curve algorithm straight line segments errors segment does not exist illegal mode tty unit segment mode rectangle lines creates a unit which will behave as a tty simulation area with lines lines distributed within the specified rectangle unescorted characters will be echoed in this unit in addition to any other units they are being sent to irby et al page rfc draft design for a text graphics protocol july errors segment does not exist device specific unit segment device commands creates a unit of device specific commands tty parameters parameters are position rectangle visible invisible number of lines mode of characters this refers to the icp tty simulation reset delete all segments except icp segment and all units of icp segment except icp tty unit resets all nodes to their initial state i e the state that existed immediately after a request display file command structured display file editing subpicture subpicture rectangle creates a new subpicture with name subpicture rectangle is the coordinates of a diagonal of the subpicture s virtual screen i e its coordinate system if a subpicture named subpicture already exists it is cleared and the new coordinate rectangle takes precedence delete subpicture subpicture deletes the subpicture named subpicture call units referring to subpicture are also deleted clear subpicture subpicture deletes all units of the subpicture subpicture but does not delete the subpicture irby et al page rfc draft design for a text graphics protocol july primitive units all the operations for creating units are transparent to the prior existence of the designated unit i e they function as replace as well as create string unit subpicture unit target key mode x origin y origin text replaces the unit by a string unit mode specifies the mode of the characters e g blinking underlined etc target key is used in conjunction with the target sensitive command and target input it may also be sent via the set target key command errors subpicture does not exist x origin or y origin is outside the subpicture s virtual coordinate system we explicitly do not require an error if the string extends beyond the right hand edge of the subpicture however the results are not defined line unit subpicture unit target key type mode x y x y xn yn replaces the unit by a line unit errors subpicture does not exist illegal mode some x or y is outside the subpicture dot unit subpicture unit target key type mode x y x y xn yn replaces the unit by a dot unit errors subpicture does not exist illegal mode some x or y is outside the subpicture special points unit subpicture unit target key type mode x y xn yn replaces the unit by a special points unit errors subpicture does not exist illegal mode some x or y is outside the subpicture irby et al page rfc draft design for a text graphics protocol july call unit subpicture unit target key called subpicture parameters replaces the unit by a call unit parameters master instance rectangles rotation mode errors subpicture does not exist called subpicture does not exist parameter errors tty unit subpicture unit mode rectangle lines creates a unit which will behave as a tty simulation area with lines lines distributed within the specified rectangle errors subpicture does not exist device specific unit subpicture unit target key device commands creates a unit of device specific commands the action of the commands should leave alone or at least restore any global modes e g the standout mode see below append string to unit subpicture unit text appends the specified text to the specific commands this only makes sense if the specified unit is a string or tty unit errors subpicture does not exist unit does not exist not a string or tty unit delete unit subpicture unit deletes a unit irby et al page rfc draft design for a text graphics protocol july visible unit subpicture unit flag makes the unit visible or invisible as specified by flag if a unit which is target sensitive is made invisible it is no longer target sensitive however in the absence of a subsequent modifying target sensitive command the unit becomes target sensitive again if it should be made visible errors subpicture does not exist unit does not exist set target key subpicture unit target key sets the target key for the specified unit to the specified value set standout mode mode sets the mode that will be used to make text and or units stand out to blinking underlining etc if the terminal does not support the specified mode the terminal should make a best effort or use another method to make things stand out standout unit subpicture unit yesno makes the specified unit stand out according to the mode set by set standout mode or not according to yesno if the unit which is to stand out is a call unit the instance of the subpicture which is the result of the call all the way to the terminal nodes is made to stand out standout text subpicture unit begin char count end char count yesno unit must refer to a string unit makes the specified text stand out according to the mode set by set standout mode or not according to yesno update structured display this causes any changes that have been made to the display file since the last update or since icp to be reflected on the screen irby et al page rfc draft design for a text graphics protocol july tty parameters parameters are position rectangle visible invisible number of lines mode of characters this refers to the icp tty simulation use tty units subpicture unit subpicturen unitn unescorted characters are to be appended only to the specified tty units errors subpicture unit does not exist reset how case how of permanent immediately resets the terminal to its initial icp state temporary immediately resets the terminal to its initial icp state without destroying the previous state restore state saved from last reset temporary direct feedback it seems extremely desirable given network speeds to allow the using host to perform direct feedback to the user without intervention from the application program in the serving host this is already done in telnet with local echoing we propose extending this capability to graphics by allowing dragging attaching a subpicture s origin to the position of the cursor tracking following the movement of the mouse stylus or light pen with a distinctive mark on the screen inking plotting the trail of the cursor on the screen and rubber banding a straight line attached to a fixed point on one end the cursor location on the other these should be seen as allowable extensions of the protocol rather than as requirements there should however be commands available in the protocol for determining their existence and controlling them irby et al page rfc draft design for a text graphics protocol july data input primitives input control target sensative key keyn arms the units which have the specified keys for target selection set input mode device parameters selects the mode in which a logical device shall produce input and under what conditions the logical devices are specified below as well as their possible input formats and conditions errors no such device keyboard input the keyboard has only one input mode in which it sends a character whenever a key is struck binary devices unless otherwise specified binary devices act as an extension of the keyboard and produce bit characters which are not distinguishable from keyboard characters by the serving host the algorithm for translating binary devices into characters is not specified but something like the nls accumulation algorithm for mouse keyset chords is intended binary devices may also input binary data according to their up down states which is transmitted on state changes examples of this type of device are function keys and overlay cards mouse and keyset used independently or together pen up pen down light pen buttons etc coordinate input coordinates may be sent according to any subset of the following criteria with every character in some designated set e g control characters or all characters with every binary device state change input after some time interval has elapsed after a position change p y y x x etc irby et al page rfc draft design for a text graphics protocol july coordinates may be sent in either or both of x y or target format x y format is just the location of the cursor relative to the screen region assigned to the host target format is the call stack logical path from the root unit the icp subpicture to the closest unit plus the target key of that unit plus the count of the closest character within the string or the closest line segment or dot or special point if appropriate target input is unavailable for segmented display files in the event of overlapping target sensitive units it is not specified which of the units selected will be returned as the hit unit time input since hosts may wish to consider two events happening sufficiently close together to be simultaneous or to keep detailed interaction statistics it must be possible to request time information to be sent with some reasonable subnet of other types of input interrogations it must be possible for the serving host to discover its environment e g screen size available devices and to read back state information display file this is very desirable both for debugging and for redirecting a displayed image to another device e g a plotter environment terminal parameters screen size and resolution available input devices terminal type for device specific control number of lines in the icp tty unit character parameters available character sizes special non ascii characters font characteristics sub and super scripting facilities state display file or display file components irby et al page rfc draft design for a text graphics protocol july cursor position it should be possible for the application program to read the cursor position at any time display file support it should be possible to find out if this user process supports only segmented or structured display files or both command support it should be possible to get a matrix from the user process which indicates which commands are implemented this is a necessity to find out which if any of the direct feedback features are supported and might be nice to allow for e g the possibility of a text only or graphics only subset of the protocol to be implemented encoding principles commands will have the format bgc opcode data egc where bgc begin graphics command places the telnet connection into a read graphics command mode opcode data is the specific graphics command and data and egc end graphics command restores the telnet connection to its normal state note this may all have to be bracketed by telnet begin bit transparent mode and end bit transparent mode commands numbers in general will have have bits of significance in each byte if the high order of a byte is on then the significant bits from the next byte should be concatenated onto the low order end of the bits collected so far etc subpicture names shall be bit numbers assigned by the serving host unit names shall be bit numbers assigned by the serving host strings shall be bit characters with an escape convention to represent changes of font and mode irby et al page rfc draft design for a text graphics protocol july since the channel is bits wide there is room for many more than displayable characters however the interpretation of codes b and above is not standardized coordinates should be as described in rfc rectangles shall be specified by the coordinates of the endpoints of one of the diagonal encoding the actual encoding of this protocol is forthcoming since we expect some changes to come about because of the upcoming network graphics group meeting we have postponed the actual encoding until after this meeting this rfc was put into machine readable form for entry into the online rfc archives by via genie irby et al page 