 network working group dave walden request for comments a s norsk data elektonikk august comments on host host protocol document no s crocker page eliminate marking instead make all regular messages into two message the first containing just the leader and indicating that the data follows in the second next message do this both from the source host to its imp and from the destination imp to its host thus no more hunting for the beginning of the data is necessary once this adjustment is made an additional simplification is available if the maximum message length is a common multiple of the word sizes of all the computers in the network perhaps bits successive messages of long files can be dropped in place without shifting page control messages should be sent to and from the control socket not over the control link the concept of the control link causes a great big unnecessary special case page assigning sockets permanently to certain network resources should be encouraged and a directory of the socket resource associations should be available somewhere in the network perhaps in physical book form at each site page links have no host host purpose other than identifying a connection so that socket numbers don t have to be included in all messages and to simplify table look ups in the ncps however since there are possibly links with the same number links don t aid table look ups very much also finding the next available link to a particular destination is very ugly therefore i suggest limiting the number of links to a total of n where n or or some other good number for all destinations in other words a particular link is only in use to one destination at a time actually from one destination at a time since the receiver picks the link to be used for a connection this change makes picking the next available link very simple and i feel is a worthwhile change if only for this reason the question of simplifying table look ups is a little more complex it is easy to use the link directly as an index into tables in the receive portion of the ncp since the receiver picks the link but a hash table or linear search or something is still necessary in the send portion of the ncp this too can be fixed with the following changes add to str a pseudo link chosen by the sender this link is sent in all non control messages in the a destination number is bits walden page rfc comments on host host protocol august bits to the right of the link in the leader the imp must preserve these bits and return them with rfnms and the receiver must use the pseudo link instead of the link in ret and inr the extra memory necessary to store the pseudo link in the ncp receive tables which are indexed by link and the link in the ncp send tables which are indexed by pseudo link is certainly less than the overhead necessary to maintain associative tables page the allocate mechanism seems very inconvenient for the receive portion of the ncp to use the receiver wants the allocation to be used up in units of the receiver s buffer size not in units of sender messages which may be variable length otherwise the receiver has a memory compaction problem page the new irregular message to make the cease mechanism work are unnecessary i think the sender can keep track probably with a one bit counter of alls and gvbs and ignore gvb s for which resume alls have already arrived this the receiver need not know whether the cease has been sent or not page if i implemented an ncp all errs would be treated like nop as an error control mechanism err is complicated and insufficient who wants to debug a complicated mechanism which only catches bugs due to the primary mechanism being undebugged the one error control mechanism i would provide is a receive process to send process acknowledgment on every message if this is not received for too long the send process can send the message again if it has been saving it this acknowledgment catches errors causing message loss at the process ncp ncp ncp host imp imp imp etc levels currently the host imp interface is particularly lacking in useful error controls i wouldn t worry about kinds of errors check sums are designed to pick up if dropped and picked up bits ever become a problem either add hardware to more interfaces or let the receive process not send the process to process acknowledgment if a software checksum does not check the page and page comments involve a change to the imp program i feel a tiny bit guilty suggesting changes i don t have to implement any more however i trust crowther and cosell will as always resist bad changes while making sensible ones the page comment is aimed at avoiding a change in the imp program this rfc was put into machine readable form for entry into the online rfc archives by luke hollins walden page 