 rfc nic categories d d data descriptive language for shared data l haibt a mullery thomas j watson research center yorktown heights n y july introduction a primary consequence of the use of networks of computers is the demand for more efficient shared use of data many of the impedements to easy shared data follow from the many diverse ways of representing and making reference to the same data almost all of these problems have been known before data was shared through computer networks but the network facility has simply emphasized the problems for convenience of discussion representation differences will be classified in three categories the first category is one of very local representation the bit patterns for the character set for fixed point and floating point numbers these differences are usually imposed by differences in cpu s and storage devices translations from one representation to another at another at this level can usually be made a unit at a time e g computer word by computer word with the most serious problems occurring when there are some values in one representation scheme which have no corresponding meaning in the other representation scheme as for expamble when trying to translate eight bit bytes to six bit bytes a second category of differences has to do with the representation of collections of data e g their size ordering and location page a third category of representation differences which is a little difficult to characterize has to do with all the more complex structures that data collections may have for example files with indexes fields with internal pointers and cross references and collections of files such as partitioned data sets and generation data sets in os the approach to coping with these problems within our project of network has been to work on the development of a descriptive language which would permit the specification of those aspects of data representation which would be subject to transformation in moving data about in a network then the network data managment system would be able to refer to the descriptions as needed in the data management function for example to a large extent one could supply two descriptions to the data manager one wich indicates how data is now represented and one which indicates how a copy of it should look and the data managment systems could invoke the necessary transformations to make the proper copy this approach to specifying data transformation contrasts somewhat with systems such as the rand form machine which provide a formalism for specifying the particular translation alogrithms for changing form one form to another the descriptor to descriptor approach seems to simplyfy the programming burden when creating new field formats neither method of specifying translations precludes the use of a network standard reprsentation structure the descriptive language assumes that data may have an inherent structure independent of other groupings such as name groupings locking groupings etc imposed on it a data structure description consists of groupings of established data value type codes the list of established data value types should be sufficient through appropriate groupings to describe any hierarchical structure of data the data type identifies how the data value is to be interpreted a list of data type codes is given below this list must be able identify each data type that may exist in a data set in any machine in the network however for data sets that contain only data types of the machine on which it is stored it is not necessary that a different code be defined for different forms of any single type that may exist among different machines the data type specified in the description along with the identification of the machine at which the data is stored is sufficient to completely describe all such forms of the data types a tentative list of machine dependent type codes compiled by page g howe and t kibler is as follows f floating point i fixed d double precision floating point c character string x complex p packed decimal l logical it is desirable to be able to construct data sets that contain either data types not allowable at the machine at which the data set is stored or possibly even types that say not exist at any machine in the network for example one may wish to store eight bit data on a six bit machine this may in principle at least be done by defining a logical data set containing eight bit bytes in terms of a real data set containing six bit characters for this however data value type descriptors have to be defined that are machine independent the basic machine independent data type is as follows b bit it is not clear at this time that any others are necessary since others can be built from this one for convenience other standard machine independent data types may later be defined two other machine independent types are useful in describing structures these are z null o omit the null type indicates that there is no data corresponding to this item however the item should be counted as existing in the structure the omit type indicates just the opposite there is data that should not be counted as an item it should be ignored page a grouping of data values is described by the list of elements of the grouping enclosed in parentheses an element of grouping may be either a data value as described by one of the data value type codes or a grouping the list consists of these elements separated by commas and indicates that the elements appear in the grouping in the order indicated for example the description c c f f i describes a data collection consisting of two subgroupings the first subgrouping consisting of two data values of type c and the second subgrouping consisting of two data values of type f followed by a data value of type i the structure of this data collection is thus a three level tree which may be shown in two dimensions as follows c c f f i properties other properties of data beyond that of the structures and composition of the data set have also to be described these may be assigned to items of the data collection where an item may be defined as an individual data value or a grouping of these by modifying the item description with the specification of the preperties that apply to it the notation that will be used will be an infix notation of the form operand operator extent where the operator indicates the property type the operand the property value and the optional extent the numer of items to which the property applies normally the property is assumed to apply to just the following item in the description if the property is to apply to more than just the following item description this is indicated by specifying a number as the extent this number indicating how many of the following item definitions at the same level the property is to apply to type the structure description of the data set is a constitutional or syntactic description of the data set in some cases it is necessary to give a discription of the use or meaning of an element for example in some complex data structures the linkages of the structures may be represented as data values in the data set thus though the more page complex data structure is represented in a hierarchical form and as a result is in a form describable by the above notation the data values that represent the linkages and their meaning must somehow he represented in the data description in order for the complex data structure to be truly described as another example one may wish ascribe to some level of the data structure the type record so that the data set can be used by some system which uses the concept record in accessing the data what an initial set of such types should be has not been deicded names items of a data structure can be given names by modifying the items description with a notation of the form name n extent depending on the context of its use the name can refer to the description itself or to the data pertaining to the named part of the description the name is assumed to be unique only within the scope of extent of the next higher encompassing name unless otherwise indicated by giving another encompassing name as the scope this may be the name of the whole data set or description for example the scope of a name is specified by preceding the inner name by the outer name or names separated by dots the name a beta indicates that the scope of the name beta is a the name applies to just the following item in the description unless otherwise indicated by including the extent parameter for exampel the description an c c bn f cn f i indicates that name a is given to the item that contains two data values of type c the name b to two data values both of type f and the name c to the last two data values one of type f and the other of type i notice that with this notation extents can overlap for example in the above description the extent of name b overlapped that of name c in a description the same name can be applied to more than one item definition either by use of the extent parameter or by actually specifying the name at each item to be included in the extent of the name if a name is multiply applied within the same scope then the name is assumed to apply to the aggregate of the items to which it has been given thus is possible to apply names to aggregates of items that are page not necessarily sequential lock during the course of processing data it may be necessary to lock out use of some portion of data to other users seqmentation of a data set into units for locking purposes may be indicated by the notation k extent whether or not the data is locked and the type of lock applied for example write protect or read write protect is specified at the time the data is used authorization authorization for a user to access data may be governed by some access code assigned to the data this access code can be specified in the description by modifying the desired elements of the description with an indication of the code the notation is code a extent control two modifiers are provided which govern the existence of items in the definition the first is the repetition modifier factor r extent this causes the following item definition or item definitions if the extent indicates more than one to be repeated thus the description rc is equivalent to the description c c c the other control modifier is the condition modifier condition c extent if the condition specified is not true then the following item definition is ignored the condition is specified by a boolean expression since several modifiers may apply to an item definition there is a problem concerning the relationship among them for example if a repetition modifier and a conditional modifier apply to an item does the condition apply to all the repeated items or only to the first page assuming the extent of the condition modifier is one the effect of multiple modifiers is dependent on the order in which they are evaluated two possible conventions come to mind one says that repetitions are expanded first then properties applied and finally conditions applied to the resulting expanded item definitions independent of the order in which the modifiers were specified in the description thus the description a c rf i is equivalent to ra c f t and if the condition is true is equivalent to f f f f i or if the condition is not true is equivalent to t the other convention is that the modifiers are evaluated in the order in which they appear in the description perhaps in reverse order the modifier immediately preceding an item definition is evaluated first then the one next preceding etc this gives more flexibility of meaning to the mulitple modifiers for example the descriptions a c rc and ra cc are not equivalent in the first only the first of the three repetitions is affected by the condition whereas in the second ll three repetitions are affected since this second convention is more flexible it shall be the one assumed this convention allows for example the repetition modifier to the applied to a named item as shown ranc the name a applies to the three items in effect the name a is applied three times this facility allows a name to be applied to a vertical column in a two dimensioned array by for example the description r c anc c page which given the name a to the second column of the x array reference named descriptions or parts of descriptions that have already been defined may be inserted into a description using the notation specification is a description the reference is used as an item definition of a string fo item definitions the item definitions used are those defined by the name given names that apply to the named item or items as a whole in the description in which it is defined are ignored by the description at which is referred however names that apply to parts of the named item are carried over to the description at which it is referred for example the description an f f i a is equivalent to an f f t f f notice that the name a was not carried over to where the description was referenced since it applied to the referred to item or items as a whole parts of a data set or description must be able to be specified for use in a reference this specification is in terms of the structure of the data set or description the specification has the form of a data set name or description name followed by modifiers which particularize to specifications to the part desired the four types of modifiers are for going down a level going up a level going frontwards along a level and going backwards down to go down a level from that previously specified the modifier has the following form item or item extent value having gone down a level the item indicates which particular item at this level is the first or only one desired this may be a number or a page name if more than one are desired then the extent indicates how many items as extent means all remaining items at that level means the first item that meets the conditions that may he get on it or subitems in following modifiers the items selected may he conditioned by their contents if a value is given then only those items with the value indicated are selected for example a specifies the first field of the first record of data set a a specified the first field of all the records of a a specifies the first two fields of the first record of data set a a specified only the first fields of all the records of a that have value and a finds the first field that has value up to go up a level from that previously specified the modifier has the following form item or item extent value going up a level specifies the item up one level that contains the item previously specified the item indicates which particular item at this level is desired where the containing item is considered the first for example a page specifies the first record whose first field has value forward to go forward on the same level as that previously specified the modifier is as follows item or item extent value this modifier is useful when an item following the one which has a certain value in a field is desired it may also be used when the data set name is really a pointer into the data set which has beet set previously pointers may or may net be described in a section elsewhere backward to go backward on the same level as that previously specified the modifier has the following form item or item extent value an example of the use of this modifier is when an item preceding the one which has a certain value in a field is desired this might be specified a this rfc was put into machine readable form for entry into the online rfc archives gottfried janik page 