 network working group steve wolfe request for comments ucla ccn nic jon postel categories d ucla nmc references document july obsoletes none we have noticed a possible deadlock situation which may arise using the initial connection protocol icp specified in document nic in the current network protocols notebook nic if on both sides one rfc is issued and a wait for match is required before the second rfc is issued it is possible that the first rfc s will not match in particular a deadlock will occur if both sides open their send or both sides open their receive sockets first briefly the icp is server user s listen on socket l u rts u l l s wait for a match u wait for match s str l u s s wait for allocation u all l m b s send data s in s bit u receive data s in s bytes as allowed by bit bytes allocation m b s cls l u u cls u l s rts s u l u str u s s s str s u s u rts u s l the labels here imply no ordering except that ordering required by the host host protocol note that steps s and s can be reversed as can u and u also notice that at any time after s the server could initiate steps s and s in parallel with steps s through s and that at any time after u the user could initiate steps u and u in parallel with step u page we recommend that the server perform steps and before waiting for the user to perform step or it is also suggested that the user issue the rfc s in steps and without waiting for the server if the user is only listening then both listens should be issued without waiting for the server if for some reason a host must delay between issuing rfc s it must issue the rfc s involving sockets s and u first this rfc was put into machine readable form for entry into the online rfc archives by robert barnes page 