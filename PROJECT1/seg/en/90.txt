 network working group request for comment nic socket conventions reconsidered athay bhushan mac bob metcalfe harvard joel winett ll may category c c c related rfcs related functional documents page rfc socket conventions reconsidered the current ncp protocol says nothing about how hosts should assign socket numbers to process ports except that the low order bit is to specify socket gender i e send or receive two recent proposals call for additional network wide conventions on the bit socket number the first proposal asks that a portion of the socket number be reserved for a network unique user number for accounting and access control the second proposal asks that the high order bits of the socket number be zero to assist smaller hosts in reducing the space required for socket number tables it is recommended that both of these proposals be set aside because a large perturbation of the current ncp protocol is required to provide adequate handles for accounting and access control and because the socket number is already underpowered for its use it is recommended that both proposals be set aside until serious consideration can be given to a major ncp protocol overhaul discussion the socket number as it is used in the current ncp protocol is a small number with a big function it will probably be found that a substantially more powerful identification mechanism e g a hierarchical naming scheme with arbitrarily long names is required to satisfactorily manipulate process ports two features of such a mechanism will be that it treats accounting and access control with the respect they deserve and that it is part of a simpler ncp protocol more easily implemented under the existing size and complexity restrictions of smaller hosts socket numbers are process port identifiers used in establishing connections between processes it is essential that they be unique to avoid ambiguity during connection it is important that their assignment to specific processes be repeatable for reconnection on a regular basis to assure that process port identifiers are unique and repeatable it is necessary to subject their allocation to access controls the simplest of access controls assuring uniqueness is that provided by ncps which check their tables of active connections for duplication when a process requests the use of a specific socket number there is real difficulty in constructing schemes for allowing socket number assignments to be repeatable some socket numbers are to be universally known and associated with processes operating with specified protocols e g a logger socket an rjb socket a file transfer socket other socket numbers might not be universally known but given to their users in a transmission over a universally known socket e g the socket pair specified by the transmission over the logger socket using the initial connection protocol icp concurrently running page rfc socket conventions reconsidered instances of a program will require distinct process port identifiers therefore socket numbers will in general need to be dynamically assigned via some system controlled allocation function there are a number of ways of providing for potentially repeatable socket number assignments one bad way is to have the ncp keep a list of all assigned socket numbers with some indication of who is permitted to use them and for how long like keeping track of magnetic tape reels if there were few available socket numbers e g bits worth this bad method or one comparably distasteful and logistically foreboding would have to be adopted with an abundance of socket numbers it is possible using sparse socket number assignment to devise simple algorithms for deciding whether a socket numbers being requested by a process can be allocated freely such algorithms might take into account the dynamic status of the socket i e its association with a currently active connection its reserved status as a standard service port address and its access control attributes in relation to those of the requesting process one good strategy for controlling socket numbers is to partition the full socket space at a host among its network users under this scheme a user could be assured of having the repeatable use of his partition it might also be helpful to designate a utility partition for use in socket number allocations where repeatability is not essential such socket numbers could be selected from the utility partition by some clever construction on the date and time it will often be the case that a program will be written to use several connections remembering that this program might find itself being executed concurrently by several processes belonging to several users it might be convenient to code with socket tags which are to be extended with runtime user and process identifier fields socket numbers will tend to be viewed should be viewed as having three fields a user field to assist in providing repeatability a process field to assure uniqueness for concurrent instances of a program and a tag field to enable the convenient referencing of multiple connections to a single process although fields will be helpful in dealing with socket number allocation it is not essential that such field designations be uniform over the network in all network transactions the bit socket number is handled with its bit host number thus if hosts are able to maintain uniqueness and repeatability internally socket numbers in the network as a whole will also be unique and repeatable if a host fails to do so only connections with that offending host are affected page rfc socket conventions reconsidered because the size use and character of systems on the network are so varied it would be difficult if not impossible to come up with an agreed upon particular division of the bit socket number hosts have different internal restrictions on the number of users processes per user and connections per process they will permit it has been suggested that it may not be necessary to maintain socket uniqueness it is contended that there is really no significant use made of the socket number after a connection has been established the only reason a host must now save a socket number for the life of a connection is to include it in the close of that connection if such is really the case then the ncp protocol might be improved by inventing a new close which uses the host line pair associated with the connection hosts which are short on space could then forget a socket number immediately after successful connection this rfc was put into machine readable form for entry into the online rfc archives by thomas nielsen page 