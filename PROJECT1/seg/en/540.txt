 network working group january request for comment jim michener mac nic ira cotton mitre references karl kelley u of ill updates none dave liddle owens ill obsoletes none ed meyer mac graphics protocol level only introduction this document reflects opinions expressed and decisions reached at the second meeting of the network graphics group held at the stanford artificial intelligence laboratory in late november it describes part of a proposed network standard graphics protocol for transmitting graphics data within the arpa network the particular aspects of the protocol covered in this document relate to the form and content of graphics information sent from a source of graphical information an application program say in the serving host to a display package for output to a graphics console at the using host this will take the form of a sequence of bit bytes and will be called the graphics output byte stream in particular only the simplest forms of graphics data will be covered in this the first version of this document the next version already in preparation will be much more complete in any case this is not intended to describe a finished protocol rather it should serve as a basis for graphics experimentation on the network this document does not include form or content of graphics input data sent from the using host to the serving host nor does it cover how the connection is established between the hosts a proposal for the former will be generated eventually by this committee the latter is the job of the connection committee of the network graphics group this rfc describes the commands which are available in the protocol in terms of the effect they would have at the receiving using host end clearly some subroutine package is desirable at the serving host for use by applications package in transmitting graphics data but on this topic this rfc does not intend to comment it may be observed by the reader that no facility is specified in this protocol allowing the using host to report logical errors in the graphics output byte stream to the serving host such a facility would have to be intergrated with the graphics input byte stream since it involves most of the problems related to synchrony of independent hosts michener page rfc graphics protocol level january background the reader should probably peruse rfc graphics meeting report by mike padlipsky to obtain some of the framework surrounding this discussion of network graphics also it might be valuable to make note of the model described in rfc network graphics by donald huff level and ground rules pertaining thereto functions within the graphics protocol will be classified into a number of levels depending partly on how difficult it is to implement those functions it is intended that any host which claims to implement the functions of level n must implement all lower levels as well thus it is envisioned that sites will implement levels incremently implementations will be improved as a continuing process to include more and more functions and it is intended that each implementation will be able to identify its own level to a graphics protocol at a remote site which is requesting a graphics interchange a side result is that each site will be able to determine its own priorities in committing programmers to the graphics protocol as opposed to other efforts it is also our intention that implementation of level n will require no knowledge of level n thus a site can implement a level in the reasonably firm knowledge that no changes at higher levels will alter the level implemented at some time it may be decided by the network graphics group to redefine a level which has previously been firmed up it is not our intention that this shall happen but one must recognize that the proposed graphics protocol is experimental and may have to be changed one further ground rule a stream of commands and data which is valid at a given level k shall produce identical results on any interpreter of level k or higher by this we mean that as defined operations similar pictures should result aspects of the protocol which are not strictly defined at this time include character size character position relative to the beam how control characters in text output affect the terminal and what happens when the beam is moved or a line drawn outside of the logical screen boundary this rule forces upwards compatibility so that an application written using features of low numbered level will still work at sites which have moved on to implement higher levels additionally any aspects of this protocol which are explicitly left unspecified in the detailed operations descriptions below shall be explicitly specified in any public description of an actual implementation we now describe the framework which will be common to all levels michener page rfc graphics protocol level january basic data forms information in the network standard graphics protocol will be expressed as a sequence of bit bytes a command will consist of a command byte followed by zero or more arguments the same command byte will always take the same number of arguments in the same form the length of each argument may be fixed or variable depending on the argument a simple type of argument is a value which is an bit integer another type of argument is a string which is a count followed by count number of bit bytes if the count is between and it is sent in a single byte if the count is between and means exponentiation it is sent in two bytes with the high order bit of the first byte set to one the first byte contains the seven high order bits of the number and the second byte contains the eight low order bits a string is the only type of argument of a command which can vary in length coordinate data engendered considerable discussion at the second network graphics group meeting it was decided that a two dimensional logical coordinate system was required and each interpreter for the graphic command byte stream would be responsible for mapping this coordinate system to physical device coordinates it was decided that data in the logical coordinate system would be in twos complement notation that it would be fractional that each edge of the screen would have unit length and that the origin would correspond to the center of the screen on the output device the vertical horizontal edges of the screen of the output device correspond to the lines x y or x e where e is a small positive number determined by the precision of the fractional data particularly the points e e and e e shall be visible points at the corners of the logical screen in the case of a non square display surface the implementer may make his own decision but it is recommended that the largest possible square area be utilized thus we shall say that the logical coordinate system contains points whose coordinates range from to a little less than commands which take coordinate data will be available in various modes in absolute mode a position is specified by giving its coordinates in the logical coordinate system in relative mode the difference between the coordinates of the position and the coordinates of the current position must be specified thus a michener page rfc graphics protocol level january coordinate datum which is an argument for an absolute mode operation should be in the range to e while one for a relative mode operation should be in the range e to e interest was expressed at the second graphics group meeting in eventually allowing a very large coordinate space many bits of precision in each fractional coordinate this is to be done by permitting the length in bit bytes of each coordinate datum to be set as a mode it was decided at the meeting that two bytes per coordinate would suffice for now thus e in the above discussion is one in the least significant bit of a bit plus sign fractional coordinate text data will be transmitted as an argument of various commands for display on the output device network ascii will be used to represent characters at the lowest levels of the protocol only one character size will be available whatever is normal on the display device if the device had no normal size characters per line would be desirable later variable character size may be introduced also at the lowest levels control characters will be passed along to the device for it to do the best it can however the consensus of the graphics meeting was that at some reasonably low but non zero level carriage return line feed and backspace should be interpreted to do the right thing command codes each command in the graphics protocol will be assigned a non negative value which will represent this command in the byte stream the algorithm whereby values and commands are associated is it turns out a very touchy subject there are five or ten different criteria for a best algorithm each criterion different in emphasis this gordian knot will be cut in this proposal by ordering the commands approximately according to level and then just numbering them in addition if several closely related commands occur at the same level some attempt will be made to encode variations of meanings in terms of bit configurations even if some later consideration causes a change in ordering to be proposed it is this committee s feeling that the numbering should not be altered however until this matter is firmly settled it is strongly advised that any implementation take into account the possibility of reassignment of command codes michener page rfc graphics protocol level january particular proposal for level protocol it is proposed that level be kept very simple this is so that implementation can be quickly accomplished and experimentation with the protocol begun another reason is that the least powerful hosts and even programmable terminals should be able to implement it in accordance with this the rule was made that a command be implemented only if the output is a function solely of the current command and the beam position current at the start of the command in other words the interpreter for level need have no internal storage for modes or pushdown stacks with this restriction it is hoped that a very simple implementation will be possible for level in particular perhaps one could eventually build a hardware translator from level code to one s own particular terminal s code note that in the opcode assignment for level bits and have special meaning for the move line and dot commands in particular the bit encodes absolute versus relative data mode the bit encodes whether any visible output occurs and the bit determines whether the visible output is a line or a dot level command summary the following is a list of commands and their syntax in level zero detailed descriptions of these commands follow in the next section commands dealing with protocol may be added by the connection committee they currently request opcodes in the range to as described in basic data forms above and are two byte coordinate values is a count followed by count many bytes and is an eight bit number decimal octal binary format null erase screen and reset beam move absolute move relative draw absolute draw relative dot absolute dot relative text textr end of picture escape michener page rfc graphics protocol level january level command descriptions null statement null this statement has no arguments and no effect either erase screen and reset beam to origin erase this command indicates that a new picture is about to be drawn it should always be eventually paired with a following end of picture command move beam invisibly to absolute position move absolute nothing is drawn the beam is positioned to the specified absolute x y position move beam invisibly by relative amount move relative nothing is drawn the beam is shifted by the specified amount in x and y draw line to absolute position draw absolute a line is drawn from the current beam position to the specified absolute x y position draw line to relative position draw relative a line is drawn from the current beam position to the position delta x and delta y away display a dot at absolute position dot absolute the beam is moved invisibly to absolute position x y and a dot is displayed there display a dot at relative position dot relative the beam is moved invisibly by the specified amount in x and y and a dot is displayed there display text text at the current beam position display some characters at the normal size for the device being operated consists of a followed by count many characters if there is no normal size choose the size so that seventy two characters are displayed per line the characters in the string are coded in network ascii all codes between and decimal inclusive are permitted at level zero what happens to control characters is michener page rfc graphics protocol level january left unspecified where the beam is following execution of this command is left unspecified except that another display text command immediately following will append its text to the previous string the use of the text command is discouraged use textr instead the position of the first character relative to the initial beam position is left unspecified display text and restore beam textr at the current beam position display a string of characters at the normal size for the device being operated then reposition the beam to where it was before the command consists of a followed by count many characters if there is no normal size choose the size so that seventy two characters are displayed per line the characters in the string are coded in network ascii all codes between and decimal inclusive are permitted at level zero what happens to control characters is left unspecified the position of the first character relative to the initial beam position is left unspecified end of picture endpic this command denotes the end of a new picture it must be paired with a preceding erase command escape to device specifics escdev if value is the code assigned by the protocol committee to the device being operated then transmit the eight bit bytes in which starts with a indicating the number of bytes to the device without examining them otherwise ignore this command if the device does not accept bit information reformat the data in some device specific way an example would be throwing away the high order bit for a seven bit device or gathering bit bytes into one bit word again discarding the high order bits perhaps the action of the bytes in the string should leave alone or at least restore any hardware beam position registers in the device which the interpreter might conceivably depend on this command really should not be used it was included at level so that specific applications can do mode setting and other device specific manipulations for example ards terminals may optionally have several independently addressable output scopes the selection mechanism changes state only when a particular sequence of ascii characters reaches the terminal thus escdev would be used to select which scopes s is are to be affected by following commands the current state is invisible to the graphics package at the using host further suppose that another make of terminal has a similar michener page rfc graphics protocol level january option which responds to a different code sequence this possibility is the motivation for conditionally ignoring the escdev command based on the specified given that a particular application will only be used to output to either an ards or this second make with the multiple scope option then the application could always send two escdev commands one applicable only to ards terminals and the other applicable only to the second make michener page rfc graphics protocol level january appendix bnf for the graphics protocol byte stream key to below non terminals are represented in terminals which are keywords standing for particular eight bit values are in capitals terminals whose meaning should be clear to the reader are in lower case note that empty string means zero bytes and not a whose is zero empty string empty string erase escdev null endpic movea mover drawa drawr dota dotr textr text singed two s complement fraction in range to less than signed two s complement fraction range strictly between and michener page rfc graphics protocol level january count bit bytes bit integer this rfc was put into machine readable form for entry into the online rfc archives by kelly tardif viag nie michener page 