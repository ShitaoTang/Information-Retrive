 network working group a bhushan request for comments n ryan nic mit ptd dms october using mit mathlab macsyma from mit dms muddle an experiment in automated resource sharing i introduction this paper describes an experiment in non trivial automated resource sharing between dissimilar systems the goal of the experiment was to interface the muddle system at mit dms host to the macsyma system at mit mathlab host in such a manner that the muddle user at mit dms is not required to know anything about the arpanet mathlab or even macsyma in fact the user need not be aware that part of the computation is performed by macsyma on the mathlab computer this experiment differs from the mathlab ucsb ols experiment ref nwg rfc nic mit mathlab meets ucsb ols by parrish and pickens in several important respects first the use of the remote network resource is completely automated the human user does nothing more than use a function in muddle such as integrate which requires the remote macsyma resource for computation the program performs all the required tasks of connecting to mathlab log in and using macsyma in the ucsb ols experiment the user had to manually connect to mathlab login use macsyma type the input in a form suitable for macsyma save the results in a file at mathlab disconnect from mathlab start a retrieval job at ucsb to retrieve the saved results and finally submit the results to a local program second the use of the remote resource is completely integrated into the local muddle system the user can specify the computations in a form that muddle understands the resource sharing program whose existence the user need not be aware of does the translation from the muddle prefix form to the macsyma infix form on input and vice versa on output this ability allows the macsyma resources to be completely integrated into muddle to the extent that parts of the same computation can be performed by macsyma and others by muddle ii the macsyma and muddle resources before proceeding to describe the resource sharing facility a description of the two resources macsyma and muddle is in order the macsyma system at mathlab is a powerful resource for symbolic manipulation of algebraic functions it can among other things bhushan ryan page rfc using mit mathlab macsyma from mit dms muddle october perform symbolic integration and differentiation expand series perform laplace and inverse laplace transforms solve equations and systems of equations and simplify rational functions a description of macsyma s capabilities is given in the macsyma users manual available from the mit mathlab group at project mac the muddle system provides a general purpose environment suitable for automatic programming graphics data management networking and mathematical computations the muddle language represents a powerful extension of the list processing language lisp in the area of data types such as strings vectors uniform vectors and user definable types muddle is described in some detail in the muddle primer sys by greg pfister available from the programming technology division at project mac muddle has extensive graphical and numerical computation facilities the user can display graphs on ards and imlac type consoles and on the evans and sutherland e s display system the muddle console graphics provide a facility to view graphical representation of functions with overlay capability and automatic scaling that can be controlled by the user the e s provides the user with a versatile tool for studying the dynamic characteristics of graphs curved surfaces and other three dimensional objects the combination of macsyma muddle and the e s graphics capabilities represents a very powerful resource for problem solving that is integrated and made easily usable by the resource sharing facility iii the automated resource sharing facility the resource sharing facility described herein uses the most easily accessible communication path to macsyma the telnet connection to the logger service on socket no modifications were made to macsyma nor were any special programs created on the mathlab computer the entire task of resource sharing is performed by programs in muddle let us say on the outset that we are not advocating this mode of usage for automated resource sharing a resource sharing protocol that allows convenient use of remote resources via programs is a far more reliable and efficient way but that requires work on the part of server sites the existing protocols and systems ftp rje rsexec and the datacomputer cater to a limited subset of easily managed resources we register here our desire for uniformity which alas is lacking in the current systems and work along the direction of general purpose resource sharing in the absence of a general resource sharing protocol and a macsyma server to go along with it at mathlab the telnet connection is the best a user can do bhushan ryan page rfc using mit mathlab macsyma from mit dms muddle october the resource sharing facility comprises of several independent but integrated parts these are connecting to mathlab login and invoking macsyma conversion of muddle s prefix to macsyma s infix form generation of macsyma input interpreting macsyma s results including errors and comments macsyma infix to muddle prefix conversion plotting graphs for the functions allowing human intervention if desired disconnect from macsyma the user assuming that he has loaded the necessary programs in muddle to integrate the function x has only to type where represents the ascii character or muddle will then return the following result alternatively if the user wishes to use the infix form he can type and the corresponding answer returned by muddle would be x the following sequence of events takes place when integrate or any other function that uses macsyma is used if the user isn t already communicating with a macsyma the program keeps track of the connection a connection is established to mit mathlab the user is logged in automatically by program using the user s identification and a macsyma is initiated a prefix to infix conversion is performed and the following input is sent to macsyma using the above example string integrate x x the program then interprets macsyma s output recognizing error responses and comments and extracts the result if no error is encountered the result which is in infix form is then converted to the prefix form which is returned by the muddle function integrate bhushan ryan page rfc using mit mathlab macsyma from mit dms muddle october the integrate function takes an optional argument the variable with respect to which the integration is be performed the syntax for the function is where expr is any expression of the type string or quoted form the optional argument in square brackets var must be of the type string enclosed by double quotes the syntax of other functions is where times is the number of times the expr is to be differentiated and maxposex and maxnegex control the maximum positive and negative integer exponent to be used in expansion the default value for var is x for times is and for maxposex and maxnegex is each the user can use the result returned by muddle in any of his computations including drawing a graph for example typing x to muddle will draw the graph y x on the imlac or ards screen with values of x from to assuming the user has the graphics package and the right imlac program loaded the same graph would be drawn if the user typed x where iparse is the muddle function that converts infix to prefix form the corresponding function for prefix to infix conversion is uniparse the details of using the macsyma resource sharing facility may be gathered from the annotated script of the example given in section v of this paper iv capabilities and limitations the program tries to be helpful to the user as much as possible for example if for some reason the mit mathlab computer is not available the macsyma service at the mit ai computer is procured it should be mentioned that though the program is fairly capable in retrieving results recognizing error messages and separating comments its recognition is not fool proof the program only makes bhushan ryan page rfc using mit mathlab macsyma from mit dms muddle october an educated guess as to where the answer lies it is not as clever as a human user sitting at a console who can filter out such messages as system going down and communication from another user console link if they were to appear in the middle of the result this points to one of the pitfalls of using a facility via a program that is basically designed for use by human users the program reliability can be marginally improved by asking macsyma to print special characters before and after the results it sends but again this is not fool proof for example the following input to macsyma block ans print ans diff x x print string ans print return ans will cause macsyma to generate the following output x d x from the above output the answer x can be easily extracted the resource sharing program does however recognize the so called unintegratable functions such as exp x and gives the correct error response normally the user is in terse mode and does not see the interaction between macsyma and muddle to see the interaction the user must enter verbose mode by typing to muddle to return to terse mode the user types the user can also if he is proficient in use of macsyma communicate directly with macsyma at any point by typing bhushan ryan page rfc using mit mathlab macsyma from mit dms muddle october to muddle the telcom feature may be useful if the user wishes to see what is going on or wants to examine the macsyma computations by entering the lisp environment typing to macsyma to return to muddle and the automated environment the user first escapes to muddle by typing and then types to muddle if the user types after escaping to muddle from telcom mode he will be returned in direct communication with macsyma if the user discovers that his macsyma is hopelessly confused or if he wishes to start a new version of macsyma he must type to muddle which will disconnect him typing or using any of the functions that use macsyma will connect him to macsyma again currently muddle recognizes and takes action as described above whenever differentiate integrate expand simplify and integrate simplify integrate and simplify functions are encountered but it is quite easy to generate programs for other operations such as laplace transforms and solving equations the prefix to infix conversion and vice versa works for all mathematical forms we have encountered so far in our short experiment an alternate way to utilize macsyma s capabilities would have been to use it in the lisp environment by constructing a suitable interface between lisp and muddle such an approach would avoid the multiple conversions from prefix to infix form and vice versa but other perhaps more difficult conversions would be required v example the following scenario describes the use of the resource sharing facility the facility is accessible in the muddle system at mit dms the interaction between muddle and macsyma normally not visible to the user is also shown here in verbose mode so that the reader may gain a better understanding of how the program operates it should be noted that the graphs will be plotted only if the user has loaded the graphics package and is on an imlac or ards console we would also like to stress that this scenario is not intended to demonstrate the full capabilities of macsyma or of muddle but only to illustrate the resource sharing facility scenario for using the muddle macsyma facility bhushan ryan page rfc using mit mathlab macsyma from mit dms muddle october in the following scenario user input is underlined and our comments are preceded with a semicolon represents a carriage return and represents or alt mode the user is assumed to be logged in at mit dms host note that the input should be typed exactly as shown as muddle distinguishes between upper and lower case characters please refer to the muddle primer sys by greg pfister for a description of the muddle system and to muddle console graphics user guide sys by neal ryan for a description of the graphics package both documents are available from the programming technology division at project mac muddle get a muddle is monit prompt muddle in operation listening at level process load the program from muddle directory metmudgin gout gin gout harmless comments from muddle done x please be patient macsyma loading may take time macsyma at mit mathlab comments from the program the result is a muddle form sin fasl dsk macsym being loaded loading done comments from macsyma schatc fasl dsk macsym being loaded loading done x x the answer again the input is in infix form log x x atan x sqrt sqrt log x the answer now is in infix form x x x x x x x we get back the original expression x x x x x bhushan ryan page rfc using mit mathlab macsyma from mit dms muddle october risch fasl dsk macsym being loaded loading done error program recognizes that macsyma cant integrate couldn t integrate listening at level process to get back to level listening at level process we disconnect here to show the verbose mode the program disconnects automatically on quitting connections closed now you will be able to observe muddle macsyma interaction now please be patient macsyma loading may take time mit mathlab pdp stelnt ml its ddt users login guest the program uses user s sname guest here macsyma this is macsyma see update macsym for changes fix dsk macsym being loaded loading done c macsyma at mit mathlab the program announces macsyma string diff x x and sends input in infix form d x x the output is in muddle prefix form c string integrate x x x sin fasl dsk macsym being loaded loading done schatc fasl dsk macsym being loaded loading done d x log x x the output again ok back in terse mode now to load graphics program imlac answer y or n y for graphics on an imlac bhushan ryan page rfc using mit mathlab macsyma from mit dms muddle october done x to graph function sin x graph on figure to graph diff of sin x see graph figure to graph integral of sin x see graph figure to quit from program and muddle kill semicolon prompt from monit bhushan ryan page rfc using mit mathlab macsyma from mit dms muddle october fig graph for sin x diff sin x and integrate sin x ooo ooo o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o ooo ooo this rfc was put into machine readable form for entry into the online rfc archives by graeme hewson bhushan ryan page 