 network working group r watson request for comments sri nic november some thoughts on system design to facilitate resource sharing introduction there is a growing interest in moving toward more resource sharing on the arpanet some resource sharing has been taking place by having systems open telnet connections and generating user command strings i think that this is fine for experimental use but is not the way we want to operate in real usage what i believe network system builders should do is to develop mechanisms appropriately designed for computer computer communication system interconnection an approach the goal i would like to see us move toward is to view all systems on the network as offering certain service modules any subset of which can be combined in building other systems each service module would have a well advertised set of primitive service capabilities that it could provide it would have documented commands at the level of present telnet or ftp commands for gaining access to its services it would also have a defined network connection procedure then any system builder wanting to avail himself of these services could do so and integrate them into his own user interface environment at the present time when a system is built the system builders tend to see it as a stand alone thing or at most something to be used within a specific environment what i would like to see fostered is the idea that any system built is not only a stand alone environment but also a network service or set of services the builders would define not only a user interface for their environment but also a set of primitives and primitive commands that can be accessed by other systems around the network to get that service performed for example we are redesigning the nls journal in light of our experience and that of network mail as a set of protocols and services if one looks at the processes of the nls journal one can see a number of separate services that could be provided by different network sites or combined in varying combinations by a single site these being distribution identification of addressees and maintainance of the required data bases being a related service recording numbering and storing of items cataloging and retrieval watson page rfc system design for resource sharing november at the moment these services are fairly tightly interconnected in the nls journal and what we want to do is to decouple them and define their intercommunication by protocols that would allow them to be distributed in different hosts on the network mechanisms would also be defined for the several hosts performing similar services around the network to work together cooperatively as a further example there are also other services that nls could probably provide such as structured file creation and manipulation information portrayal online or in hardcopy database querying etc however at the moment the system is not explicitly structured from the point of view that outside systems could come into it anywhere but at the human user interface even though internally it is quite modular it would be straightforward for us to identify those nls services that other system builders might possibly be interested in incorporating into their systems with their own user interface and then to do the restructuring and primitive command definition necessary other groups building systems on the network could perform a similar examination cca on the other hand as i understand it has taken this point of view from the beginning namely building the datacomputer on the assumption that it is primarily a network resource and is to be used by other systems bbn is also moving in this direction in the design of distributed tenex there is nothing new in the above ideas they come from generalizing past successes we have all had with network protocol development and with good software engineering practices it will however take a change in the thinking of system designers some concrete examples and ongoing dialog to make such a design philosophy the normal network way of life some functions ready for interconnection the area of dialog support may be the first area ripe to create such a synthesis with the several systems in or coming into existence each solves part of the problem with some overlap the dialog support systems on the network known to me are the nls journal supports recorded and cataloged dialog and linked networks of documents and messages nls screen linking and splitting supports close collaboration of two or more people working together in real time in nls watson page rfc system design for resource sharing november the network wide linking of terminals through bbn s rsexec tenex sndmsg and readmail and other mail systems support nonrecorded dialog and further manipulation of received messages some interconnection between nls and these facilities has been established the communication system under design at usc isi to support a range of message services the online conferencing system being built by jim calvin of case john iseli of mitre and others supports online conferencing of several members and has facilities to utilize various tenex subsystems such as teco and nls to support conferees the hack system of case offers a bulletin board service the forum system of iff supports online and distributed in time conferencing and other features other areas possibly ripe for synthesis are file and data management and information retrieval services editing and hardcopy portrayal with systems like tenex runoff su ai s pub and sri arc s output processor if the salient service features concepts goals of each could be defined clearly and appropriate service primitives as per other arpanet protocols could be defined for each anyone wishing to incorporate that service with a user interface appropriate to his environment or philosophy could do so system interconnection issues related to the above proposal there are many detailed issues related to system interconnection as proposed above a number seem worth mentioning here types of network connections the number and type of network connections to be opened between classes of cooperating processes can probably be systematized one of the important elements of the ftp and graphics protocol efforts was to define the number and type of connections necessary for these classes of transaction similar classification and connection definition will be required for other types of processes watson page rfc system design for resource sharing november data structure translation the whole area of translation and transfer of data structures more complicated than sequential files needs vigorous thought and protocol development systems built around sequential files are presently dominant on the arpanet and provide a base for simple useful economical tools i however do not believe that the longer run tool sharing can depend on communication between sequential files but requires structured files experience with nls tree structured files shows that even this level of structuring may be inadequate for many uses and more sophistication may be required a similar trend exists in work with computer graphics and generalized data management systems developing protocols for handling structured data bases or agreement on common structuring characteristics seems an important need responsiveness factors influencing responsiveness to users in an environment of heavy geographically separated resource sharing need determination and discussion documentation of system interfaces it is probably reasonably straightforward to define service interfaces but they will be useless unless their activating command languages and other conventions are well documented and this documentation is kept up to date accounting a very difficult problem once you interconnect systems at lower levels is to design an appropriate network accounting and banking system that will not cause undue delays in accessing distributed resources error handling we need to develop mechanisms for passing error signals around when system environments are crossing machine boundaries standard parameter formats data types such as strings integers floating point numbers arrays pointers etc need to have standard representations defined for passing parameters back and forth between machines watson page rfc system design for resource sharing november help at the procedure call level a help mechanism needs to be defined in the protocols to provide information that each designer can translate to his user interface standards for requesting help information and structuring help data bases needs agreement acknowledgement i wish to acknowledge the useful suggestions of charles irby and jim white in the thoughts above watson page 