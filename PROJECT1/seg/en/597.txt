 network working group s crocker request for comments march protocol notes i overview the network protocol provides three facilities connection establishment flow control reconnection reconnection is considered separately from connection establishment partly because of the complexity of reconnection and partly because i don t have enough experience with the protocol to present these concepts in an integrated fashion connection establishment connection establishment works essentially the same as in nwg rfc the major change is that a more general form of switching is provided independently of establishment so establishment is simplified by not including switching procedures a rough scenario for connection establishment follows process pa in host a grabs socket sa and requests connection with socket sb process pa accomplishes this through a system call concurrently with the above process pb in host b grabs socket sb and requests connection with socket sa in response to process pa s request the network control program in host a referred to as ncpa sends a request for connection rfc command to host b ncpb in host b sends a similar command to host a no ordering is implied ncpb may send the command to ncpa before or after receiving the command from ncpa ncpa and ncpb are both aware the connection is established when each has received a rfc command and each has received the rfnm for the one it has sent they then notify processes pa and pb respectively that the connection is established crocker page rfc protocol notes march one of the rules adhered to is that either sa is a send socket and sb is a receive socket or vice versa this condition is sometimes stated as sa and sb must be a send receive pair the sending process may now send flow control in order to prevent a sending process from flooding a receiving processes it is necessary for the receiving process to be able to stop the flow flow control is integrated into the network rfnm handling when a receiving host wishes to inhibit flow on a particular link the host sends a special message to its imp which causes the next rfnm on that link to be modified the sending host interprets this message as a rfnm and as a request to stop sending a confirming control command is returned when the receiving host is ready to receive again it sends a command rsm telling the sending host to resume sending reconnection for a great many reasons it is desirable to be able to switch one or both ends of a connection from one socket to another depending upon the restrictions placed upon the switching process it may be easy or hard to implement to achieve maximum generality i present here a scheme for dynamic reconnection which means that reconnection can take place even after flow has started it may turn out that for the majority of cases this scheme is much more expensive than it needs to be however the following virtues are claimed all various forms of switching connections are provided reconnection introduces no overhead in the processing of messages sent over a connection i e the whole cost is borne in processing the protocol bb n argues that unlimited buffering should be provided it is possible that this would be a proper strategy but it is foreign to my way of thinking and i have based the protocol design on the assumption that only a small buffer is provided on the receive end of each connection crocker page rfc protocol notes march ii data structures connection table process table input link table output link table link assignment table connection table this holds all information pertaining to local sockets particularly whether a socket is engaged in a connection and if so what state the connection is in entries are keyed by local socket but other tables have pointers into this table also see the process table input link table and output link table each entry contains the following information a local socket key b foreign socket c link d connection state e flow state and buffer control f pointer to user s process g reconnection control state h queue of waiting callers the local socket is a bit number if no entry exists for a particular socket it may be created with null values the foreign socket is a bit number this field will be unassigned if no connection is established the link is an bit number and is the link over which data is sent from the sender to the receiver a socket is a receive socket iff its low order bit is zero connection state refers to whether a connection is open or not etc the following possibilities may occur a local process has requested a connection b foreign process es has have requested a connection c connection established d reconnection in progress e close waiting f reconnection waiting crocker page rfc protocol notes march flow state and buffer control refer to checking for rfnm s sending and accepting cease suspend and resume commands and keeping track of incoming or outgoing data a pointer to the user s process is necessary if the process has requested a connection if reconnection is in progress it is necessary to keep track of the sequence of events a socket engaged in reconnection is either an end or a middle if it s a middle it is necessary to store the eight bit name of the other middle attached to the same process and to record receipt of end and rdy commands finally if rfc s are received either when the socket is busy or when no process has engaged it the rfc s are stacked first in first out on a queue for the named local socket process table this table associates a process with a socket it is used to process system calls input link table this table associates receive links with local sockets it is used to decide for whom incoming messages are destined output link table this table associates send links with local sockets it is used to interpret rfnm s and rsm commands link assignment table links are assigned by receivers this table shows which links are free crocker page rfc protocol notes march iii control commands command summary or commands no operation form nop nop is x purpose this command is included for completeness and convenience request for connection form or is x is a bit socket number local to the sender is a bit socket number local to the receiver is an eight bit link number and your socket must be a send receive pair is included if and only if is a receive socket purpose this command is used to initiate a connection when two hosts have exchanged rfc commands with the same arguments reversed the connection is established links are assigned by the receiver crocker page rfc protocol notes march close form is x and are the same as for purpose this command is used to block a connection it may also be used to abort the establishment of a connection or to refuse a request it may happen that no connection between the named sockets was established or was in the process of being established in this event the should be discarded resume form is x purpose this command is sent by a receiving host to cause the sending host to resume transmission on the named link a sending host suspends sending if it receives a special rfnm for some message special rfnm s are generated by the receiving imp upon request by its host suspended form is x purpose this command is sent by a sending host to acknowledge that it has stopped sending over the named link transmission will resume if a command is received final end form is x is a bit socket number of a socket local to the sender is a bit socket number of a socket local to the receiver and form a send receive pair a connection should be established between them is a bit socket number of the same type as crocker page rfc protocol notes march purpose if a process decides to short circuit itself by connecting one of its receive sockets to one of its send sockets the ncp sends out two commands one in each direction each one has initialized to upon receiving an command the ncp checks its if is already engaged in a reconnection the command is passed on with a new and however before it is passed on the is compared with the new if they are equal a loop has been detected and both sockets are closed if is not engaged in a reconnection it is marked as the end of a chain of reconnections and an is sent back if the connection named is not in progress a is sent back and the is discarded end found form is x is an bit link is a bit socket purpose this command indicates which socket is at the end of a chain of reconnections it is generated at and passed back to the other terminal socket via all the intermediate sockets if is a send socket refers to a connection with the send socket in the sending host and the receive socket in the receiving host if is a receive socket refers to a connection with the send socket in the receiving host and the receive socket in the sending hose sending end receiving refer to the transmission of this control command crocker page rfc protocol notes march ready form is x is an bit link number purpose this command is sent from a send socket to a receive socket to indicate that all messages have been forwarded and that reconnection may occur assign new link form is x purpose this command completes a reconnection it is sent from a receive socket to a send socket after the receive socket has received a a new link is assigned and transmission commences this rfc was put into machine readable form for entry into the online rfc archives by marc blanchett crocker page 