 network working group s crocker request for comments january nic ucla proposal for a network standard format for a data stream to control graphics display a typical arrangement of facilities is to have a console attached to a computer at the user s site and to be using the computational facilities of a remote site information entered by the user is transmitted to the remote host and output from the remote host is transmitted back to the local user in this proposal i am concerned with specifying the form of the output stream for the case that the output portion of the console is a typical refresh display with point vector and character drawing capability devices in this class include the dec dec ibm and imlac pds it must be understood that this proposal is illustrative only and knowingly avoids important issues its main purpose is to provide a basis for dis cussion and development in order to specify the semantices of the network standard graphics data stream ngds i will postulate a network standard display list ngdl a network standard stream interpreter ngsi a network standard list interpreter ngli also called the display controller and a network standard screen ngs page the ngds is accepted into the local host and interpreted by the ngsi the ngsi is a process which modifies the ngdl according to inputs in the ngds the ngdl is the display list for the ngli the ngli executes the ngdl and controls the beam which writes on the ngs the ngs is square has horizontal and vertical sides and positions on it are specified by an ordered pair of unsigned bit fractions the first fraction specifies the horizontal distance from the left hand edge and the second specifies the vertical distance from the bottom edge the resolution of the screen is unspecified the lack of specification of the resolution of the ngs is intentional programs designers should not interpret this to mean that they may impose a particular requirement on the using system thus the quality of the displayed picture should degrade gradually with decreasing resolution the ngli has primitives for moving the beam to a particular point intensify ing a point drawing a vector or drawing a character characters are assumed to be not more than screen width wide and not more than screen height high when the beam is moved to a screen position before drawing characters that position should be at the lower left hand corner of the first character drawn the beam position after drawing a character is immediately to the right of the character properly positioned for another character however after drawing one or more characters the exact horizontal page position of the beam is unspecified the imprecise specification of character size is intended to take cognizance of the existance of character drawing hardware which is capable of producing only one or a few character sizes the particular proportions of wide by high provides for characters to a line and lines and seems well within the capability of most displays in the class considered as in the case of screen resolution variations in character drawing hardware should cause only minor degradation in the usefulness of the picture the character set intrepreted by the ngli is ascii excepting all form control characters but including the space character the tab return and line feed functions should be simulated by explicit positioning of the beam the ngdl consists of a set of named and possibly null lists the names are bit integers and the name zero is the name of the chief list each list is composed of zero of more display items an item is any of the following page a move beam to xxxx yyyy relative to current origin b display vector from current position to xxxx yyyy relative to current origin c display current point d display the following n characters c c c n e execute list gggg with origin xxxx yyyy relative to current origin the ngli is constantly in a loop executing the chief list the origin of the chief list is always when the ngli comes to the end of the chief list it returns to the top of it when the ngli encounters a type e item it suspends execution of the current list set the new origin to and executes the list named gggg when finished with the list the old origin is restored and execution of the old list resumed the ngli is therefore a recursive interpreter and type e items are subroutine calls there remains only the matter of the ngds and the ngsi the ngds is parsed into commands by the ngsi and each command is executed as soon as it is recognized the commands in the ngds are in prefix form consisting of an eight bit operation code followed by any arguments only two commands are defined erase and replace the erase command consists of a single zero valued opcode and no arguments the ngsi executes the erase command by making all lists into null lists page this erases the screen the replace command has an opcode of followed by a bit list name followed by an bit subargument count followed by the indicated number of subarguments the ngsi executes the replcae command by deleteing all items from the indicated list and rebuilding the list from the subarguments there are five kinds of subarguments corresponding to the five item types page n and are bit bytes valued at respectively and corresponging to the item types listed on page and are bit numbers is a bit list name is an bit count is an ascii character code this rfc was put into machine readable form for entry into the online rfc archives by anand kumria page 