 network working group request for comments nic output of the host host protocol glitch cleaning committee ucla march robert bressler steve crocker william crowter gary grossman ray tomlinson james withe page introduction the host host protocol glitch cleaning committee met for the second time at ucla on march after canvassing the network com munity the result of the slightly larger committee s first meeting are documented in rfc the committee agreed on several modifications to the protocol in document these modi fications are listed below at each of the meeting the committee quickly treated all but one of the extant topics at the first meeting the bulk of time was spent considering the interrupt mechanism and that discussion is summarized in rfc at the second meeting the committee spent almost all of its time discussing the notion of bytes this dis cussion is summarized after the list of modifications this rfc entirely supercedes rfc and is an official modi fication of document a revision of document will be written shortly which incorporates the changes listed here ncp implementers are to incorporate these changes as soon as possible ncp implementers also are to estimate on what date theis ncp s will be ready and to communicate this estimate to steve crocker or his secretary byrna kristel page modifications i bytes heretofore a connection has been a bit stream henceforth it is to be a byte stream with the byte size s indicated in the str command and in each message the byte size meets the constraints s the choice of the byte size for a connection is a rd level protocol issue but the size is constant for the life of a connection each message must contain an integral number of text bytes see below ii message format the message format is changed to the format shown in figure the fields s and c are the byte size and byte count respectively the s field is bits wide and must match the byte size specified in the str which created the connection the c field is bit long and specifies the number of bytes in the text portion of the message a zero value in the c field serves no purpose but is explicitly permitted the m and m field are each bits long and must contain zero the m field is zero or more bits long and must be all zero the m may be used to fill out a message to a word boundary it is followed by padding the text field consists of c bytes where each byte is s bit long the text field starts bits after the start of the message the partition of a byte stream into messages is an artifact required by the subnet no semantic contents be attacched to message boundaries in particular page bits leader m s c m text m v padding typical message figure page a message with a zero value for c has no meaning although it is legal and it does use up resource allocation see flow control below a receiver may not expect to see rd level control infor mation synchronized with message boundaries particuralrly if the notion of record is defined for a connection the receiver must expect multiple records and or record frag ments within one message however control message obey special rules see below iii message data types no notion of data type is defined as part of the nd level pro tocol rd level protocols may include the notion data types cannot be synchronized on message boundaries iv reset and reset reply a new pair of one bit control commands rst reset and rrp reset reply are added the rst is interpreted as a signal to purge the ncp tables of all existing entries which arose from the host which sent to rst the host receiving the rst acknowledges by returning a rrp the host sending the rst may proceed to request connection after receiving either a rst or rrp in return an rst is returned if the second host comes up after the first host v flow control the flow control techniques are changed in two ways first the cease mechanism is discontinued the hi and hi message will no longer be recognized by the imps and the imps will no loger generate the hi hi or hi messages page second the allocation mechanism now deals with two quantities bits and messages the receiver allocates each of these quantities separately the sender and receiver each must mantain a bit unsigned counter for message and a bit unsigned counter for bits when sending a message the sender subtract one from the message counter and the text length from the bit counter the receiver decrements his counter similarly when receiving the message the sender is prohibited from sending if either counter would be decre mented below zero similarly the receiver is prohibited from raising the current message allocation above or the current bit allocation above the text length of a message is the product of s the byte size and c the number of bytes these values always appear in the first part of the message as described under message format the all gvb and ret command are modified to treat two quantities their formats are given under control command below the gvb command is further modified to make it possible to ask for none of the allocation to be returned the new gvb command has four eight bit fields the first two fields are the op code and the link as before the next two fields contain number fm and fb which control how much of message and a bit allocation are to be returned each of these numbers is interpreted as the number of ths of the current allocation to be returned if it is in the range of to and is to be interpreted as all of the current allocation if it is in the range to vi control message the control link is chsnged to link link is not to be used the old and new protocols may thereforre coexist page message sent over the control link have the same format as other regular messages as described above under message format the byte size field must contain the value control messages may not contain more tha byte of text the value in the byte count field is thus limited to this limi tation is intended to help smaller hosts control messages must contain an integral number of control commands control commands therefore may not be split across control messages vii link assignment the link are now assigned as follows control link old protocol s control link to be phased out links for connections reserved not for current use to be used only for measurement work under direction of the network measurement center ucla available for any private experimental use viii fixed length control commands the eco erp and err commands are now fixed length the eco and erp are now bit long bits of op code and bits of data the err command is now bits long bits of op code bits of error code and bits of text bits is long enough to hold the longest non err control command page ix control command formats as mentioned above the formats of the str all gvb ret eco erp and err commands have changed and the commands rst and rrp have been added the formats of these commands are given here str send socket receive socket byte size all link msg space bit space ret link msg space bit space gvb link fm fb bit fraction message fraction eco data page erp data err text error code rst rrp the values of the op codes are nop rts str cls all gvb ret inr ins eco erp err rst rrp page discussion on byte streams the previous specification that connections would be conduits of bit streams provided maximum generality and minimum efficiency pressure for greater efficiency developed and the problen was examined two separate kinds of inefficiency arose from bit streams receiving hosts were equired to engage in expensive shifting to concatenate the texts of successive messages sending hosts often also had to shift text fields to align them on word boundaries sending ncp s were prohibited from hanging onto any text for an indefinite time if it were possible to send even one bit this requirement was necessary to prevent possible deadlocks for example suppose processes a and b have a conversation in progress over a pair of connections one in each directions also suppose that these processes produce exactly one bit of output for each bit of input then if a s ncp fails to send a waiting bit because it wants to pack it together with later output from a then b will not be able to output and neither will a it is clear then that unless there is some quantitee that the data in the sending ncp s buffers are not crucially needed on the receive side the sending ncp must assume otherwise and transmit any waiting data as soon as it is able these considerations led to the notion of a transmission unit whose existence would be known to the ncp s the questions then became what were typical and or possible transmission unit sizes for page character oriented interaction bit transmission units seemed reasonable for line oriented interaction the transmission unit might best be the line itself and therefore variable length alternatively it might be best consider the transmission unit to be a character for file transfer it might be desirable for the transmission unit to be a multiple of the word lengths of both machines however the last part of the file may not form a whole transmission unit if the transmission unit is too large the consensus became that the transmission unit should not be divisible under any circumstances and should therefore be fairly small the notion of transmission unit thus seems to be synonymous with the notation of byte and the term transmission unit was dropped subsequent discussion of the deadlocks and wakeup aspect revealed that there may be two byte sizes associated with a single connection transmission from the sending process to the sending ncp is in bytes of size s the sending ncp must send a message whenever the link is unblocked the message counter is at least the bit counter is at least s and the least s bits of text are ready the message must contain an integral number of bytes at the receiving side there may be a different byte size r for transmission from the receiving ncp to the receiving process an example of where r s is suggested by ucsb which is providing a file system for transparently storing binary files it is reasonable that a using host might send with bit bytes while the ucsb file system might want to receive bit increments it is clear that from a network protocol point of view only the byte s is relevant and this is quantity which is communicated in the str command in every message the choice of the byte size r is up page to the receiving user and its meaning is how often the receiving ncp should wakeup the receiving process it may also happen that a receiving process has an agreement with the receiving ncp which is more complex than please wake me every r bits for example the ncp might scan for new line characters before waking up the receiving process in the new protocol it is the option of the receiver to refuse a request for connection on the basis of the proffered byte size conceptually we imagine that ncp s are capable of handling all byte sizes and that such a choice would be up to the third level pro grams user programs loggers telnets etc some hosts small ones in particular may know enough about their third level programs to restrict the variety of byte sizes which can be sent or received while it is a matter of a local policy the committee strongly suggests that ncp s be capable of handling all byte sizes one of our committee moreover feels strongly that ncp s should be written to be able to receive all byte sizes s and provide for different byte sizes r for transmission to the user process this rfc was put into machine readable form for entry into the online rfc archives by enrico bertone page 