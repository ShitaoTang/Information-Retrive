 network working group wayne hathaway rfc ames nic may comments on the new telnet specifications i would like to make the following comments on the proposed new telnet protocol specification nic and telnet option specification nic in general i feel the new telnet protocol is far superior to the previous version there are however a few items of substance which i feel should be changed as well as some recommended editorial changes i feel the most significant error concerns the note on sub negotiations section of the option specification page the problem stems from the statements each party is presumed to be able to parse the parameter s and finally if parameters in an option subnegotiation include a byte with a value of it is not necessary to double this byte in accordance with the general telnet iac these two statements make the completely unwarranted but all too prevalent assumption that there is only one telnet interpreter and that all telnet functions are carried out by it in particular problems arise when a telnet synch is received and the receiving ncp is required to scan the input looking for interesting things if the subnegotiation was in fact being carried out by a user process and not the telnet interpreter then that user process is probably the only one that knows how to interpret the sb parameters the ncp itself would have no way of parsing them as a solution to this problem i propose that all subnegotiation parameters be delimited at the end perhaps with the same telnet command sb and that they be required to obey all telnet rules including doubling of iac s it may be argued that the user process interpreting the sb itself should do the scanning for interesting things but i do not feel that this burden should be place on all user processes the solution to the above problem is in fact fairly simple to define and implement the general problem however is one of not taking proper cognizance of what i called user processes processes which are not network standards but which are simply programs attempting to do work using the network i feel we must be more careful to shape all future network standards with these very real user processes in mind if in fact the network will ever be as useful as is possible the second item i object to is the incredibly loose definition of interesting things an aside words which are so imprecise as to require quotation marks should never appear in protocol specifications the specifications do define some of these interesting things eg hathaway page rfc comments on the new telnet specifications may most telnet commands but they then include and perhaps other characters or character strings as well to eliminate the difficulty of implementing an undefined set of interesting things i would propose that the set of interesting things contain only the dm command itself the telnet synch would thus be defined as discard all input up to and including the next dm command this change should cause no problems with user generated interesting things if they are sent after the synch as specified in the proposed new file transfer protocol specifications system generated signals such as option requests could be discarded however so some additional discussion is in order if the recommendation that requests not be sent except when something changes is followed the spontaneous generation of interesting things by telnet itself whatever that implies would seem to be rare especially at the same time that users are generating synch s a more positive solution could be had by defining a synch response sr telnet command the sr command would be sent when the ins and dm had both been processed ie when the synch had been completely received if a process should ever receive an sr when it has an option request outstanding the request has been discarded and must be repeated user processes which carry on option negotiations would be the generators of any synch s so they can handle discarded option requests as desired note that this assumes that the telnet process itself will never generate a spontaneous synch comments are solicited on this another possible solution would be to define a timing mark telnet command see telnet timing mark option nic which would be sent immediately following the dm of a synch the response to the timing mark also to be defined would mean the same as the proposed sr command the final non editorial comment concerns the need for some means of specifying horizontal tab positions and use this is quite a nuisance when dealing with systems which normally handle tabs for local terminals perhaps this issue can be best handled with an appropriate option comments are solicited the only editorial comments are on the telnet protocol document which i reference below by page number on page the parenthetical comment i e when a process at one end of a telnet connection is blocked on input should either be removed or rewritten to avoid the to me incomprehensible phrase blocked on input if additional discussion is felt to be necessary i would propose i e when a process at one end of a telnet connection cannot proceed without additional input if examples are felt necessary i would propose e g in the state characterized by the multics term blocked on input the parallel could also be drawn between the ga and the concept of a read command being issued to request more input hathaway page rfc comments on the new telnet specifications may on page i feel that there needs to be some more discussion of the abort output ao command particularly the statement that it allows a process to run to completion but without sending the output to the user s terminal the problem is that nothing is said about when output is to resume presumably at the next system prompt character i realized that the ao is meant only to invoke this function on systems which already provide it but it would seem to be more useful if more fully specified on page i do not understand what the example e g an over strike is trying to say speaking of an overstrike on output would imply to me that both characters are to be printed in the same print position reducing the ec to a backspace some more discussion should also be added as to what ec and el mean on output if anything on page i would like to see the word promptly which is in quotation marks either eliminated or defined as per my earlier aside comment the phrase if necessary in the last line also seems unnecessary on page my proposed redefinition of interesting signals would remove the middle paragraph entirely and would modify the third paragraph substantially the line discard all characters which would have had an effect on the nvt printer should be changed however as it seems bell s should also be discarded on page i see no reason why the sequence cr nul is required to generate a cr only and also object to and the cr character must be avoided in other contexts either some supporting discussion should be added or this restriction should be removed this rfc was put into machine readable form for entry into the online rfc archives by alex mckenzie with support from gte formerly bbn corp hathaway page 