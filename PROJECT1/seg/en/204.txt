 network working group chuck s kline csk request for comments ucla nic february ncp survey this rfc is the first in a series which will request information on implementation of host to host protocol we would appreciate a reply to this rfc from all sites within two weeks one convenient way to reply is to make a copy of this rfc at the nic and insert the replies at the appropriate spots the results of this survey will be published please send replies to nic ident csk or to charles kline boelter hall ucla hilgard ave los angeles cal this particular rfc will deal with implementations of network control programs ncps future rfcs will deal with implementations of telnet rje etc in order to ask questions about ncps and get meaningful replies i will here describe what i consider to be my concept of an ncp a an ncp is that part of the system which performs the tasks necessary for host to host protocol as specified by document nic protocols notebook b ncps contain the following parts though not necessarily as separate pieces b code which handles connection establishment including maintenance of the rendezvous table table of open and pending connections b code which handles transmission over open connections including buffer management and the sending of allocate and giveback commands b code which handles the actual movement of messages in and out of the imp sometimes called the imp handler and sometimes in a separate cpu b other code including measurements initialization etc kline page rfc ncp survey february please answer the following questions it is probably appropriate to give this survey to the coder of the ncp or other knowledgeable person write na not applicable where it is appropriate circle the number of the appropriate choice when a choice is required thank you general information a host name b site number c your name d main cpu is a pdp b etc e operating system in main cpu is tenex os etc f is documentation available on your ncp f user level how to use ncp f system level implementation f is the documentation available at the nic imp interface a built a in house a contracted to b full or half duplex c maximum bandwidth is baud in each direction coding of ncp a ncp was written a in house a a written in man months a b name of person who wrote ncp kline page rfc ncp survey february a c debugged in man weeks a d machine hours used in development and debugging of ncp a contracted to a a contractor took man months a supplied another site without modification by this site specify site where ncp obtained from a supplied from another site but modified by this site for different system or for other reasons specify site where ncp obtained from a a modifications took man weeks b ncp is maintained b in house person s name b by another site specify site c size of ncp code c total size of all ncp code not tables or buffers as described above c a words of bits per word c size of code which initializes ncp on system up or after ncp or net crash c a words of bits per word c size of code which handles opening and closing of connections c a words of bits per word c size of code which moves data from user process to imp handler or from imp handler to user process c a words of bits per word kline page rfc ncp survey february c size of imp handler code c a words of bits per word c size of other code explain what it is c a words of bits per word d size of ncp tables d size of tables indexed by open connection i e tables for control of open connections d a entries or words per entry of bits per word d size of tables indexed by link i e tables for link management and for quick association of an input message with a process d a entries of words per entry of bits per word d size of other tables explain d a entries of words per entry of bits per word host imp communications a imp handling is performed in a main cpu a additional processor specify machine b imp handling is performed at b interrupt level by resident code b scheduled process with resident code b scheduled process with swappable code c number and size of buffers for the imp handler on input number of buffers for messages before cpu will stop taking bits from imp on output number of buffers which may be queued before user processes will be blocked waiting for a free buffer kline page rfc ncp survey february c output buffers for sending to net of words of bits per word c input buffers for receiving from net of words of bits per word ncp imp handler communications a ncp communicates with imp handler by a putting message on queue for handler and waking unblocking handler i e shared memory approach a some other mechanism explain ncp user communication a mechanism a special mechanism for network i e different than files using a a shared resident memory a b shared non resident swappable memory or file a c other explain a similar to file io but network assigned rather than file i e transparent to user process coding b bytes sizes allowed circle all b bit b bit b bit b bit b bit b bit b bit b bit kline page rfc ncp survey february b bit b other explain buffer space allocations a initial allocation when connection receive is opened a messages and bits b factors which will change this allocation b up b down c conditions which would cause a giveback command to be sent protocol facilities a errors a do you send error commands when you detect protocol errors a do you log it or take some other action when you recieve error commands b queuing b do you allow queuing of connections i e when an rts or str is received for which no request is pending do you refuse it send back a cls or queue it also do you queue when two or more requests match the same socket b a yes always b b no always b c yes for listens b d other explain c are there hooks code in the ncp for c ncp measurement c network measurement kline page rfc ncp survey february c msp and other protocol experiments c do any of these hooks allow a user process to send a message with a given leader or look at all messages which arrive with a given leader time outs a how long will the ncp hold a request for connection init or listen from a user process before timing out if not matched by an rts or str from the net b how long will the ncp hold an str or rts recieved from the net before timing out and sending a cls c how long will the ncp wait after sending a reset or echo command before declaring the host dead assuming you got a rfnm at least d any other timeouts explain have you made any measurements on the effect of network use on your system a effect of local users using telnet to go out to net b effect of foreign users using your system via net c bandwidth you have been able to achieve are any changes planned or in progress in the design or coding of your ncp explain other comments a please feel free to add other comments on your ncp which you feel would be of interest to the network community this rfc was put into machine readable form for entry into the online rfc archives by grant bowman kline page 