 network working group e f harslem request for comments j f haefner nic rand april comments on rfc a file transfer protocol a file transfer protocol is needed bushan s proposal would satisfy a particular current need that we have as well as short term envisioned needs bushan s protocol would apear to be straight forward in implementation and extensible as claimed we would like to see implementations of such protocol be accomplished such that the file transfer program has general and complete access to the local file storage that is it should be able to access a file that it did not create for example if a program or user creates a file at site x completely independent of the file transfer program it would then be desirable to be able to retrieve the file via the file transfer program this is not a requirement of rfc but we would like to see it implemented where possible since implementation of a subset of transaction types is specifically permitted we suggest inclusion of the following commands in addition to append insert records within a file delete records from within a file replace records within a file although these operations are not directly supported under ibm os we have used them with a non standard file subsystem under ibm os and find them quite useful in addition to retrieve and lookup get names of files under my access control would be useful the absence of status requests and responses is apparent although this is typically a function associated with a remote job entry rje system since the execute request is present it would seem appropriate to inquire about the status of the process created by the execute command this becomes increasingly more important where the execute is implemented as an rje like operation and scheduling time of the job might be prolonged harslem haefner page rfc comments on rfc april when requesting execute the using host sends parameters upon receipt of the rr response executing a task can be implemented in several ways the options our affords are rje at job level and the attach macro our preference would be the attach macro which immediately initiates an independent os task within the partition of the program issuing the attach presumably the file service such a task normally receives parameters upon initiation and can thereafter receive parameters from a program via some mechanism such as an event control block the second method requires special modifications to the program being executed hence it is not desirable therefore we either need the parameters included in the execute command or will not actually start execution until parameters are received upon abnormal termination one should include part or all of the spurious request as well as an identify ing code to facilitate precise error recognition we would be interested in the outcome of the mit harvard experiments with the rfc protocol what were the pitfalls etc this rfc was put into machine readable form for entry into the online rfc archives by simone demmel harslem haefner page 