 network working group v cerf request for comments january nic the current flow control scheme for impsys bb n quarterly report outlines part of the current flow control scheme in the imp operating system a meeting held march at bb n was devoted to the description of this new scheme for the benefit of interested network participants this note represents my understanding of the flow control mechanism the essential goal is to eliminate unnecessary retransmissions when the load is heavy eliminate the retransmission time out period when the load is light increase bandwidth prevent re assembly lock up control traffic from hosts into the net more strictly than the earlier link blocking method and secure the rights of life liberty and the pursuit of happiness for ourselves and our posterity oops source imp to destination imp protocol there are two different protocols depending on message length i e single or multi packet we illustrate first the single packet case source imp destination imp case message implicit req rfnm arrived ok discard copy of msg case message implicit req no room don t respond all room available message discard copy of msg rfnm arrived ok in the first case a single packet message is sent to the destination imp this message acts as an implicit request for single packet buffer space if there is room as in case the destination imp responds with a rfnm the source imp which has retained a copy of the message deletes its copy and goes on the second case illustrates what happens when the source imp sends a message to a destination imp at which there is no room for the one packet message the arrival of the single packet message constitutes a request for single packet buffer space and is recorded as such by the destination imp in a first come first served buffer reservation cerf page rfc the current flow control scheme for impsys january request queue when space is available the destination imp will transmit an all to the requesting source imp which can then send the single packet message again this time knowing that space has been reserved at the destination for multi packet messages the procedure is somewhat different when a message enters an imp from a host and the last bit flag is not set when the number of bits in a maximum length single packet have arrived the imp halts the host imp transmission line while it determines whether space has been reserved at the dest imp if space packets worth has been reserved the host imp line is re opened and the message is sent out normally if space has not been reserved the host imp line is kept closed while the source imp makes a request for multi packet buffer storage at the destination imp when buffers are available the destination imp responds with an all the source imp then transmits the message and waits for a combination rfnm and all from the destination imp the destination imp will delay its rfnm if necessary until it has another buffers available for the next multipacket message this sequence is illustrated below source imp destination imp h i line first packet of multipacket arrives halt h i line and send req start sec time out if time out resend req and restart time out all when available start long term min time out on time out reset all outstanding reservations send the message start sec time out for incomplete transmission if time out send inc cerf page rfc the current flow control scheme for impsys january on recept of message send rfnm implicit all on receipt of inc send rfnm all if msg received or send inc if msg not received start min time out on all queue all start ms time out when it reaches head of queue if time out on all send gvb ack else send next message a key point in this protocol is that a source imp after receipt of a rfnm and implicit all from the destination imp has msec in which to initiate the transfer of at least the first packet of a multi packet message to the destination imp the source imp may have several allocate responses queued up in which case these time outs occur one after the other one has to time out before the next msec time out starts time outs exist in the source imp which cause it to send inc messages to the destination imp if it has received no response from some earlier message buffer allocation a total of buffers are available for store forward and re assembly purposes at most can be allocated for re assembly and at most can be allocated for store and forward use this prevents either kind of traffic from completely shutting out the other kind message ordering source imp to destination imp as an aid to congestion control an imp can have at most messages outstanding un rfnmed for each other imp link numbers in the message leader are ignored by the imps instead imps mark messages leaving for other destinations with an bit message number in addition a bit priority number is also used in case a host has marked a message as a priority message the key notion here is that the imps treat all hosts on a given imp as if they were a single host a single sequence of message and priority numbers is used in each direction between each pair of sites cerf page rfc the current flow control scheme for impsys january the receiving imp remembers the message number of the last message delivered as well as the priority number of the last priority message delivered it uses this information to correctly sequence messages out the imp host line s since there is only one sequence of numbers for each pair of sites messages for one host at a site may get in the way of messages for another host at the same site in fact if some message m is the next in line to go to some host and that host delays receipt for seconds any messages for another host may be delayed that long also however only the first message is lost since the second one could not even start into its destination host until the first one had been delivered there is a tighter coupling between hosts sharing an imp than before but not much tighter an example of the use of message and priority numbers is given below order sent by order received by order received by source imp dest imp host p p p p p p p p p p p p where p is interpreted to mean message priority number note that there are only classes of messages priority and non priority and that the priority numbers simply allow ordering at the destination of multiple outstanding priority transmissions from the same site if hosts use link numbers to de multiplex messages to processes then it would be a mistake to arbitrarily assign short messages priority if a file transmission were carried out such that the last short message had priority the file might not enter the receiving host in the same order it was sent ack mechanism imps treat their physical channels phone lines as if they were pairs of simplex communications paths each impsys has a sender and receiver module for each full duplex channel each module has an odd even bit which is used to keep track of the state of the last packet on the line the object is for the sender module to block a channel until the corresponding receiver has received a packet indicating that the send packet was received on the other end i e an acknowledgment cerf page rfc the current flow control scheme for impsys january in the present system acknowledgments are separate imp imp packets in the new system they are a single bit in a packet flowing in the opposite direction on the reverse path of a full duplex channel every packet sent between imps has an ack bit and an oe bit as shown below p a o c e k typical packet we need some terminology let poe be the packet oe bit and soe roe be the send module oe bit and receive module oe bit respectively for two imps a and b we distinguish soe a and soe b as the two send module oe bits at imps a and b respectively the rules of operation are as follow sender if ack soe then do nothing else soe soe i e flip soe bit and free channel receiver if poe roe then packet is a duplicate so throw it away else roe roe whenever a packet is sent by the sent module its two bits poe and ack are set up by poe soe ack roe the mechanism is designed to use real traffic to accomplish the acknowledgment protocol by piggy backing the ack bits in the header of real packets if there is no real packet waiting for transmission in the opposite direction a fake packet is assembled which carries the ack but which is not acknowledged by the receiving side cerf page rfc the current flow control scheme for impsys january we give an example of the operation of this mechanism between two imps imp a imp b roe soe roe soe poe ack imp a blocks send imp b nops channel flips roe poe ack imp a frees send imp b blocks channel channel for flips soe new traffic poe ack imp a blocks send crashes channel or gets lost poe ack imp a detects packet duplicate poe roe imp b so does not change retransmits no soe bit ack received poe ack imp a retransmits imp b flips packet soe unblocks channel and flips roe poe ack imp a flips roe flips soe in fact each send receive module has oe bits so up to packets can be outstanding in either direction how things really work actually a single send module is responsible for trying to transmit packets out on the pseudo channels each channel has a two bit state in addition to an oe bit each channel is either free or in use and if in use it may be sending old or new packet cerf page rfc the current flow control scheme for impsys january start state f free i in use v x don t care n new packet fx i n o old packet ack received v i o re transmissions between imps packets are sent repeatedly until they are acknowledged however the choice of what to send is ordered by priority as follows priority packets as marked by host non priority packet unacknowledged packets on i o state channels others it was pointed out that a heavy load of type and traffic might prevent retransmissions from occurring at all and w crowther responded that the bug would be fixed by a ms time out which forces retransmission of old packets in class note that each packet must carry a pseudo channel number to identify the poe to channel association and ack bits which are positionally associated with the pseudo channels thus a single packet can ack up to packets at once this rfc was put into machine readable form for entry into the online rfc archives by helene morin via genie cerf page 