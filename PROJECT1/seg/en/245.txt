 network working group r t braden request for comment no ucla ccn nic february updates rfc print files in ftp introduction many of those who contributed to the definition of the ftp and rje protocols have expressed varying degrees of uncertainty or unhappiness with the print file type in ftp this rfc is intended to review the problem of print files in preparation for the forthcoming ftp meeting originally drafted on the basis of rfc this rfc has been updated to reflect the terminology of the latest ftp document changing the terminology doesn t solve the problem it turns out that the network rje protocol as presently defined see nic seems to force a particular interpretation of print files in ftp and in fact this interpretation is probably different from the one assumed by most ftp implementors vertical format control what is a print file presumably it is a file which is intended to be sent eventually to a printer process to create a hard copy many operating systems particularly those which are batch processing oriented allow the programmer to include control codes within a file to be printed to control the vertical format of the printed page for example single double line spacing overprinting and page ejection a print file is one which includes such vertical format control vfc information there are three common ways for printer processes to determine vfc case n non print file the file contains no vfc information the printer process applies a standard format e g single space standard vertical margins if the file is printed case t print file with ascii format effectors the file is telnet like containing the ascii controls cr lf and ff to provide vfc braden page rfc print files in ftp february case a print file with asa fortran vfc the first character of each record is a vfc code see rfc for the codes assuming there are to be print files in ftp these three cases need to be considered these three cases are explicitly included within the rje protocol as transmission modes we have borrowed the rje labels n t and a from nic the current ftp rfc seems to provide only two cases unformatted and print file it is unclear from rfc how these two ftp formats are related to the three vfc cases for example it is unclear whether the ftp format is meant to be a property of the file as transferred over the network or of the file as stored by the server as i understand it the tenex system supports only case t the distinction between case n and case t is not always clear however if a tenex file which contains only the cr lf combination of format effectors is printed it may be considered case n where cr lf delimits a logical record and where the standard format is to begin printing each record on a new line the rje protocol uses this ambiguity to advantage see below the ibm operating systems on the other hand support cases n and a the output writer process which drives the printer must know whether or not a file to be printed contains asa vfc so the system distinguishes internally between print files case a and non print files case n the print file attribute is normally attached to a print file when it is created for example the language processors typically create print files for their printer output streams hence when ccn s server ftp executes a stor command it must decide whether or not the new file is to be marked with the internal print file attribute as noted earlier ftp does not explicitly distinguish the three possible cases we must either add some additional assumptions or server dependent information outside ftp or we must add a new format to ftp implications of rje to send an output printer file to a user host the rje server will cause his ftp user process to send the file with the following attributes note making the obvious conversion from rfc to rfc terminology braden page rfc print files in ftp february vfc case format structure n unformatted record structure t unformatted file structure a print file record structure thus the authors of rje intended to use the structure attribute to resolve cases n and t this is perhaps a reasonable choice but we should understand the consequences and make them explicit within the ftp document assume for the moment that we want to maintain perfect consistency between ftp and rje an ftp server which uses asa vfc internally should convert every unformatted unstructured file it receives to an internal print file that is the file must be mapped into a set of physical lines which are really logical records internally and an asa vfc character must be appended to the beginning of each line before it is stored note that this implies that the default file structure in ftp should be changed to record structure this reinforces the point made by wayne hathaway in rfc that if a tenex user transmits a source file to an ibm host and expects to manipulate it in some useful way he d better send it with record structure another choice if the loss of unformatted unstructured as a simple default case is too offensive we can simply change ftp to include three formats corresponding to cases n a and t rje would be changed correspondingly acknowledgments discussions with steve wolfe jon postel and eric harslem were very helpful in clarifying the print file problem in ftp rtb gjm this rfc was put into machine readable form for entry into the online rfc archives by alex mckenzie with support from gte formerly bbn corp braden page 