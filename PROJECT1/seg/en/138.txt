 network working group request for comments network information center logger protocol proposal edwin w meyer jr thomas p skinner february with the arpa network host to host protocol specified and at least partially implemented at a number of sites the question of what steps should be taken next arises there appears to be a widespread feeling among network participants that the first step should be the specification and implementation of what has been called the logger protocol the computer network group at project mac agrees the term logger has been commonly used to indicate the basic mechanism to gain access to login to a system from a console a network logger is intended to specify how the existing logger of a network host is to interface to the network so as to permit a login from a console attached to another host to implement network login capability now seems quite desirable in the first place it is natural for network participants to wish to learn more about the remote systems in the immediate fashion afforded by direct use of those systems in the second place the technical problems introduced by remote logins are probably less complex than those involved with such further tasks as generalized file transfer thus a logger protocol could be implemented relatively quickly furnishing additional impetus and encouragement for taking still further steps in order to furnish at least a basis for discussion and at most an initial version of a logger protocol we have prepared this document which attempts to present a minimal set of conditions for basing a logger protocol this proposal covers only the mechanism for accomplishing login what occurs following login is not discussed here because we feel more experimentation is necessary before any protocol for general console communication can be established as standard in its absence each site should specify its own experimental standards for console communications following login some of the points raised in this document have already reached a certain level of consensus among network participants while at least one point is rather new it should be clearly understood however that we feel regardless of the disposal of particular issues networkwide page rfc logger protcol proposal feb agreement should be reached as soon as possible on some general protocol this is all the more desirable in view of the fact that it is quite likely that certain points which should be covered in this protocol will only become apparent during the course of implementation therefore the sooner a common basis for implementation can be reached the sooner a more rigorous protocol can be enunciated before turning to a discussion of the points with which to decide the protocol should deal and specifications for the current state of the protocolm we feel that we should acknowledge the consideration that a case could be made for avoidingthe difficulty of generating a logger protocol by simply declaring that each host may specify its own perhaps unique preferences for being approached over the network although such a course is certainly possible it does not seem to us to be desirable one reason for avoiding such a course is simply that following it hamper general network progress in that adressing the task of interfacing with some systems is bound to more time consuming than to interface with one system even though each indivudual one of the former multiple interfaces might be in some sense simpler than the latter single interface another consideration is less pragmatic but nonetheless important agreement on a common protocol would tend to foster a sense of network community which would tend to be fragmented by the local option route after all the host to host protocol could have been handled on a per host basis as well assumedly one reason why it has not had something to do with similar admittedly abstract considerations context structurally the mechanism serving to login a user over the network consists of two parts one part at the using host the other at the serving host the using or local host is the one to which the users typewriter is directly connected it contains a modulewhich channels and transforms communications between the network connection and the typewriter the serving or foreign host provides the service to be used it contains programming that adapts the logger and command system to use through the network rather than a local typewriter there are three different phases to a login through the network during the connection phase the users console is connected to the serving logger through the network this is of course the most important phase from the protocol viewpoint the second or dialog phase consists of a sequence of exchange between the user and the logger that serves to identify the user and verify his right to use the system in some hosts this phase may be minimal or non existent page rfc logger protcol proposal feb the admission phase occurs after the user has successfully completed the login dialog it consists of switching his network typewriter connections from the logger to an entity providing a command processor of some sort in some hosts this switching may be totally conceptual in others there may be a real internal switching between entities the connection phase the issues involved in specifying a protocol for implementing login can be separatedintop two major parts how to establish and maintain the network connection between the typewriter and the logger and how to conduct a dialog after the connection is made the first part is called the initial connection protocol by harlem and heafner in rfc it in turn consists of two subparts how to establish a connection and how and when to destroy it we endorse the proposal for establishing a connection made in rfc which we summarize briefly for convenience it is a two step process utilizing the ncp control messages to effect a connection between the logger and the console of a potential user first the user causes the hosts ncp to send out a request for connection control message destined for the serving hosts loggers contact socket the two purposes of this message are to indicate to the logger that this user wishes to initiate a login dialog and to communicate the identifiers of the and send socket he wishes to operate for this purpose the logger rejects this request to free its contact socket as the second step the logger choses two sockets to connect to the user s sockets and dispatches connection requests for these if the user accepts the connection within a reasonable period the connection phase is over and the dialog phase can begin if the user does not respond the requests are aborted and the logger abandons this login attempt there is another part to an ncp when and how to disconnect there are two basic situations when a logger should disconnect the first situation may arise of the serving host s volition the logger may decide to abandon a login attempt or a logged in user may decide to log out the second situation may be due to the using host s volition or network difficulties this situation occurs when the serving host receives a close connection control message or one of the network error messages signifying that further transmission is impossible this may happen for either the read or the write connection disconnecting involves both the deletion of the network connections and the stoppage of any activity at the serving host related to that user if the login is in progress it should be abandoned if the user is already logged in his process should be stopped since he no longer has control over what it is doing this is not intended to restrict absentee page rfc logger protcol proposal feb i e consoleless jobs the dialog phase the second major part other than getting connected is how to conduct the login dialog this resolves itself into two parts what to say and in what form to say it the login dialog generally consist of a sequence of exchanges a prompting by the logger followed by a user reply specifying a name a project or password however exactly what information is desired in what sequence is idiosyncratic to each host rather than attempt to specify a standard sequence for this dialog we have taken the approach that each host may specify its own sequence so long as it is expressible as an exchange of messages in a basic transmission format a message is a set of information transmitted by one of the parties that is sufficient for the other party to reply by host specification either the logger or the user sends sends the first message of the dialog after that messages are exchanged sequentially until the dialog is completed in this context message has no relation to imp message the other issue involved in the login dialog is the format for transmitting a message we propose that it be transmitted as a sequence of ascii characters see specificarions in groupings calle transaction blocks character set we feel that there should be a standard character set for logging in the alternative requiring a using host to maintain different transformation between its set and of each serving host is a burden that can only narrow the scope of interhost usage the character set proposed ascii is widely used standard each host must define a transformation sufficient to transform an arbitrary character sequence in the host s code into ascii and back again without any ambiguity the definition of ascii sequences to express characters not contained in ascii is appropriate transaction blocks a message is transmitted as an arbitrary integral number of transaction blocks a transaction block consists basically of a string of ascii characters preceeded by a character count it also contains a code field see below the count is included as an aid to efficiently assembling a message some systems do not scan each character as it is input from the console rather such systems have hardware io controllers that place input characters into a main memory buffer and interrupt the central processor only when it receives an action character such as newline this reduces the load on the central processor because such a hardware facility is not available for interpreting page rfc logger protcol proposal feb network messages this scheme is proposed as a substitute it helps in two ways first a system need take no action until it receives all characters specified in the count second it need not scan each character to find the end of the message the message ends at the end of the of a transaction block other issues there are several other issues involved in the area of remote logins which we feel should be raised although most need not necessarily have firm agreements reached for an intial protocal echoplex echoplex is a mode of typewriter operation in which all typed material is directed by the computer a key struck by a user does not print directly rather the code is sent to the computer which echoes it back to be printed on the typewriter to reduce complexity there is to be no option for network echoplexing for the login only a using system having its typewriters operating in echoplex mode must generate a local echo to its typewriters however a serving system operating echoplexed should suppress the echo of the input during the login phase correction of mistakes during the login dialog the user may make a typing mistake there is no mistake correction ecplicitly proposed here if the message in error has not yet been transmitted the user can utilize the input editing conventions of either the using or the serving host in the first case the message is corrected before transmission in the second it is corrected at the serving host if the user has made an uncorrectlable mistake he should abort the login and try again to abort he instructs the local using host to close one of the connections the connections are disconnected as specified in the initial connection protocol waiting it may happen that the user may get into a login dialog but for some reason does not complete it the logger is left waiting for a response by the user the logger should not wait indefinitely but after a reasonable interval perhaps a minute abort the login and close the connections according to the provisions of the initial connection protocol socket assignments the initial connection protocol does not specify the ownership of the sockets to be used by the logger in connecting to the user the use code field of the socket identifier determines ownership the sockets may belong to the logger or may have an arbitraryuser code not used by another process currently existing at the serving host under this initial page rfc logger protcol proposal feb scheme it is not possible to implement administratively assigned user codes because the logger must assign permanent sockets before the identity of the user is verified a future connection protocol can avoid this problem by implementing a socket connection as a part of the admission phase the logger would talk to the user over the logger s sockets following identification it would transfer the connections to the sockets belonging to the user general console communications a companion paper under preparation outlines a protocol for general console communcations between hosts this paper will seek to adress most of the problems associated with typewriter like communications this includes discussion of full and half duplex character escapes action characters and other pertinent topics such a protocol might not be suitable for all terminals and host systems but would include solutions to problems for many it is not intended as a monolithic standard but rather as a recommendation for those sites who wish to implement a common protocol the important point is that we feel quite a bit of actual network usage is required before all the problems are better understood this is a prerequisite for devising a standard specifications initial connection protocol connection phase the following sequence is as presented in rfc it is restated here for completeness to intiate contact the using process requests a connection of his receive socket us to a socket serv in the serving host by convention this socket has the bit user number field set to zero the bit tag or aen field is set to one indicating the socket gender to be that of a sending socket there is no restriction on the choice of the socket us other than it be of of the proper gender in this case a receive socket as a result the using ncp sends user server rts us serv p page rfc logger protcol proposal feb over the control link one where p is the receive link assigned by the user s ncp the serving host now has the option of accepting the request for connection or closing the the connection a if he sends a close it is understood by the user that the foreign host is unable to satisfy a request for service at this time the serving host s ncp would send server user cls serv us with the user s ncp sending the echoing close user server cls us serv b if the serving host is willing to provide service it will accept the connection and immediately close the connection this results in the the serving host s ncp sending server user str serv us cls serv us page rfc logger protcol proposal feb with the user s ncp sending the echoing close it sends user server cls us serv it should be mentioned that the echoing closes are required by the host to host protocol and not by the logger initial connection protocol character set the character set used in conducting the login dialog is standard ascii as documented in american national standard code for information interchange ans x american national standard institute october a logger at a serving host may demand any kind of input that can be expressed as a string of one or more ascii characters it similarly it may output any such string all ascii characters are legal including the graphics and control characters however it is proposed that the only standard way of indicating the end of a console line be the line feed character this is in accordance with an anticipated change to the ascii standard currently the ascii standard permits two methods of ending a line one method defines a single character line feed as incorporating the combined functions of line space and carriage return to the lefthand margin the second method implicitly permitted by ascii uses the two character sequence line feed and carriage return to perform the same function there is a proposal that the ascii standard be changed to include a return to the left hand margin in all vertical motion characters of at least one full space line feed vertical tab and new page this will disallow the dual character sequence to end a line it is suggested that a character in a hostst character set not having any ascii equivalnet be represented by the ascii two character sequence esc and one of the ascii characters each host should publish a list of the escape sequence it has defined page rfc logger protcol proposal feb transaction block format all textual messages exchanged between user and logger are to consist of one or more transaction blocks each transaction block is a sequence of bit elements in the following format is an bit element that is not interpreted in this protocol in the proposed general console communications protocol this field specifies communication modes or special characteristics of this transaction block here is to be zero is an bit element that specifies the number of character elements that follow in this transaction block it is interpreted as a binary integer which has a permissible range between and the most significant bit is zero is an bit element containing a standard bit ascii character right adjusted the most significant bit is zero the number of in the transaction block is governed by the field a maximum of and minimum of zero characters are permitted in a single transaction block the most significant bit of each of these elements is zero effectively limiting each of these elements to seven bits of significance the reason for doing this is twofold the eighth bit of the elements is specifically reserved for future expansion and it was desired to limit all the elements so as to permit certain implementations to convert the incoming stream from bit elements to bit elements prior to decoding with one exception there is to be no semantic connotation attached with the division of a logger user message into one or more transaction blocks the character string comprising the message to be transmitted may be divided and apportioned among multiple transaction blocks according to the whim of the sending host if less than characters in length the message may be sent as a single transaction block the exception is that separate messages may not appear in the same transaction block that is a message must start at the beginning of a transaction block and finish at the end of one note also that there is no syntactic device for specifying the last transaction block of a message it is presumed that the logger end user both have sufficient knowledge of the format to know when all of a message has arrived page rfc logger protcol proposal feb note that the first bits of data transmitted through a newly established connection must be a type code as specified in protocol document this type code must be sent prior to the first transaction block and should be discarded by the receiving host acknowledgments robert bressler allen brown robert metcalfe and michael padlipsky contributed directly to the establishment of the ideas presented here thanks are due michael padlipsky and others for editorial comments this rfc was put into machine readable form for entry into the online rfc archives by carl moberg page 