 network working group e harslem request for comments j heafner nic february some thoughts on network graphics purpose this note states some of our initial reactions to nwg rfc whose purpose was to provide a basis for discussion and development of network graphics the method of operation described in note was to interpret data structures to produce graphic order codes for display this method has proven satisfactory in the past and we favor this approach the note proposal is directed toward a particular concept of operation i e minimal graphics terminal connected to computational facilities at remote sites our remarks embrace extended operations that include smart programs at each end of the connection as well as the minimal terminal the proposal in note should be broadened to include the description of more complex entities and it should be raised to a level of describing more general things in this note we first criticize the limitations imposed by the details of note then suggest some supplementary ingredients to extend its scope and lastly we suggest an alternate approach that reduces network conversations where possible to symbol manipulation rather than gross detail comments on the detailed restrictions of note the detailed constraints enumerated in note restrict many interesting features of the rand display hardware that we consider necessary from a human factors standpoint to some current applications they likewise restrict other nodes whose arpa sponsored research is dependent upon the use of sophisticated hardware for example the point vector and character capability of note excludes line type mode intensity control and many other attractive control operations the maximum symbol sizes are too small for our large character size the origin of all of our symbols is specified as the centroid of the symbol rather than the lower left corner of a virtual rectangle encompassing the symbol under mode control for plotting purposes the beam may not be advanced to the next character position a bit ascii is insufficient etc in short the five list items of note are not expressive enough for example there is nothing to allow one to position and open a graphic harslem et al page rfc some thoughts on network graphics february compare window the problem was not treated of supplying parameters identifying structure for match etc that are not actual display commands perhaps some necessary information gathering i e the display hardware descriptions and the characteristics of every node is preliminary to the generation of a detailed specification it is important that without delay a mechanism be defined for gathering and collating this information in such a way that it doesn t deter progress on network graphics development some general extensions to the note proposal display language capabilities should encompass the union of current and anticipated network graphics hardware our experience in exploring interactive graphics communication techniques for use by researchers and non programmers indicates that this is not just a motherhood the utility of such applications programs depends highly upon incorporating sophisticated graphics hardware in absence of those features some programs simply won t be used the data structure should allow logical as well as pictorial representation of the user s problem this close coupling of the meaning of a picture with the actual picture is desirable from a processing program s point of view especially if a user is to interact with the picture we have found this an efficient way to operate with the grail project and its derivatives here at rand this technique is included in a recently proposed graphics language generated by bob anderson rand and ben wegbreit harvard transmit definitions of graphics and then instances of their use the attempt here is to raise the level of conversation between programs where possible and to reduce processing overhead for example if one wishes to draw lots of resistors why not graphically define a resistor once and then transmit instances by giving the definition name accompanied by attributes a typical form of an instance is shown below item name position size intensity scaling labeling rotation etc there are many examples of this approach such as the recent work by william newman utah and many earlier studies at mit partition the display structure for static vs dynamic information and context as opposed to refreshing an entire picture whose domain is the entire screen we have found it useful harslem et al page rfc some thoughts on network graphics february to give the processing routine that wishes to draw a picture knowledge of only of a named rectangular portion of the crt and an accompanying display structure with our particular hardware we can then update only the dynamic part of a picture rather than regenerating the entire display structure just as important we can logically assign areas of the crt to different concurrent processing routines coupled with the logical pictorial representation noted in above this is a powerful technique named partitions also naturally accommodate those applications requiring multiple crts the interpreter could be context driven thus not restricting its output to a single set of crt order codes by providing cataloged descriptions such as the forms discussed in note the interpreter could reconfigure data destined for files etc as well as a display the gain here in terms of adapting to a users network needs is large the price paid in terms of implementing this increment of the interpreter is probably small an alternate proposal note mentions the case of a terminal at a node with a minimal host connected to a remote computationally oriented node the data standard which note suggests transmitting over the network is rather gross detail also the standard language is rather inexpressive encompassing only a few simple notions an alternative approach is to consider the situation of communication between non minimal nodes nodes with substantial memory and computing power here the network standard data should be a high level macro form representing the instances of gross detail with the power to deal with sophisticated graphics devices that is the standard language would be rich enough to express all the special features of network display devices this suggestion presents two problems first how can a terminal handle commands from a remote program of which its hardware is incapable the answer is that the remote program to which it is connected is too sophisticated for the terminal the connection is invalid a terminal should normally only connect to a program that addresses no more than its hardware capabilities this concept allows a standard under which a simple terminal and a simple program can communicate exactly the proposal of note yet a sophisticated terminal can talk to a sophisticated program in a high level language or it can talk to a simple program all within the same network standard harslem et al page rfc some thoughts on network graphics february the second problem is that a minimal host might not have sufficient facilities to translate from a powerful network standard language into the simple detailed order codes of its terminals when required the needs of a minimal site would be handled by another network node providing data reconfiguration services an essential part of this proposal the reconfiguration would be done on the basis of forms specifying translation form the network standard to the specific non standard data format required by the minimal node i e tailored specifically to its hardware whether it would be graphic order codes or some intermediate form would depend on the processing power and requirements of the minimal node fig shows a schematic diagram of the key elements of such a reconfiguration facility fig shows the use of that facility by a local display handler and its use as an intermediary by two remote nodes requiring different degrees of external data reconfiguration harslem et al page rfc some thoughts on network graphics february network v a network local process files programs invoking the crts etc interpreter v a user can access user s the logical interpreter semantic representation of routines his problem v v primitive data structure operators data base of v forms for reconfigu data structure ration base pictorial logical fig data reconfiguration service harslem et al page rfc some thoughts on network graphics february host providing host providing computational facility reconfiguration service standard format inter display of macro preter handler form data terminal non std non std terminal order codes detailed data minimum display minimum host handler host terminal terminal fig use of data reconfiguration service this rfc was put into machine readable form for entry into the online rfc archives by sergio kleiman harslem et al page 