 network working group r t braden request for comments ucla ccn obsoletes rfc nic july nic category d interim netrjs specifications the following document describes the operation and protocol of the remote job entry service to ccn s model the interim protocol described here will be implemented as a production service before the end of july two host sites rand and ucla nmc have written user processes for the interim netrjs based on the attached document questions on it should be addressed to ccn s technical liaison it is anticipated that the interim protocol will be superseded in a few months by a revised netrjs but the changes will be minor the revision will bring the data transfer protocol of netrjs into complete conformity with the proposed data transfer protocol dtp see rfc the present differences between the dtp and netrjs protocols are a the format but not the contents of the bit transaction header of netrjs must be changed to conform with dtp b the end of data marker must be changed from x fe to x b f c the initial modes available transaction of dtp must be added d some of the dtp error codes will be implemented no other protocol changes are presently planned although some may be suggested by operating experience with the interim protocol when the revised protocol has been fully specified it will be implemented with different icp sockets than the interim protocol this will allow a site which wants to start using ccn immediately to convert his protocol at leisure some possible future extensions to netrjs which have been suggested are a bit ascii option of data transfer connections for the convenience of pdp s braden page rfc interim netrjs specifications july a transparency mode for input from ascii remote sites to allow the transmission of binary decks object decks in the job stream from these sites more than one simultaneous virtual card read printer and punch stream to the same virtual terminal comments on the utility of these proposals or others for your site would be appreciated robert t braden technical liaison ucla ccn braden page rfc interim netrjs specifications july remote job entry to ucla ccn from the arpa network interim protocol a introduction netrjs is the protocol for the remote job entry service to the model at the ucla campus computing network ccn netrjs allows the user at a remote host to access ccn s rjs remote job service sub system which provides remote job entry service to real remote batch card reader line printer terminals over direct communications lines as well as to the arpa network to use netrjs a user at a remote host needs a netrjs user process to communicate with one of the netrjs server processes at ccn each active netrjs user process appears to rjs as a separate virtual remote batch terminal we will refer to it as a vrbt a vrbt may have virtual card readers printers and punches through a virtual card reader a network user can transmit a stream of card images comprising one or more os jobs complete with job control language to ccn these jobs will be spooled into ccn s batch system os mvt and run according to their priority rjs will automati cally return the print and or punch output images which are created by these jobs to the virtual printer and or card punch at the vrbt from which the job came or to a different destination specified in the jcl the remote user can wait for his output or he can sign off and sign back on later to receive it the vrbt is assumed to be under the control of the user s teletype or other remote console this serves the function of an rjs remote operator console to initiate a netrjs session the remote user must execute the standard icp see rfc to a fixed socket at ccn the result is to establish a duplex telnet connection to his console allowing the user to sign into rjs once he is signed in he can use his console to issue commands to rjs and to receive status confirma tion and error messages from rjs the most important rjs commands are summarized in appendix d different vrbt s are distinguished by character terminal id s there may be more than one vrbt using rjs simultaneously from the same remote host terminal id s for new vrbt s will be assigned by ccn to individual users or user groups who wish to run batch jobs at ccn contact the ccn technical liaison for details braden page rfc interim netrjs specifications july b connections and protocols figure shows conceptually the processes and protocols required to use netrjs the operator console uses a duplex connection under the telnet third level protocol see rfc the actual data transfer streams for job input and output are handled over separate simplex connections using a data transfer protocol we will use the term channel for one of these netrjs connections and designate it input or output with reference to ccn each data transfer channel is identified with a particular virtual remote dev ice card reader printer or punch the data transfer channels need be open only while they are in use and different channels may be used sequentially or simultaneously netrjs will presently sup port simultaneous operation of a virtual card reader a virtual printer and a virtual punch in addition to the operator console on the same vrbt process rjs itself will support more than one reader printer and punch at each remote terminal so the netrjs protocol could easily be expanded in the future to allow more simultaneous i o streams to each network user the remote user needs a local escape convention so he can send com mands directly to his vrbt process these local vrbt commands would allow selection of the files at his host which contain job streams to be sent to the server and files to receive job output from the server they would also allow the user to open data transfer chan nels to the netrjs server process and to close these connections to free buffer space or abort a transmission when a vrbt starts a session it has a choice of two icp sockets depending upon whether it is an ascii or an ebcdic virtual terminal an ebcdic virtual terminal transmits and receives its data as tran sparent streams of bit bytes since ccn is an ebcdic installation it is expected that a user at an ascii installation however will want his vrbt declared ascii rjs will then translate the input stream from ascii to ebcdic and translate the printer stream back to ascii this will allow the user to employ his local text editor for preparing input to ccn and for examining output the punch stream will always be transparent for outputting binary decks it should be noted that the choice of code for the operator console connections is independent of declared terminal type in particular they always use ascii under telnet protocol even from an ebcdic vrbt braden page rfc interim netrjs specifications july netrjs protocol provides data compression replacing repeated blanks or other characters by repeat counts however when the terminal id is assigned by ccn a particular network terminal may be specified as using no data compression in this case netrjs will simply truncate trailing blanks and send records in a simple op code length data form called truncated format c starting and terminating a session the remote user establishes a connection to rjs via the standard icp from his socket u to socket sub ebcdic or socket sub ascii at host imp if successful the icp results in a pair of connections which are in fact the netrjs operator control connections once the user is connected he must enter a valid rjs signon command signon terminal id through his console rjs will normally ack nowledge signon with a console message however if rjs does not recognize the terminal id or has no available line handler for the network it will indicate refusal by closing both operator connec tions if the user attempts to open data transfer connections before his signon command is accepted the data transfer connections will be refused by ccn with an error message to his console suppose the operator input connection is socket s at ccn s is the even number sent in the icp then the other netrjs channels have sockets at ccn with fixed relation to s as shown in the table below until there is a suitable network wide solution to the problem of identity control on sockets netrjs will also require that the vrbt process use fixed socket offsets from his initial connection socket u these are shown in the following table channel ccn socket remote socket server user telnet remote operator console input s u remote operator console output s u telnet data card reader s u transfer printer s u punch s u once the user is signed on he can open data transfer channels and initiate input and output operations as explained in the following sections to terminate the session the remote user may close all connections alternatively the user may enter a signoff command through his console in this case rjs will wait until the current job output streams are complete and then itself terminate the session by closing all connections braden page rfc interim netrjs specifications july d input operations a job stream for submission to rjs at ccn is a series of logical records each of which is a card image a card image may be at most characters long to match the requirements of os for job input the user can submit a stack of successive jobs through the card reader channel with no end of job indication between jobs rjs recognizes the beginning of each new job by the appearance of a job card to submit a job or stack of jobs for execution at ccn the remote user must first open the card reader channel he signals his vrbt process to issue init local u foreign s size netrjs which is listening on socket s will normally return an rts command opening the channel if however it should happen that all input buffer space within the ccn ncp is in use the request will be refused and the user should try again later if the problem per sists call the technical liaison at ccn when the connection is open the user can begin sending his job stream using the protocol defined in appendix a for each job suc cessfully spooled the user will receive a confirming message on his console at the end of the stack he must send an end of data tran saction to initiate processing of the last job netrjs will then close the channel to avoid holding buffer space unnecessarily at any time during the session the user can re open the card reader channel and transmit another job stack he can also terminate the session and sign on later to get his output the user can abort the card reader channel at any time by closing the channel his socket s netrjs will then discard the last par tially spooled job if netrjs finds an error e g transaction sequence number error or a dropped bit it will abort the channel by closing the connection prematurely and also inform the user via his console that his job was discarded thus solving the race condition between end of data and aborting the user needs to retransmit only the last job however he could retransmit the entire stack although it would be somewhat wasteful since the ccn operating sys tem enforces job name uniqueness by immediately flushing jobs with names already in the system if the user s process ncp or host or the network itself fails dur ing input rjs will discard the job being transmitted a message informing the user that this job was discarded will be generated and sent to him the next time he signs on on the other hand those jobs whose receipt have been acknowledged on the operator s console will not be affected by the failure but will be executed by ccn braden page rfc interim netrjs specifications july e output operations the user may wait to set up a virtual printer or punch and open its channel until a status message on his console indicates output is ready or he may leave the output channel s open during the entire session ready to receive output whenever it becomes available he can also control which one of several available jobs is to be returned by entering appropriate operator commands to be prepared to receive printer or punch output from his jobs the user site issues init local u u foreign s s size respectively netrjs is listening on these sockets and should immediately return an str however it is possible that because of software problems at ccn rjs will refuse the connection and a cls will be returned in this case try again or call the technical liaison when rjs has output to send to a particular virtual terminal and a corresponding open output channel it will send the output as a series of logical records using the protocol in appendix a the first record will consist of the job name characters followed by a comma and then the id string from the job card if any in the printer stream the first column of each record will be an asa car riage control character see appendix c the punch output stream will never contain carriage control characters netrjs will send an end of data transaction and then close an output channel at the end of the output for each complete batch job the remote site must then send a new rfc and all to start output for another job this gives the remote site a chance to allocate a new file for each job without breaking the output within a job if the user at the remote site wants to cancel or backspace or defer the output of a particular job he enters appropriate rjs commands on the operator input channel see appendix d a virtual printer in netrjs has columns exclusive of carriage control rjs will send up to characters of a logical record it finds in a sysout data set if the user wishes to reject or fold records longer than some smaller record size he can do so in his vrbt process if rjs encounters a permanent i o error in reading the disk data set it will notify the user via his console skip forward to the next set of system messages or sysout data set in the same job and continue in the future rjs may be changed to send a lost data marker within the data stream as well as a console message to the user in any case the user will receive notification of termination of output data transfer for each job via messages on his console braden page rfc interim netrjs specifications july if the user detects an error in the stream he can issue a backspace bsp command from his console to repeat the last page of output or a restart rst command to repeat from last sysout data set or the beginning of the job or he can abort the channel by closing his socket if he aborts the channel rjs will simulate a backspace com mand and when the user re opens the channel the job will begin transmission again from an earlier point in the same data set this is true even if the user terminates the current session first and re opens the channel in a later session rjs saves the state of its output streams however before re opening the channel he can defer this job for later output restart it at the beginning or cancel its output see appendix d note that aborting the channel is only effective if rjs has not yet sent the end of data transaction if the user s process ncp or host or the network itself fails dur ing an output operation rjs will act as if the channel had been aborted and the user signed off in no case should a user lose out put from netrjs braden page rfc interim netrjs specifications july appendix a data transfer protocol in netrjs introduction the records in the data transfer channels for virtual card reader printer and punch are generally grouped into transactions pre ceded by headers the transaction header includes a sequence number and the length of the transaction network byte size must be bits in these data streams a transaction is the unit of buffering within the model software internal buffers are bytes therefore ccn cannot transmit or receive a single transaction larger than bytes transactions can be as short as one record however those sites which are concerned with efficiency should send transactions as close as possible to the byte limit there is no necessary connection between physical message boundaries and transactions logical messages the ncp can break the logical message arbitrarily into physical messages at ccn we will choose to have each logical message start a new physical message so the ncp can send the last part of each message without waiting for an expli cit request but a remote site is not required to follow this conven tion each logical record within a transaction begins with an op code byte which contains the channel identification so its value is unique to each channel but constant within a channel this choice provides a convenient way to verify bit synchronization at the receiver and also allows an extension in the future to true multi leaving i e multiplexing all channels within one connection in each direction the only provisions for transmission error detection in the current netrjs protocol are this op code byte to verify bit synchroni zation and the transaction sequence number at the urging of crowther we favor putting an optional bit check sum in the unused bytes of the second level header it is currently assumed that if an error is detected then the channel is to be aborted and the entire transmission repeated to provide automatic retransmission we would have to put in reverse channels for ack nak messages braden page rfc interim netrjs specifications july character sets for an ascii vrbt netrjs will map ascii in the card reader stream into ebcdic and re map the printer stream to ascii by the following rules one to one mapping between the three ascii characters which are not in ebcdic and the three ebcdic characters vertical bar not sign and cent sign respectively which are not in ascii the other six ascii graphics not in ebcdic will be translated on input to an ebcdic question mark the ascii control dc the only one not in ebcdic will be mapped into and from the ebcdic control tm the ebcdic characters not in ascii will be mapped in the printer stream into the ascii question mark meta notation the following description of the netrjs data transfer protocol uses a formal notation derived from that proposed in rfc by bobrow and sutherland the netrjs format is also shown diagramatically in figure the derived notation is both concise and easily readable and we recommend its use for network documentation the notation consists of a series of productions for bit string variables whose names are capitalized each variable name which represents a fixed length field is followed by the length in bits e g seqnumb numbers enclosed in quotes are decimal unless qualified by a leading x meaning hex since each hex digit is bits the length is not shown explicitly in hex numbers for example and x ff both represent a string of one bits the meta syntactic operators are alternative string optional string grouping catenation of bit strings the numerical value of a bit string interpreted as an integer is symbolized by a lower case identifier preceding the string expression and separated by a colon for example in i field i symbolizes the numeric value of the bit string field braden page rfc interim netrjs specifications july finally we use bobrow and sutherland s symbolism for iteration of a sub string string expression n denotes n occurrences of string expression implicitly catenated together here any n is assumed unless n is explicitly restricted protocol definition stream transaction n end of data that is stream the entire sequence of data on a particular open channel is a sequence of n transactions followed by an end of data marker omitted if the sender aborts the channel transaction thead record r f that is a transaction consists of a bit header r records and f filler bits thead x ff f filler seqnumb length x transactions are to be consecutively numbered in the seqnumb field starting with in the first transaction after the channel is re opened the bit length field gives the total length in bits of the r record s which follow for convenience the using site may add f additional filler bits at the end of the transaction to reach a convenient word boundary on his machine the value f is also transmitted in the filler field of thead record compressed truncated rjs will accept intermixed record s which are compressed or truncated in an input stream rjs will send one or the other format in the printer and punch streams to a given vrbt the choice is determined when ccn establishes a terminal id compressed devid string p string i dupcount this form represents a string of i consecutive blanks i dupcount textbyte this form represents string of i consecutive duplicated of textbyte braden page rfc interim netrjs specifications july j length textbyte j this form represents a string of j characters the first two alternatives above in the string production begin with count bytes chosen to be distinguishable from the currently defined telnet control characters in a telnet stream the third count byte would not be needed this is irrelevant to the current netrjs but it would allow the use of compression within a telnet data stream truncated devid n count textbyte n devid devno t devtype devid identifies a particular virtual device i e it identifies a channel devtype specifies the type of device as follows t output to remote operator console input from remote operator console input from card reader output to printer output to card punch unused devno identifies the particular device of type t at this remote site at present only devno is possible end of data x fe signals end of job output or job stack input braden page rfc interim netrjs specifications july appendix b telnet for vrbt operator console the remote operator console connections use the ascii telnet protocol as in rfc specifically the following one to one character mappings are used for the three ebcdic graphics not in ascii ascii in telnet netrjs vertical bar not sign cent sign initially all telnet control characters will be ignored in the future we will implement the telnet break facility to allow a remote user to terminate extensive console output from a command an operator console input line which exceeds characters exclusive of cr lf will be truncated by netrjs netrjs will accept bs to delete a character and can to delete the current line the sequence cr lf terminates each input and output line ht will be translated to a single space in rjs all other ascii control characters will be ignored netrjs will translate the six ascii graphics with no equivalent in ebcdic into the character question mark on input braden page rfc interim netrjs specifications july appendix c carriage control the carriage control characters sent in a printer channel by netrjs conform to ibm s extended usasi code defined by the following table code action before writing record blank space one line before printing space two lines before printing space three lines before printing suppress space before printing skip to channel skip to channel skip to channel skip to channel skip to channel skip to channel skip to channel skip to channel skip to channel a skip to channel b skip to channel c skip to channel braden page rfc interim netrjs specifications july appendix d network rjs command summary terminal control and information command signon first command of a session identifies vrbt by giving its terminal id signoff last command of a session rjs waits for any data transfer in progress to complete and then closes all connections status outputs on the remote operator console a complete list or a summary of all jobs in the system for this vrbt with an indication of their processing status in the model alert outputs on the operator console the special alert message if any from ccn computer operator the alert message is also automatically sent when the user does a signon or whenever the message changes msg sends a message to ccn computer operator or to any other rjs terminal real or virtual a message from the computer operator or another rjs terminal will automatically appear on the remote operator console job control and routing commands under ccn s job management system the default destination for output is the input source thus a job submitted under a given vrbt will be returned to that vrbt i e the same terminal id unless the user s jcl overrides the default destination rjs places print and punch output described for a particular remote terminal into either an active queue or a deferred queue when the user opens his print or punch output channel rjs immediately starts sending job output from the active queue and continues this queue is empty job output in the deferred queue on the other hand must be called for by job name via a reset command from the remote opera tor before rjs will send it the active deferred choice for output from a job is determined by the deferral status of the vrbt when the job is entered the deferral status which is set to the active option when the user signs on may be changed by the set command braden page rfc interim netrjs specifications july set allows the remote user to change certain properties of his vrbt for the duration of the current session a may change the default output destination to be another real or virtual rjs terminal or the central facility b may change the deferral status of the vrbt defer moves the print and punch output for a specified job or set of jobs from the active queue to the deferred queue if the job s output is in the process of being transmitted over a channel rjs aborts the channel and saves the current output location before moving the job to the deferred queue a subsequent reset command will return it to the active queue with an implied backspace bsp reset moves specified job s from deferred to active queue so they may be sent to user a specific list of job names or all jobs can be moved with one reset command route re routes output of specified jobs or all jobs waiting in the active and deferred queues for this vrbt the new destination may be any other rjs terminal or the central facility abort cancels a job which was successfully submitted and awaiting execution or is current executing in the model if he cancelled job was in execution all output it produced ill be returned output stream control commands bsp backspace backspaces output stream within current sysout data set actual amount backspaced depends upon sysout blocking but is typically equivalent to a page on the line printer can cancel a on an output channel can causes the rest of the output in the sysout data set currently being transmitted to be omitted alternatively may omit the rest of the sysout data sets for the job currently being transmitted however the remain ing system and accounting messages will be sent braden page rfc interim netrjs specifications july b on an input channel can causes rjs to ignore the job currently being read however the channel is not aborted as a result and rjs will continue reading in jobs on the channel c can can delete all sysout data sets for specified job s waiting in active or deferred queue rst restart a restarts a specified output stream at the begin ning of the current sysout data set or option ally at the beginning of the job b marks as restarted specified job s whose transmission was earlier interrupted by system failure or user action e g defer command or aborting the channel when rjs transmits these jobs again it will start at the beginning of the partially transmitted sysout data set or option ally at the beginning of the job this function may be applied to jobs in either the active or the deferred queue however if the job was in the deferred queue then rst also moves it to the active queue if the job was never transmitted rst has no effect other than this queue movement repeat sends additional copies of the output of specified jobs eam echoes the card reader stream back in the printer or punch stream or both braden page rfc interim netrjs specifications july rjs v v v ccn server netrjs v v v telnet data xfer server server rd level o o p p c c c e i e o i h o h p h arpa r n r u n a u a u a a p a t p n t n n n network t u t p u n p n c n o t o u t e u e h e r r t l t l l v v v telnet data xfer user server rd level remote virtual user remote batch v v terminal v netrjs user process console v v file file file figure schematic of netrjs operation braden page rfc interim netrjs specifications july transaction x ff filler sequence data length count number in bits x record n text bytes truncated devid n text text record n n blanks compressed devid n char n replications record acter of character n text text x figure data transfer protocol in netrjs this rfc was put into machine readable form for entry into the online rfc archives by tony hansen braden page 