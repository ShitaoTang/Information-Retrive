 network working group ira w cotton request for comments mitre nic june network graphic attention handling introduction discussions of network graphic protocols have thus far primarily dealt with protocols for the description of graphic data to be displayed rfc proposed a network standard graphic data stream ngds which would serve to convey graphic images expressed in the network standard display list ngdl rfc expanded on this proposal and pointed out some shortcomings of the original scheme rfc also replied to rfc with comments and extensions but also recognized that a protocol for graphic display alone is insufficient to support an interactive graphic system topics covered the present paper addresses itself to this requirement the process of attention handling is briefly described various graphic configurations are discussed input devices are surveyed to identify the types of data which they produce and an attention protocol is suggested viewpoint it should be made clear at the onset that the discussion which follow will be from the viewpoint of a graphics user or a graphic application program serving one or more users our concern is with third level protocols only we assume the network is capable of delivering arbitrary bit streams from terminal to graphic application program but don t care how this is accomplished attention handling in order to demonstrate the need for an attention protocol we must first define what is meant by attention and attention handling we therefore begin by borrowing the definitions given in a recent survey of this area cotton page rfc network graphic attention handling june definition graphic attention handling refers to the processes and techniques whereby human inputs to a computer graphic system are serviced an attention event or simply attention is a stimulus to the graphic system such as that resulting from a keystroke or light pen usage which presents information to the system servicing includes accepting or detecting the hardware input processing it to determine its intended meaning and either passing this information to a user routine or taking some immediate action related to the display and or its underlying data structure or both the emphasis is on immediate attention handling is not intended to include any detailed application oriented processing which the attention information may indicate is to be performed thus attention handling may be considered separately from any particular application independent from display considerations not only may attention handling be considered separately from any application but attention generating hardware may be considered separately from display hardware oftentimes it is only coincidental that they come in the same package indeed in some configurations an input be processed locally by the terminal to provide the appropriate response for example a keystroke may or may not cause a character to be displayed on a terminal and the logic causing the display may or may not be local within the terminal the keystroke might be immediately displayed locally as in the case of an alphanumeric display terminal which buffers keystrokes and transmits messages of many characters or it might be transmitted to the host computer and echoed back for display as in teletype like terminals the question is not limited to such simple input devices as keyboards so called intelligent terminals with integrated programmable logic or even complete small computers can process more sophisticated attentions locally and even alter a local distillate of the central host data structure without central knowledge this raises the problem of insuring that the display and the graphic application program do not get out of sync and requires a more expressive protocol from terminal to host processor cotton page rfc network graphic attention handling june system configurations we now turn to a consideration of the evolution of system configurations for computer graphics our intent is to demonstrate that just as display generation has evolved from the output of device dependent codes to a generalized protocol so too should attention generation evolve stand alone configuration figure illustrates the stand alone graphic configuration which was the first and is still the most common as we have stressed input and output are entirely independent and are shown as separate devices in this configuration display code generation and interrupt processing are both done within the graphic application program in the host processor the graphic application is very device dependent stand alone configuration with standardized formats the significant conceptual change occurs when the input and output processors are removed from the graphic application program the graphic application program then generates output and accepts input in a generalized form as illustrated in figure the important fact to note is that in order to accommodate additional different input and or output devices only these input output processing routines must be replaced or altered graphic application programs may be designed without regard to which particular processing routine will be used so far as the application program is concerned device independence has been achieved cotton page rfc network graphic attention handling june figure stand alone graphic configuration output processor output device input processor graphic application input device program serving host using figure stand alone configuration with standardized input and output formats device dependent standard output display list display list processor output device s device dependent standard input input data attention processor graphic application program input device s serving host using cotton page rfc network graphic attention handling june network configuration when the stand alone configuration with standardized formats is implemented on a network the organization illustrated in figure results in the network configuration the graphic application program and the input and output processors may be in different hosts the standardized formats become network standards and now any using host with input output processors conforming to the standard can access the graphic application program in the serving host the network is transparent to the graphic configuration network configuration with intelligent terminal the case of an intelligent graphics terminal configured in the network is illustrated in figure here input and output processors are located within the terminal itself the using host serves only to connect the terminal to the network and in the case of a terminal imp is dispensed with altogether any type of intelligent terminal may access any graphic application program if its the terminals input and output processing routines conform to the network standard as before the network is transparent to the graphic configuration figure network configuration omitted due to complexity figure network configuration with intelligent terminal omitted due to complexity input devices we now turn to a survey of graphic input devices as suggested in rfc the survey will concern itself with the characteristics of the attention information presented when the device is used rather than for example human factors considerations we wish to stress at the onset that we consider all devices equivalent in capability by this we mean that with appropriate programming any device can simulate any other device throughout the survey we will illustrate typical data conversions which might be performed and at times discuss how various devices may be simulated it is convenient to consider the characteristics of classes of devices information about particular commercial devices may be found in reference and elsewhere table i presents a device class summary cotton page rfc network graphic attention handling june pushbuttons perhaps the first and most primitive class of input devices is the pushbutton which presents some unique code to the system when depressed in the simplest case the code is equivalent to the knowledge that the button has been pushed and may be just a flag beyond the basic pushbutton more advanced key devices have been designed in a variety of ways for example each key may be associated with a single bit in a word or with a complex pattern character or byte multiple keys may or may not be able to be struck simultaneously if so their codes being combined in some defined way the salient feature of the function key is that it presents two pieces of information to the system the fact that a keystroke has occurred which may be implicit and some unique code related to it more elaborate keyboards be they teletypes or solid state devices with elaborate overlays are merely special cases of function keys they present the same information attention source plus a unique code the fact that such a code may be associated with a displayable character is at this stage only incidental since keyboards permit the entry of arbitrary codes particular sequences of codes may easily be defined to simulate other devices if local logic permits codes may be accumulated until a complete sequence is entered and then be reformatted to exactly the same format as the device being simulated would have produced pointing devices such as light pens and tablets may be simulated by associating particular keys with screen directions up down right left and using them to position a pointer on the screen face this facilitated on terminals with a hardware connection between keys and cursor symbol analog devices the next most basic class of input devices are those which consist of analog to digital converters these include simple shaft encoders mouse and trackball these devices all produce a digital output proportional to an analog input in this case the rotation of a shaft several of these inputs may be presented together as in the case of the mouse and trackball cotton page rfc network graphic attention handling june these devices all present as input a device identification which may be implicit depending on the hardware method of input together with a number of digital codes from the same number of analog devices the length of the code is arbitrary and may or may not relate to such measures as the maximum raster count of the display screen analog devices are often used as pointing devices by using the input to control the movement of a cursor on the screen face this method is superior to the use of a keyboard since very smooth and rapid movement may be obtained tablets a tablet consists of a flat surface on which x y position may be indicated with a stylus if position changes can be registered rapidly enough arbitrary curves may be digitized by tracing them there are a variety of devices utilizing a variety of techniques comprising this class included are such diverse techniques as variable resistance variable capacitance and ultrasonics to mention a few of the devices on the market the surface may be horizontal or vertical and may even be superimposed on the screen itself a variety of styli have been used including the operator s finger a device the lincoln wand has also been demonstrated which may be manipulated in space to yield a position in three dimensions x y z these devices all present a device identification which may be implicit and a position value which is most often a coordinate pair but which may be a triple light pen light pens are devices which relate the occurrence of an attention to the time in the refresh cycle when a particular point is illuminated on the screen the display generators are generally stopped when the attention occurs to permit either the display list p register or the x y beam position registers or both to be presented as attention data often times this is not enough as what is desired is some value which serves to identify the image which the pen detected in such cases local hardware and or software is utilized to obtain this information which may be as simple as a single identification code or as elaborate as a genealogical push down list cotton page rfc network graphic attention handling june light pens present as input a device identification which may be implicit and at least one of the following memory address x y position item identification light pens may be used to simulate keyboards by displaying light buttons on the screen associated with particular physical buttons detecting on a light button is logically equivalent to pushing the related key internal attentions internal attentions are stimuli arising not from operator action but from various sources within the terminal such as a screen edge violation overflow or a programmed trap such attentions present information in much the same way as the operator input devices already discussed this information consists of an attention source identification equivalent to device identification and which may again be implicit and appropriate data which for the two examples given will generally be a memory address programmed traps are often used to permit mode changes e g enable or disable light pen operation during the execution of the display list edge violation might occur when an image is being relocated in response to operator input we must provide for describing such attentions since then cannot always be handled locally in the terminal logical attentions we may generalize the concept of an attention from a stimulus from a physical source to a logically generated stimulus resulting from some program condition which may or may not cause an interrupt programmed traps were classified as internal attentions because by definition they cause an interrupt or set a hardware flag logical attentions are generally input by setting a software flag which some control program can periodically inspect for example logical attentions may be designed to detect when a software defined edge violation occurs of a region less than full screen or when a light button is picked there is no general form for the information generated by logical attentions since they are programmable rather than hardware bound the best we can do is to say they consist of an identification and appropriate data actually logical attentions most often simulate physical attentions and so each may be placed in one of the classes already described cotton page rfc network graphic attention handling june table i input device summary device class device examples typical output button teletype character function key with overlay character and overlay code buffered keyboard n characters a d converter shaft encoder delta a mouse delta a delta b tablet rand tables and x y lincoln word x y z light pen light pen p memory address light pen x y light pen and local software item name light pen and local software item name stack internal program trap p memory address screen overflow p memory address logical attention any of the above any of the above intelligent terminals as has been indicated the question of what data results from which inputs is complicated when intelligent terminals are considered an intelligent terminal has the ability to modify the data presented by the input device hardware in a sense then all of the outputs of an intelligent terminal may be considered as logical attentions the logical complexity of such attentions may be very great indeed for example such a terminal might be programmed to perform sketching functions so that the net effect of a keystroke and a light pen hit might be the deletion of a portion of the picture together with some coded message to the effect a technique has even been developed which permits the light pen operator to simulate the use of a shaft encoder by twisting his wrist which holding the pen over a tracking symbol some intelligent terminal systems have been developed which permit the terminal operator to modify the picture and the local data structure independently thus the need for a very expressive protocol from terminal to central computer becomes apparent so that notice of such local processing may be communicated to the central cotton page rfc network graphic attention handling june program network protocol guidelines we now suggest a format for a third level network protocol from terminal to serving host which is sufficiently open ended to permit any type of attention to be communicated it is not the intent here to formally propose such a protocol down to the level of this bit means that when such details are decided a network standard attention will have been defined the attention protocol has three basic elements device identification data identification and data device identification the device identification field must be sufficiently large to permit the unique identification of any type of device in the network if two or more identical input devices exist at different nodes in the network it is not necessary to distinguish among them in this field however if a keyboard for example has keys which are logically different such as typewriter keys and function keys the distinction should be made in the identification field rather than requiring an analysis of the data further if two different devices are logically equivalent as a physical keyboard and light buttons they may be so treated by not having identification codes different from each other somewhere in the network and possibly at each host supporting a graphic application a table should be kept of the input device types and their characteristics it may be convenient to organize the device identification field so that a subfield identifies the device class as discussed previously data identification the device identification field is intended to contain a description of the data field which follows information which might be provided here includes number of units bits words bytes of data which follow qualitative description of the data character code memory address cartesian coordinates item name etc and data format information it may be desirable for the sake of uniformity to include this information even when it is somewhat redundant cotton page rfc network graphic attention handling june data lastly comes the data itself perhaps an anticlimax at this point which as should be clear by now may be of arbitrary length and organization bibliography cotton i languages for graphic attention handling proc computer graphics symposium brunel university cotton i and f greatorex data structures and techniques for remote computer graphics proc fjcc pp crocker s proposal for a network standard format for a data stream to control graphics display arpa network working group rfc harslem e and j heafner some thoughts on network graphics arpa network working group rfc keast d survey of graphic input devices machine design august pp mcconnell j response to rfc arpa network working group rfc newman w a graphical technique for numerical input computer j may pp vezza a topic for discussion at the next network working group meeting arpa network working group rfc this rfc was put into machine readable form for entry into the online rfc archives by kelly tardif viag nie cotton page 