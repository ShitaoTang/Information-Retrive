 network working group a shoshani request for comments r long a landsberg system development corporation april comments on nwg rfc and generally we are satisfied with the suggestions for the new host to host protocol however we think that a few refinements may be helpful i it seems that there are two cases of reconnection reconnect from a socket in a local host to another socket in the local host this was referred to in rfc as switch the local sockets can belong to different processes such as the login process switching a connection to another process just created or can belong to the same process such as a process that accepts calls for connections on a particular socket and after a connection is established switches to another of his sockets reconnect from a socket at a local host to a socket in a foreign host we suggest separation of these two cases for the following reasons a reconnection in case is necessary and useful while the usefulness of case is still in doubt b case is simple to implement at least conceptually while case involves an elaborate mechanism of commands because of the asynchronous nature of the network four out of nine commands were suggested to handle case in rfc thus we think that at least in the first usage of the host to host protocol reconnection in case should be left out an additional system call not a command is therefore needed to permit case which is switch ii the close command as suggested in rfc seems to be used for two purposes block a connection and abort a connection to avoid ambiguity it would be desirable to have two commands block and close as suggested in rfc the response for both commands can be the suspend command which acknowledges the reception of block or close commands shoshani et al page rfc comments on nwg rfc april iii after a connection has been established we see no reason for keeping the foreign socket in a local connection table since there is a one to one correspondence between a link number of the foreign host and a foreign socket number we can use the link number in the commands thus except for the rfc command all commands can use link numbers and therefore eliminate a bit foreign socket number in every entry of the connection table size being critical for some hosts we note that if connections will be multiplexed over links as suggested in rfc then the foreign socket would be needed in the connection table iv in rfc the term port was introduced although this is private to every host we have a comment if ports are used such that there is a one to one correspondence between a port for some user and a socket then ports are completely redundant however a host may wish to multiplex ports over connections in which case an additional mechanism is needed to summarize the last four comments we suggest that in the initial version the following system calls and commands will be used most of them in rfc and system calls initiate accept switch listen close transmit commands commands as in rfc pp and in addition block blk close cls v in addition to the above it seems necessary to decide on the following issues one way or the other together with the first version of the protocol perhaps by setting a date for people to express their preferences and decide accordingly all of these issues were mentioned in the meeting at ucla on march but were put aside double padding when a message does not end on a word boundary two possible solutions were mentioned a hosts provide their padding in addition to the imp s padding double padding shoshani et al page rfc comments on nwg rfc april b hosts make sure that all messages end on a word boundary by shifting their messages when necessary and adjusting the marking accordingly echoing there are three apparent possibilities a echoing b no echoing c optional echoing possibly a bit in the leader can be used to designate this option code conversion originally bb n suggested doing the conversion in the imps using ascii as the common code this was rejected mainly because of claims that ascii is not large enough for some uses such as graphics also conversion in the imps may slow them down and take up space which could be used for buffers we feel that it is very desirable to have a common code even when the conversion is not done by the imps such that all incoming text messages are in the same code and only one conversion table is needed outgoing text messages should be converted into this common code obviously the option no translation should be possible for the purpose of binary data or data that is not representable in the common code since every known code can be considered to be too restrictive for some purposes we suggest adopting a network common code ncc and use all of the possible characters for bit code to include the important part of the union of the codes used throughout the network vi our preference to the above issues is as follows a double padding it turns out to be easy for us to get our messages to be sent on a word boundary by shifting the leader of a message and adjusting the marking accordingly rather than the data thus we will prefer solution v b b echoing we prefer no echoing we think that character echoing should be managed locally c code conversion we prefer a network common code initially ascii can be used and then expanded according to the needs of the network this rfc was put into machine readable form for entry into the online rfc archives by alison de la cruz shoshani et al page 